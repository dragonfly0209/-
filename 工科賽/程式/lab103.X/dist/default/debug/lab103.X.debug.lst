

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 26 14:19:40 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	idataCOMRAM
    30  0006C0                     __pidataCOMRAM:
    31                           	opt stack 0
    32                           
    33                           ;initializer for _DD1
    34  0006C0  01                 	db	1
    35                           
    36                           ;initializer for _DD3
    37  0006C1  03                 	db	3
    38                           
    39                           ;initializer for _DD4
    40  0006C2  04                 	db	4
    41                           
    42                           ;initializer for _light
    43  0006C3  03                 	db	3
    44                           
    45                           	psect	idataBANK0
    46  0006B6                     __pidataBANK0:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _led
    50  0006B6  C0                 	db	192
    51  0006B7  F9                 	db	249
    52  0006B8  A4                 	db	164
    53  0006B9  B0                 	db	176
    54  0006BA  99                 	db	153
    55  0006BB  92                 	db	146
    56  0006BC  82                 	db	130
    57  0006BD  D8                 	db	216
    58  0006BE  80                 	db	128
    59  0006BF  90                 	db	144
    60  0000                     _ADRES	set	4035
    61  0000                     _ADCON0	set	4034
    62  0000                     _ADCON1	set	4033
    63  0000                     _ADCON2	set	4032
    64  0000                     _CCP1CON	set	4029
    65  0000                     _CCP2CON	set	4026
    66  0000                     _CCPR1L	set	4030
    67  0000                     _CCPR2L	set	4027
    68  0000                     _INTCON	set	4082
    69  0000                     _LATD	set	3980
    70  0000                     _PR2	set	4043
    71  0000                     _T0CON	set	4053
    72  0000                     _T1CON	set	4045
    73  0000                     _T2CON	set	4042
    74  0000                     _TMR0H	set	4055
    75  0000                     _TMR0L	set	4054
    76  0000                     _TMR1H	set	4047
    77  0000                     _TMR1L	set	4046
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISC	set	3988
    80  0000                     _TRISD	set	3989
    81  0000                     _TRISE	set	3990
    82  0000                     _GO	set	32273
    83  0000                     _INT0IF	set	32657
    84  0000                     _IPEN	set	32391
    85  0000                     _LATB1	set	31825
    86  0000                     _LATB2	set	31826
    87  0000                     _LATB3	set	31827
    88  0000                     _LATB4	set	31828
    89  0000                     _LATB5	set	31829
    90  0000                     _LATC1	set	31833
    91  0000                     _LATC2	set	31834
    92  0000                     _LATD7	set	31847
    93  0000                     _RB0	set	31752
    94  0000                     _TMR0IF	set	32658
    95  0000                     _TRISB0	set	31896
    96  0000                     _TRISB4	set	31900
    97  0000                     _TRISB5	set	31901
    98  0000                     _TRISC1	set	31905
    99  0000                     _TRISC2	set	31906
   100                           
   101                           	psect	nvCOMRAM
   102  000049                     __pnvCOMRAM:
   103                           	opt stack 0
   104  000049                     _r3:
   105                           	opt stack 0
   106  000049                     	ds	2
   107                           
   108                           	psect	nvBANK0
   109  00007F                     __pnvBANK0:
   110                           	opt stack 0
   111  00007F                     _DD2:
   112                           	opt stack 0
   113  00007F                     	ds	1
   114                           
   115                           ; #config settings
   116  0000                     
   117                           	psect	cinit
   118  00062A                     __pcinit:
   119                           	opt stack 0
   120  00062A                     start_initialization:
   121                           	opt stack 0
   122  00062A                     __initialization:
   123                           	opt stack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (33 bytes)
   126  00062A  EE00  F024         	lfsr	0,__pbssCOMRAM
   127  00062E  0E21               	movlw	33
   128  000630                     clear_0:
   129  000630  6AEE               	clrf	postinc0,c
   130  000632  06E8               	decf	wreg,f,c
   131  000634  E1FD               	bnz	clear_0
   132                           
   133                           ; Initialize objects allocated to BANK0 (10 bytes)
   134                           ; load TBLPTR registers with __pidataBANK0
   135  000636  0EB6               	movlw	low __pidataBANK0
   136  000638  6EF6               	movwf	tblptrl,c
   137  00063A  0E06               	movlw	high __pidataBANK0
   138  00063C  6EF7               	movwf	tblptrh,c
   139  00063E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   140  000640  6EF8               	movwf	tblptru,c
   141  000642  EE00  F075         	lfsr	0,__pdataBANK0
   142  000646  EE10 F00A          	lfsr	1,10
   143  00064A                     copy_data0:
   144  00064A  0009               	tblrd		*+
   145  00064C  CFF5 FFEE          	movff	tablat,postinc0
   146  000650  50E5               	movf	postdec1,w,c
   147  000652  50E1               	movf	fsr1l,w,c
   148  000654  E1FA               	bnz	copy_data0
   149                           
   150                           ; Initialize objects allocated to COMRAM (4 bytes)
   151                           ; load TBLPTR registers with __pidataCOMRAM
   152  000656  0EC0               	movlw	low __pidataCOMRAM
   153  000658  6EF6               	movwf	tblptrl,c
   154  00065A  0E06               	movlw	high __pidataCOMRAM
   155  00065C  6EF7               	movwf	tblptrh,c
   156  00065E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   157  000660  6EF8               	movwf	tblptru,c
   158  000662  EE00  F045         	lfsr	0,__pdataCOMRAM
   159  000666  EE10 F004          	lfsr	1,4
   160  00066A                     copy_data1:
   161  00066A  0009               	tblrd		*+
   162  00066C  CFF5 FFEE          	movff	tablat,postinc0
   163  000670  50E5               	movf	postdec1,w,c
   164  000672  50E1               	movf	fsr1l,w,c
   165  000674  E1FA               	bnz	copy_data1
   166  000676                     end_of_initialization:
   167                           	opt stack 0
   168  000676                     __end_of__initialization:
   169                           	opt stack 0
   170  000676  0E00               	movlw	low (__Lmediumconst shr (0+16))
   171  000678  6EF8               	movwf	tblptru,c
   172  00067A  0100               	movlb	0
   173  00067C  EFDE  F001         	goto	_main	;jump to C main() function
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           postdec1	equ	0xFE5
   181                           fsr1l	equ	0xFE1
   182                           
   183                           	psect	bssCOMRAM
   184  000024                     __pbssCOMRAM:
   185                           	opt stack 0
   186  000024                     _ff:
   187                           	opt stack 0
   188  000024                     	ds	4
   189  000028                     _i:
   190                           	opt stack 0
   191  000028                     	ds	4
   192  00002C                     _HH:
   193                           	opt stack 0
   194  00002C                     	ds	2
   195  00002E                     _LL:
   196                           	opt stack 0
   197  00002E                     	ds	2
   198  000030                     _a:
   199                           	opt stack 0
   200  000030                     	ds	2
   201  000032                     _j:
   202                           	opt stack 0
   203  000032                     	ds	2
   204  000034                     _r1:
   205                           	opt stack 0
   206  000034                     	ds	2
   207  000036                     _r16:
   208                           	opt stack 0
   209  000036                     	ds	2
   210  000038                     _r2:
   211                           	opt stack 0
   212  000038                     	ds	2
   213  00003A                     _t2:
   214                           	opt stack 0
   215  00003A                     	ds	2
   216  00003C                     _t41:
   217                           	opt stack 0
   218  00003C                     	ds	2
   219  00003E                     _t42:
   220                           	opt stack 0
   221  00003E                     	ds	2
   222  000040                     _t43:
   223                           	opt stack 0
   224  000040                     	ds	2
   225  000042                     _tick:
   226                           	opt stack 0
   227  000042                     	ds	2
   228  000044                     _dot:
   229                           	opt stack 0
   230  000044                     	ds	1
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	dataCOMRAM
   241  000045                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000045                     _DD1:
   244                           	opt stack 0
   245  000045                     	ds	1
   246  000046                     _DD3:
   247                           	opt stack 0
   248  000046                     	ds	1
   249  000047                     _DD4:
   250                           	opt stack 0
   251  000047                     	ds	1
   252  000048                     _light:
   253                           	opt stack 0
   254  000048                     	ds	1
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           postdec1	equ	0xFE5
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	dataBANK0
   265  000075                     __pdataBANK0:
   266                           	opt stack 0
   267  000075                     _led:
   268                           	opt stack 0
   269  000075                     	ds	10
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	cstackBANK0
   280  000060                     __pcstackBANK0:
   281                           	opt stack 0
   282  000060                     ?___wmul:
   283                           	opt stack 0
   284  000060                     ?___lwdiv:
   285                           	opt stack 0
   286  000060                     ?___lwmod:
   287                           	opt stack 0
   288  000060                     ?___lldiv:
   289                           	opt stack 0
   290  000060                     ___wmul@multiplier:
   291                           	opt stack 0
   292  000060                     ___lwdiv@dividend:
   293                           	opt stack 0
   294  000060                     ___lwmod@dividend:
   295                           	opt stack 0
   296  000060                     ___lldiv@dividend:
   297                           	opt stack 0
   298                           
   299                           ; 4 bytes @ 0x0
   300  000060                     	ds	2
   301  000062                     ___wmul@multiplicand:
   302                           	opt stack 0
   303  000062                     ___lwdiv@divisor:
   304                           	opt stack 0
   305  000062                     ___lwmod@divisor:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x2
   309  000062                     	ds	2
   310  000064                     ___lwdiv@counter:
   311                           	opt stack 0
   312  000064                     ___lwmod@counter:
   313                           	opt stack 0
   314  000064                     ___wmul@product:
   315                           	opt stack 0
   316  000064                     ___lldiv@divisor:
   317                           	opt stack 0
   318                           
   319                           ; 4 bytes @ 0x4
   320  000064                     	ds	1
   321  000065                     ___lwdiv@quotient:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x5
   325  000065                     	ds	2
   326  000067                     led_dec@vh:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x7
   330  000067                     	ds	1
   331  000068                     ___lldiv@quotient:
   332                           	opt stack 0
   333                           
   334                           ; 4 bytes @ 0x8
   335  000068                     	ds	1
   336  000069                     led_dec@vl:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x9
   340  000069                     	ds	2
   341  00006B                     
   342                           ; 0 bytes @ 0xB
   343  00006B                     	ds	1
   344  00006C                     ___lldiv@counter:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0xC
   348  00006C                     	ds	1
   349  00006D                     ?_HZ:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0xD
   353  00006D                     	ds	2
   354  00006F                     ??_HZ:
   355                           
   356                           ; 0 bytes @ 0xF
   357  00006F                     	ds	2
   358  000071                     _main$670:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x11
   362  000071                     	ds	2
   363  000073                     _main$671:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x13
   367  000073                     	ds	2
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postdec1	equ	0xFE5
   375                           fsr1l	equ	0xFE1
   376                           
   377                           	psect	cstackCOMRAM
   378  000001                     __pcstackCOMRAM:
   379                           	opt stack 0
   380  000001                     ??_hisr:
   381  000001                     
   382                           ; 0 bytes @ 0x0
   383  000001                     	ds	17
   384  000012                     ??_led_scan:
   385                           
   386                           ; 0 bytes @ 0x11
   387  000012                     	ds	3
   388  000015                     led_scan@dd:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x14
   392  000015                     	ds	1
   393  000016                     ??_lisr:
   394                           
   395                           ; 0 bytes @ 0x15
   396  000016                     	ds	14
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 84 in file "lab103.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;		None               void
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   425 ;;      Params:         0       0       0       0       0       0       0       0       0
   426 ;;      Locals:         0       4       0       0       0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0
   428 ;;      Totals:         0       4       0       0       0       0       0       0       0
   429 ;;Total ram usage:        4 bytes
   430 ;; Hardware stack levels required when called:    5
   431 ;; This function calls:
   432 ;;		_HZ
   433 ;;		___lwdiv
   434 ;;		___lwmod
   435 ;;		_led_dec
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text0
   442  0003BC                     __ptext0:
   443                           	opt stack 0
   444  0003BC                     _main:
   445                           	opt stack 25
   446                           
   447                           ;lab103.c: 86: TRISD=0;
   448                           
   449                           ;incstack = 0
   450  0003BC  0E00               	movlw	0
   451  0003BE  6E95               	movwf	3989,c	;volatile
   452                           
   453                           ;lab103.c: 87: TRISB=0x01;
   454  0003C0  0E01               	movlw	1
   455  0003C2  6E93               	movwf	3987,c	;volatile
   456                           
   457                           ;lab103.c: 88: TRISE=0x03;
   458  0003C4  0E03               	movlw	3
   459  0003C6  6E96               	movwf	3990,c	;volatile
   460                           
   461                           ;lab103.c: 89: TRISC=0;
   462  0003C8  0E00               	movlw	0
   463  0003CA  6E94               	movwf	3988,c	;volatile
   464                           
   465                           ;lab103.c: 90: ADCON1=0x0f;
   466  0003CC  0E0F               	movlw	15
   467  0003CE  6EC1               	movwf	4033,c	;volatile
   468                           
   469                           ;lab103.c: 91: r16=0;
   470  0003D0  0E00               	movlw	0
   471  0003D2  6E37               	movwf	_r16+1,c
   472  0003D4  0E00               	movlw	0
   473  0003D6  6E36               	movwf	_r16,c
   474                           
   475                           ;lab103.c: 93: IPEN=1;
   476  0003D8  8ED0               	bsf	4048,7,c	;volatile
   477                           
   478                           ;lab103.c: 94: INTCON=0b11110000;
   479  0003DA  0EF0               	movlw	240
   480  0003DC  6EF2               	movwf	intcon,c	;volatile
   481                           
   482                           ;lab103.c: 95: T0CON=0x88;
   483  0003DE  0E88               	movlw	136
   484  0003E0  6ED5               	movwf	4053,c	;volatile
   485                           
   486                           ;lab103.c: 96: TMR0H=(65536-4000)>>8;
   487  0003E2  0EF0               	movlw	240
   488  0003E4  6ED7               	movwf	4055,c	;volatile
   489                           
   490                           ;lab103.c: 97: TMR0L=(65536-4000);
   491  0003E6  0E60               	movlw	96
   492  0003E8  6ED6               	movwf	4054,c	;volatile
   493  0003EA                     l1397:
   494                           
   495                           ;lab103.c: 100: {
   496                           ;lab103.c: 101: r3=HZ();
   497  0003EA  EC54  F000         	call	_HZ	;wreg free
   498  0003EE  0100               	movlb	0	; () banked
   499  0003F0  C06D  F049         	movff	?_HZ,_r3
   500  0003F4  0100               	movlb	0	; () banked
   501  0003F6  C06E  F04A         	movff	?_HZ+1,_r3+1
   502                           
   503                           ; BSR set to: 0
   504                           ;lab103.c: 102: led_dec(r3/100,r3%100);
   505  0003FA  C049  F060         	movff	_r3,___lwdiv@dividend
   506  0003FE  C04A  F061         	movff	_r3+1,___lwdiv@dividend+1
   507  000402  0E00               	movlw	0
   508  000404  0100               	movlb	0	; () banked
   509  000406  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
   510  000408  0E64               	movlw	100
   511  00040A  0100               	movlb	0	; () banked
   512  00040C  6F62               	movwf	___lwdiv@divisor& (0+255),b
   513  00040E  ECA9  F002         	call	___lwdiv	;wreg free
   514  000412  0100               	movlb	0	; () banked
   515  000414  C060  F071         	movff	?___lwdiv,_main$670
   516  000418  0100               	movlb	0	; () banked
   517  00041A  C061  F072         	movff	?___lwdiv+1,_main$670+1
   518                           
   519                           ; BSR set to: 0
   520                           ;lab103.c: 102: led_dec(r3/100,r3%100);
   521  00041E  C049  F060         	movff	_r3,___lwmod@dividend
   522  000422  C04A  F061         	movff	_r3+1,___lwmod@dividend+1
   523  000426  0E00               	movlw	0
   524  000428  0100               	movlb	0	; () banked
   525  00042A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
   526  00042C  0E64               	movlw	100
   527  00042E  0100               	movlb	0	; () banked
   528  000430  6F62               	movwf	___lwmod@divisor& (0+255),b
   529  000432  ECE5  F002         	call	___lwmod	;wreg free
   530  000436  0100               	movlb	0	; () banked
   531  000438  C060  F073         	movff	?___lwmod,_main$671
   532  00043C  0100               	movlb	0	; () banked
   533  00043E  C061  F074         	movff	?___lwmod+1,_main$671+1
   534                           
   535                           ; BSR set to: 0
   536                           ;lab103.c: 102: led_dec(r3/100,r3%100);
   537  000442  C071  F067         	movff	_main$670,led_dec@vh
   538  000446  C072  F068         	movff	_main$670+1,led_dec@vh+1
   539  00044A  C073  F069         	movff	_main$671,led_dec@vl
   540  00044E  C074  F06A         	movff	_main$671+1,led_dec@vl+1
   541  000452  EC6B  F002         	call	_led_dec	;wreg free
   542  000456  D7C9               	goto	l1397
   543  000458                     __end_of_main:
   544                           	opt stack 0
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           intcon	equ	0xFF2
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           
   555 ;; *************** function _led_dec *****************
   556 ;; Defined at:
   557 ;;		line 104 in file "led7.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  vh              2    7[BANK0 ] unsigned int 
   560 ;;  vl              2    9[BANK0 ] unsigned int 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;		None               void
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       4       0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0
   575 ;;      Totals:         0       4       0       0       0       0       0       0       0
   576 ;;Total ram usage:        4 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    4
   579 ;; This function calls:
   580 ;;		___lwdiv
   581 ;;		___lwmod
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text1
   588  0004D6                     __ptext1:
   589                           	opt stack 0
   590  0004D6                     _led_dec:
   591                           	opt stack 25
   592                           
   593                           ;led7.c: 106: DD1=vh/10;
   594                           
   595                           ;incstack = 0
   596  0004D6  C067  F060         	movff	led_dec@vh,___lwdiv@dividend
   597  0004DA  C068  F061         	movff	led_dec@vh+1,___lwdiv@dividend+1
   598  0004DE  0E00               	movlw	0
   599  0004E0  0100               	movlb	0	; () banked
   600  0004E2  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
   601  0004E4  0E0A               	movlw	10
   602  0004E6  0100               	movlb	0	; () banked
   603  0004E8  6F62               	movwf	___lwdiv@divisor& (0+255),b
   604  0004EA  ECA9  F002         	call	___lwdiv	;wreg free
   605  0004EE  0100               	movlb	0	; () banked
   606  0004F0  5160               	movf	?___lwdiv& (0+255),w,b
   607  0004F2  6E45               	movwf	_DD1,c
   608                           
   609                           ;led7.c: 107: DD2=vh%10;
   610  0004F4  C067  F060         	movff	led_dec@vh,___lwmod@dividend
   611  0004F8  C068  F061         	movff	led_dec@vh+1,___lwmod@dividend+1
   612  0004FC  0E00               	movlw	0
   613  0004FE  0100               	movlb	0	; () banked
   614  000500  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
   615  000502  0E0A               	movlw	10
   616  000504  0100               	movlb	0	; () banked
   617  000506  6F62               	movwf	___lwmod@divisor& (0+255),b
   618  000508  ECE5  F002         	call	___lwmod	;wreg free
   619  00050C  0100               	movlb	0	; () banked
   620  00050E  5160               	movf	?___lwmod& (0+255),w,b
   621  000510  0100               	movlb	0	; () banked
   622  000512  6F7F               	movwf	_DD2& (0+255),b
   623                           
   624                           ;led7.c: 108: DD3=vl/10;
   625  000514  C069  F060         	movff	led_dec@vl,___lwdiv@dividend
   626  000518  C06A  F061         	movff	led_dec@vl+1,___lwdiv@dividend+1
   627  00051C  0E00               	movlw	0
   628  00051E  0100               	movlb	0	; () banked
   629  000520  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
   630  000522  0E0A               	movlw	10
   631  000524  0100               	movlb	0	; () banked
   632  000526  6F62               	movwf	___lwdiv@divisor& (0+255),b
   633  000528  ECA9  F002         	call	___lwdiv	;wreg free
   634  00052C  0100               	movlb	0	; () banked
   635  00052E  5160               	movf	?___lwdiv& (0+255),w,b
   636  000530  6E46               	movwf	_DD3,c
   637                           
   638                           ;led7.c: 109: DD4=vl%10;
   639  000532  C069  F060         	movff	led_dec@vl,___lwmod@dividend
   640  000536  C06A  F061         	movff	led_dec@vl+1,___lwmod@dividend+1
   641  00053A  0E00               	movlw	0
   642  00053C  0100               	movlb	0	; () banked
   643  00053E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
   644  000540  0E0A               	movlw	10
   645  000542  0100               	movlb	0	; () banked
   646  000544  6F62               	movwf	___lwmod@divisor& (0+255),b
   647  000546  ECE5  F002         	call	___lwmod	;wreg free
   648  00054A  0100               	movlb	0	; () banked
   649  00054C  5160               	movf	?___lwmod& (0+255),w,b
   650  00054E  6E47               	movwf	_DD4,c
   651                           
   652                           ; BSR set to: 0
   653  000550  0012               	return	
   654  000552                     __end_of_led_dec:
   655                           	opt stack 0
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           intcon	equ	0xFF2
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           postdec1	equ	0xFE5
   664                           fsr1l	equ	0xFE1
   665                           
   666 ;; *************** function ___lwmod *****************
   667 ;; Defined at:
   668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  dividend        2    0[BANK0 ] unsigned int 
   671 ;;  divisor         2    2[BANK0 ] unsigned int 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  counter         1    4[BANK0 ] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  2    0[BANK0 ] unsigned int 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   683 ;;      Params:         0       4       0       0       0       0       0       0       0
   684 ;;      Locals:         0       1       0       0       0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0
   686 ;;      Totals:         0       5       0       0       0       0       0       0       0
   687 ;;Total ram usage:        5 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    3
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		_main
   694 ;;		_led_dec
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text2
   699  0005CA                     __ptext2:
   700                           	opt stack 0
   701  0005CA                     ___lwmod:
   702                           	opt stack 25
   703                           
   704                           ; BSR set to: 0
   705                           ;incstack = 0
   706  0005CA  0100               	movlb	0	; () banked
   707  0005CC  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
   708  0005CE  1162               	iorwf	___lwmod@divisor& (0+255),w,b
   709  0005D0  B4D8               	btfsc	status,2,c
   710  0005D2  D026               	goto	l782
   711                           
   712                           ; BSR set to: 0
   713  0005D4  0E01               	movlw	1
   714  0005D6  0100               	movlb	0	; () banked
   715  0005D8  6F64               	movwf	___lwmod@counter& (0+255),b
   716  0005DA  D006               	goto	l1353
   717  0005DC                     l1351:
   718                           
   719                           ; BSR set to: 0
   720  0005DC  0100               	movlb	0	; () banked
   721  0005DE  90D8               	bcf	status,0,c
   722  0005E0  3762               	rlcf	___lwmod@divisor& (0+255),f,b
   723  0005E2  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
   724  0005E4  0100               	movlb	0	; () banked
   725  0005E6  2B64               	incf	___lwmod@counter& (0+255),f,b
   726  0005E8                     l1353:
   727                           
   728                           ; BSR set to: 0
   729  0005E8  0100               	movlb	0	; () banked
   730  0005EA  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
   731  0005EC  D7F7               	goto	l1351
   732  0005EE                     l1355:
   733                           
   734                           ; BSR set to: 0
   735  0005EE  0100               	movlb	0	; () banked
   736  0005F0  5162               	movf	___lwmod@divisor& (0+255),w,b
   737  0005F2  0100               	movlb	0	; () banked
   738  0005F4  5D60               	subwf	___lwmod@dividend& (0+255),w,b
   739  0005F6  0100               	movlb	0	; () banked
   740  0005F8  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
   741  0005FA  0100               	movlb	0	; () banked
   742  0005FC  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
   743  0005FE  A0D8               	btfss	status,0,c
   744  000600  D008               	goto	l1359
   745                           
   746                           ; BSR set to: 0
   747  000602  0100               	movlb	0	; () banked
   748  000604  5162               	movf	___lwmod@divisor& (0+255),w,b
   749  000606  0100               	movlb	0	; () banked
   750  000608  5F60               	subwf	___lwmod@dividend& (0+255),f,b
   751  00060A  0100               	movlb	0	; () banked
   752  00060C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
   753  00060E  0100               	movlb	0	; () banked
   754  000610  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
   755  000612                     l1359:
   756                           
   757                           ; BSR set to: 0
   758  000612  0100               	movlb	0	; () banked
   759  000614  90D8               	bcf	status,0,c
   760  000616  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
   761  000618  3362               	rrcf	___lwmod@divisor& (0+255),f,b
   762                           
   763                           ; BSR set to: 0
   764  00061A  0100               	movlb	0	; () banked
   765  00061C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
   766  00061E  D7E7               	goto	l1355
   767  000620                     l782:
   768                           
   769                           ; BSR set to: 0
   770  000620  C060  F060         	movff	___lwmod@dividend,?___lwmod
   771  000624  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
   772                           
   773                           ; BSR set to: 0
   774  000628  0012               	return	
   775  00062A                     __end_of___lwmod:
   776                           	opt stack 0
   777                           tblptru	equ	0xFF8
   778                           tblptrh	equ	0xFF7
   779                           tblptrl	equ	0xFF6
   780                           tablat	equ	0xFF5
   781                           intcon	equ	0xFF2
   782                           postinc0	equ	0xFEE
   783                           wreg	equ	0xFE8
   784                           postdec1	equ	0xFE5
   785                           fsr1l	equ	0xFE1
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function ___lwdiv *****************
   789 ;; Defined at:
   790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  dividend        2    0[BANK0 ] unsigned int 
   793 ;;  divisor         2    2[BANK0 ] unsigned int 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  quotient        2    5[BANK0 ] unsigned int 
   796 ;;  counter         1    4[BANK0 ] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  2    0[BANK0 ] unsigned int 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       4       0       0       0       0       0       0       0
   807 ;;      Locals:         0       3       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         0       7       0       0       0       0       0       0       0
   810 ;;Total ram usage:        7 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    3
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;;		_led_dec
   818 ;;		_pwm0
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text3
   823  000552                     __ptext3:
   824                           	opt stack 0
   825  000552                     ___lwdiv:
   826                           	opt stack 25
   827                           
   828                           ; BSR set to: 0
   829                           ;incstack = 0
   830  000552  0E00               	movlw	0
   831  000554  0100               	movlb	0	; () banked
   832  000556  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
   833  000558  0E00               	movlw	0
   834  00055A  0100               	movlb	0	; () banked
   835  00055C  6F65               	movwf	___lwdiv@quotient& (0+255),b
   836                           
   837                           ; BSR set to: 0
   838  00055E  0100               	movlb	0	; () banked
   839  000560  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
   840  000562  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
   841  000564  B4D8               	btfsc	status,2,c
   842  000566  D02C               	goto	l772
   843                           
   844                           ; BSR set to: 0
   845  000568  0E01               	movlw	1
   846  00056A  0100               	movlb	0	; () banked
   847  00056C  6F64               	movwf	___lwdiv@counter& (0+255),b
   848  00056E  D006               	goto	l1333
   849  000570                     l1331:
   850                           
   851                           ; BSR set to: 0
   852  000570  0100               	movlb	0	; () banked
   853  000572  90D8               	bcf	status,0,c
   854  000574  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
   855  000576  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
   856  000578  0100               	movlb	0	; () banked
   857  00057A  2B64               	incf	___lwdiv@counter& (0+255),f,b
   858  00057C                     l1333:
   859                           
   860                           ; BSR set to: 0
   861  00057C  0100               	movlb	0	; () banked
   862  00057E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
   863  000580  D7F7               	goto	l1331
   864  000582                     l1335:
   865                           
   866                           ; BSR set to: 0
   867  000582  0100               	movlb	0	; () banked
   868  000584  90D8               	bcf	status,0,c
   869  000586  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
   870  000588  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
   871                           
   872                           ; BSR set to: 0
   873  00058A  0100               	movlb	0	; () banked
   874  00058C  5162               	movf	___lwdiv@divisor& (0+255),w,b
   875  00058E  0100               	movlb	0	; () banked
   876  000590  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
   877  000592  0100               	movlb	0	; () banked
   878  000594  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
   879  000596  0100               	movlb	0	; () banked
   880  000598  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
   881  00059A  A0D8               	btfss	status,0,c
   882  00059C  D00A               	goto	l1343
   883                           
   884                           ; BSR set to: 0
   885  00059E  0100               	movlb	0	; () banked
   886  0005A0  5162               	movf	___lwdiv@divisor& (0+255),w,b
   887  0005A2  0100               	movlb	0	; () banked
   888  0005A4  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
   889  0005A6  0100               	movlb	0	; () banked
   890  0005A8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
   891  0005AA  0100               	movlb	0	; () banked
   892  0005AC  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
   893                           
   894                           ; BSR set to: 0
   895  0005AE  0100               	movlb	0	; () banked
   896  0005B0  8165               	bsf	___lwdiv@quotient& (0+255),0,b
   897  0005B2                     l1343:
   898                           
   899                           ; BSR set to: 0
   900  0005B2  0100               	movlb	0	; () banked
   901  0005B4  90D8               	bcf	status,0,c
   902  0005B6  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
   903  0005B8  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
   904                           
   905                           ; BSR set to: 0
   906  0005BA  0100               	movlb	0	; () banked
   907  0005BC  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
   908  0005BE  D7E1               	goto	l1335
   909  0005C0                     l772:
   910                           
   911                           ; BSR set to: 0
   912  0005C0  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
   913  0005C4  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
   914                           
   915                           ; BSR set to: 0
   916  0005C8  0012               	return	
   917  0005CA                     __end_of___lwdiv:
   918                           	opt stack 0
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           intcon	equ	0xFF2
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           postdec1	equ	0xFE5
   927                           fsr1l	equ	0xFE1
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function _HZ *****************
   931 ;; Defined at:
   932 ;;		line 46 in file "lab103.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  2   13[BANK0 ] unsigned int 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   946 ;;      Params:         0       2       0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       2       0       0       0       0       0       0       0
   949 ;;      Totals:         0       4       0       0       0       0       0       0       0
   950 ;;Total ram usage:        4 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    4
   953 ;; This function calls:
   954 ;;		___lldiv
   955 ;;		___wmul
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text4
   962  0000A8                     __ptext4:
   963                           	opt stack 0
   964  0000A8                     _HZ:
   965                           	opt stack 25
   966                           
   967                           ;lab103.c: 49: T1CON=0xa1;
   968                           
   969                           ; BSR set to: 0
   970                           ;incstack = 0
   971  0000A8  0EA1               	movlw	161
   972  0000AA  6ECD               	movwf	4045,c	;volatile
   973                           
   974                           ;lab103.c: 50: HH=LL=t41=t42=t43=0;
   975  0000AC  0E00               	movlw	0
   976  0000AE  6E41               	movwf	_t43+1,c
   977  0000B0  0E00               	movlw	0
   978  0000B2  6E40               	movwf	_t43,c
   979  0000B4  C040  F03E         	movff	_t43,_t42
   980  0000B8  C041  F03F         	movff	_t43+1,_t42+1
   981  0000BC  C03E  F03C         	movff	_t42,_t41
   982  0000C0  C03F  F03D         	movff	_t42+1,_t41+1
   983  0000C4  C03C  F02E         	movff	_t41,_LL
   984  0000C8  C03D  F02F         	movff	_t41+1,_LL+1
   985  0000CC  C02E  F02C         	movff	_LL,_HH
   986  0000D0  C02F  F02D         	movff	_LL+1,_HH+1
   987                           
   988                           ;lab103.c: 51: ADCON1=0x0f;
   989  0000D4  0E0F               	movlw	15
   990  0000D6  6EC1               	movwf	4033,c	;volatile
   991                           
   992                           ;lab103.c: 52: TRISB0=1;
   993  0000D8  8093               	bsf	3987,0,c	;volatile
   994                           
   995                           ;lab103.c: 54: while(RB0==1)
   996  0000DA  D005               	goto	l98
   997  0000DC                     l101:
   998                           
   999                           ;lab103.c: 57: t41=TMR1L;
  1000  0000DC  CFCE F03C          	movff	4046,_t41	;volatile
  1001  0000E0  6A3D               	clrf	_t41+1,c
  1002  0000E2                     l100:
  1003  0000E2  A081               	btfss	3969,0,c	;volatile
  1004  0000E4  D7FB               	goto	l101
  1005  0000E6                     l98:
  1006  0000E6  B081               	btfsc	3969,0,c	;volatile
  1007  0000E8  D7FC               	goto	l100
  1008                           
  1009                           ;lab103.c: 58: t41+=(unsigned int)TMR1H<<8;
  1010  0000EA  50CF               	movf	4047,w,c	;volatile
  1011  0000EC  263D               	addwf	_t41+1,f,c
  1012                           
  1013                           ;lab103.c: 60: while(RB0==1)
  1014  0000EE  D003               	goto	l104
  1015  0000F0                     l105:
  1016                           
  1017                           ;lab103.c: 61: t42=TMR1L;
  1018  0000F0  CFCE F03E          	movff	4046,_t42	;volatile
  1019  0000F4  6A3F               	clrf	_t42+1,c
  1020  0000F6                     l104:
  1021  0000F6  B081               	btfsc	3969,0,c	;volatile
  1022  0000F8  D7FB               	goto	l105
  1023                           
  1024                           ;lab103.c: 62: t42+=(unsigned int)TMR1H<<8;
  1025  0000FA  50CF               	movf	4047,w,c	;volatile
  1026  0000FC  263F               	addwf	_t42+1,f,c
  1027                           
  1028                           ;lab103.c: 64: while(RB0==0)
  1029  0000FE  D003               	goto	l107
  1030  000100                     l108:
  1031                           
  1032                           ;lab103.c: 65: t43=TMR1L;
  1033  000100  CFCE F040          	movff	4046,_t43	;volatile
  1034  000104  6A41               	clrf	_t43+1,c
  1035  000106                     l107:
  1036  000106  A081               	btfss	3969,0,c	;volatile
  1037  000108  D7FB               	goto	l108
  1038                           
  1039                           ;lab103.c: 66: t43+=(unsigned int)TMR1H<<8;
  1040  00010A  50CF               	movf	4047,w,c	;volatile
  1041  00010C  2641               	addwf	_t43+1,f,c
  1042                           
  1043                           ;lab103.c: 68: LL=t43-t42;
  1044  00010E  C03E  F06F         	movff	_t42,??_HZ
  1045  000112  C03F  F070         	movff	_t42+1,??_HZ+1
  1046  000116  0100               	movlb	0	; () banked
  1047  000118  1F6F               	comf	??_HZ& (0+255),f,b
  1048  00011A  1F70               	comf	(??_HZ+1)& (0+255),f,b
  1049  00011C  4B6F               	infsnz	??_HZ& (0+255),f,b
  1050  00011E  2B70               	incf	(??_HZ+1)& (0+255),f,b
  1051  000120  5040               	movf	_t43,w,c
  1052  000122  0100               	movlb	0	; () banked
  1053  000124  256F               	addwf	??_HZ& (0+255),w,b
  1054  000126  6E2E               	movwf	_LL,c
  1055  000128  5041               	movf	_t43+1,w,c
  1056  00012A  0100               	movlb	0	; () banked
  1057  00012C  2170               	addwfc	(??_HZ+1)& (0+255),w,b
  1058  00012E  6E2F               	movwf	_LL+1,c
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;lab103.c: 69: HH=t42-t41;
  1062  000130  C03C  F06F         	movff	_t41,??_HZ
  1063  000134  C03D  F070         	movff	_t41+1,??_HZ+1
  1064  000138  0100               	movlb	0	; () banked
  1065  00013A  1F6F               	comf	??_HZ& (0+255),f,b
  1066  00013C  1F70               	comf	(??_HZ+1)& (0+255),f,b
  1067  00013E  4B6F               	infsnz	??_HZ& (0+255),f,b
  1068  000140  2B70               	incf	(??_HZ+1)& (0+255),f,b
  1069  000142  503E               	movf	_t42,w,c
  1070  000144  0100               	movlb	0	; () banked
  1071  000146  256F               	addwf	??_HZ& (0+255),w,b
  1072  000148  6E2C               	movwf	_HH,c
  1073  00014A  503F               	movf	_t42+1,w,c
  1074  00014C  0100               	movlb	0	; () banked
  1075  00014E  2170               	addwfc	(??_HZ+1)& (0+255),w,b
  1076  000150  6E2D               	movwf	_HH+1,c
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;lab103.c: 70: LL+=HH;
  1080  000152  502C               	movf	_HH,w,c
  1081  000154  262E               	addwf	_LL,f,c
  1082  000156  502D               	movf	_HH+1,w,c
  1083  000158  222F               	addwfc	_LL+1,f,c
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;lab103.c: 71: HH*=100;
  1087  00015A  C02C  F060         	movff	_HH,___wmul@multiplier
  1088  00015E  C02D  F061         	movff	_HH+1,___wmul@multiplier+1
  1089  000162  0E00               	movlw	0
  1090  000164  0100               	movlb	0	; () banked
  1091  000166  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1092  000168  0E64               	movlw	100
  1093  00016A  0100               	movlb	0	; () banked
  1094  00016C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1095  00016E  EC40  F003         	call	___wmul	;wreg free
  1096  000172  0100               	movlb	0	; () banked
  1097  000174  C060  F02C         	movff	?___wmul,_HH
  1098  000178  0100               	movlb	0	; () banked
  1099  00017A  C061  F02D         	movff	?___wmul+1,_HH+1
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;lab103.c: 72: HH+=LL/2;
  1103  00017E  90D8               	bcf	status,0,c
  1104  000180  302F               	rrcf	_LL+1,w,c
  1105  000182  0100               	movlb	0	; () banked
  1106  000184  6F70               	movwf	(??_HZ+1)& (0+255),b
  1107  000186  302E               	rrcf	_LL,w,c
  1108  000188  0100               	movlb	0	; () banked
  1109  00018A  6F6F               	movwf	??_HZ& (0+255),b
  1110  00018C  0100               	movlb	0	; () banked
  1111  00018E  516F               	movf	??_HZ& (0+255),w,b
  1112  000190  262C               	addwf	_HH,f,c
  1113  000192  0100               	movlb	0	; () banked
  1114  000194  5170               	movf	(??_HZ+1)& (0+255),w,b
  1115  000196  222D               	addwfc	_HH+1,f,c
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;lab103.c: 73: ff=1000000;
  1119  000198  0E40               	movlw	64
  1120  00019A  6E24               	movwf	_ff,c
  1121  00019C  0E42               	movlw	66
  1122  00019E  6E25               	movwf	_ff+1,c
  1123  0001A0  0E0F               	movlw	15
  1124  0001A2  6E26               	movwf	_ff+2,c
  1125  0001A4  0E00               	movlw	0
  1126  0001A6  6E27               	movwf	_ff+3,c
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;lab103.c: 74: ff/=LL;
  1130  0001A8  C024  F060         	movff	_ff,___lldiv@dividend
  1131  0001AC  C025  F061         	movff	_ff+1,___lldiv@dividend+1
  1132  0001B0  C026  F062         	movff	_ff+2,___lldiv@dividend+2
  1133  0001B4  C027  F063         	movff	_ff+3,___lldiv@dividend+3
  1134  0001B8  0100               	movlb	0	; () banked
  1135  0001BA  C02E  F064         	movff	_LL,___lldiv@divisor
  1136  0001BE  0100               	movlb	0	; () banked
  1137  0001C0  C02F  F065         	movff	_LL+1,___lldiv@divisor+1
  1138  0001C4  0100               	movlb	0	; () banked
  1139  0001C6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  1140  0001C8  0100               	movlb	0	; () banked
  1141  0001CA  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  1142  0001CC  EC74  F001         	call	___lldiv	;wreg free
  1143  0001D0  C060  F024         	movff	?___lldiv,_ff
  1144  0001D4  C061  F025         	movff	?___lldiv+1,_ff+1
  1145  0001D8  C062  F026         	movff	?___lldiv+2,_ff+2
  1146  0001DC  C063  F027         	movff	?___lldiv+3,_ff+3
  1147                           
  1148                           ;lab103.c: 75: return ff;
  1149  0001E0  C024  F06D         	movff	_ff,?_HZ
  1150  0001E4  C025  F06E         	movff	_ff+1,?_HZ+1
  1151  0001E8  0012               	return	
  1152  0001EA                     __end_of_HZ:
  1153                           	opt stack 0
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           intcon	equ	0xFF2
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           postdec1	equ	0xFE5
  1162                           fsr1l	equ	0xFE1
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function ___wmul *****************
  1166 ;; Defined at:
  1167 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1170 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  product         2    4[BANK0 ] unsigned int 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  2    0[BANK0 ] unsigned int 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, prodl, prodh
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       4       0       0       0       0       0       0       0
  1183 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        6 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_HZ
  1193 ;;		_pwm0
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text5
  1198  000680                     __ptext5:
  1199                           	opt stack 0
  1200  000680                     ___wmul:
  1201                           	opt stack 25
  1202                           
  1203                           ;incstack = 0
  1204  000680  0100               	movlb	0	; () banked
  1205  000682  5160               	movf	___wmul@multiplier& (0+255),w,b
  1206  000684  0100               	movlb	0	; () banked
  1207  000686  0362               	mulwf	___wmul@multiplicand& (0+255),b
  1208  000688  CFF3 F064          	movff	prodl,___wmul@product
  1209  00068C  CFF4 F065          	movff	prodh,___wmul@product+1
  1210  000690  0100               	movlb	0	; () banked
  1211  000692  5160               	movf	___wmul@multiplier& (0+255),w,b
  1212  000694  0100               	movlb	0	; () banked
  1213  000696  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1214  000698  50F3               	movf	prodl,w,c
  1215  00069A  0100               	movlb	0	; () banked
  1216  00069C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  1217  00069E  0100               	movlb	0	; () banked
  1218  0006A0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1219  0006A2  0100               	movlb	0	; () banked
  1220  0006A4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  1221  0006A6  50F3               	movf	prodl,w,c
  1222  0006A8  0100               	movlb	0	; () banked
  1223  0006AA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  1224                           
  1225                           ; BSR set to: 0
  1226  0006AC  C064  F060         	movff	___wmul@product,?___wmul
  1227  0006B0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  1228                           
  1229                           ; BSR set to: 0
  1230                           
  1231                           ; BSR set to: 0
  1232  0006B4  0012               	return	
  1233  0006B6                     __end_of___wmul:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           prodh	equ	0xFF4
  1240                           prodl	equ	0xFF3
  1241                           intcon	equ	0xFF2
  1242                           postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           postdec1	equ	0xFE5
  1245                           fsr1l	equ	0xFE1
  1246                           status	equ	0xFD8
  1247                           
  1248 ;; *************** function ___lldiv *****************
  1249 ;; Defined at:
  1250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  dividend        4    0[BANK0 ] unsigned long 
  1253 ;;  divisor         4    4[BANK0 ] unsigned long 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  quotient        4    8[BANK0 ] unsigned long 
  1256 ;;  counter         1   12[BANK0 ] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  4    0[BANK0 ] unsigned long 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         0       8       0       0       0       0       0       0       0
  1267 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1270 ;;Total ram usage:       13 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    3
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_HZ
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text6
  1281  0002E8                     __ptext6:
  1282                           	opt stack 0
  1283  0002E8                     ___lldiv:
  1284                           	opt stack 25
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;incstack = 0
  1288  0002E8  0E00               	movlw	0
  1289  0002EA  0100               	movlb	0	; () banked
  1290  0002EC  6F68               	movwf	___lldiv@quotient& (0+255),b
  1291  0002EE  0E00               	movlw	0
  1292  0002F0  0100               	movlb	0	; () banked
  1293  0002F2  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  1294  0002F4  0E00               	movlw	0
  1295  0002F6  0100               	movlb	0	; () banked
  1296  0002F8  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  1297  0002FA  0E00               	movlw	0
  1298  0002FC  0100               	movlb	0	; () banked
  1299  0002FE  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  1300                           
  1301                           ; BSR set to: 0
  1302  000300  0100               	movlb	0	; () banked
  1303  000302  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1304  000304  1164               	iorwf	___lldiv@divisor& (0+255),w,b
  1305  000306  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1306  000308  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1307  00030A  B4D8               	btfsc	status,2,c
  1308  00030C  D04E               	goto	l709
  1309                           
  1310                           ; BSR set to: 0
  1311  00030E  0E01               	movlw	1
  1312  000310  0100               	movlb	0	; () banked
  1313  000312  6F6C               	movwf	___lldiv@counter& (0+255),b
  1314  000314  D00C               	goto	l1311
  1315  000316                     l1309:
  1316                           
  1317                           ; BSR set to: 0
  1318  000316  0100               	movlb	0	; () banked
  1319  000318  90D8               	bcf	status,0,c
  1320  00031A  0100               	movlb	0	; () banked
  1321  00031C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  1322  00031E  0100               	movlb	0	; () banked
  1323  000320  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1324  000322  0100               	movlb	0	; () banked
  1325  000324  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1326  000326  0100               	movlb	0	; () banked
  1327  000328  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1328  00032A  0100               	movlb	0	; () banked
  1329  00032C  2B6C               	incf	___lldiv@counter& (0+255),f,b
  1330  00032E                     l1311:
  1331                           
  1332                           ; BSR set to: 0
  1333  00032E  0100               	movlb	0	; () banked
  1334  000330  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1335  000332  D7F1               	goto	l1309
  1336  000334                     l1313:
  1337                           
  1338                           ; BSR set to: 0
  1339  000334  0100               	movlb	0	; () banked
  1340  000336  90D8               	bcf	status,0,c
  1341  000338  0100               	movlb	0	; () banked
  1342  00033A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  1343  00033C  0100               	movlb	0	; () banked
  1344  00033E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1345  000340  0100               	movlb	0	; () banked
  1346  000342  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1347  000344  0100               	movlb	0	; () banked
  1348  000346  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1349                           
  1350                           ; BSR set to: 0
  1351  000348  0100               	movlb	0	; () banked
  1352  00034A  5164               	movf	___lldiv@divisor& (0+255),w,b
  1353  00034C  0100               	movlb	0	; () banked
  1354  00034E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  1355  000350  0100               	movlb	0	; () banked
  1356  000352  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1357  000354  0100               	movlb	0	; () banked
  1358  000356  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1359  000358  0100               	movlb	0	; () banked
  1360  00035A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1361  00035C  0100               	movlb	0	; () banked
  1362  00035E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1363  000360  0100               	movlb	0	; () banked
  1364  000362  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1365  000364  0100               	movlb	0	; () banked
  1366  000366  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1367  000368  A0D8               	btfss	status,0,c
  1368  00036A  D012               	goto	l1321
  1369                           
  1370                           ; BSR set to: 0
  1371  00036C  0100               	movlb	0	; () banked
  1372  00036E  5164               	movf	___lldiv@divisor& (0+255),w,b
  1373  000370  0100               	movlb	0	; () banked
  1374  000372  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  1375  000374  0100               	movlb	0	; () banked
  1376  000376  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1377  000378  0100               	movlb	0	; () banked
  1378  00037A  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1379  00037C  0100               	movlb	0	; () banked
  1380  00037E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1381  000380  0100               	movlb	0	; () banked
  1382  000382  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1383  000384  0100               	movlb	0	; () banked
  1384  000386  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1385  000388  0100               	movlb	0	; () banked
  1386  00038A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1387                           
  1388                           ; BSR set to: 0
  1389  00038C  0100               	movlb	0	; () banked
  1390  00038E  8168               	bsf	___lldiv@quotient& (0+255),0,b
  1391  000390                     l1321:
  1392                           
  1393                           ; BSR set to: 0
  1394  000390  0100               	movlb	0	; () banked
  1395  000392  90D8               	bcf	status,0,c
  1396  000394  0100               	movlb	0	; () banked
  1397  000396  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1398  000398  0100               	movlb	0	; () banked
  1399  00039A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1400  00039C  0100               	movlb	0	; () banked
  1401  00039E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1402  0003A0  0100               	movlb	0	; () banked
  1403  0003A2  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  1404                           
  1405                           ; BSR set to: 0
  1406  0003A4  0100               	movlb	0	; () banked
  1407  0003A6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  1408  0003A8  D7C5               	goto	l1313
  1409  0003AA                     l709:
  1410                           
  1411                           ; BSR set to: 0
  1412  0003AA  C068  F060         	movff	___lldiv@quotient,?___lldiv
  1413  0003AE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  1414  0003B2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  1415  0003B6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  1416                           
  1417                           ; BSR set to: 0
  1418  0003BA  0012               	return	
  1419  0003BC                     __end_of___lldiv:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           prodh	equ	0xFF4
  1426                           prodl	equ	0xFF3
  1427                           intcon	equ	0xFF2
  1428                           postinc0	equ	0xFEE
  1429                           wreg	equ	0xFE8
  1430                           postdec1	equ	0xFE5
  1431                           fsr1l	equ	0xFE1
  1432                           status	equ	0xFD8
  1433                           
  1434 ;; *************** function _hisr *****************
  1435 ;; Defined at:
  1436 ;;		line 38 in file "lab103.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		None
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1452 ;;      Temps:         17       0       0       0       0       0       0       0       0
  1453 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1454 ;;Total ram usage:       17 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    2
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		Interrupt level 1
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	intcodelo
  1465  000018                     __pintcodelo:
  1466                           	opt stack 0
  1467  000018                     _hisr:
  1468                           	opt stack 25
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;incstack = 0
  1472  000018  CFD8 F001          	movff	status,??_hisr
  1473  00001C  CFE8 F002          	movff	wreg,??_hisr+1
  1474  000020  CFE0 F003          	movff	bsr,??_hisr+2
  1475  000024  CFFA F004          	movff	pclath,??_hisr+3
  1476  000028  CFFB F005          	movff	pclatu,??_hisr+4
  1477  00002C  CFE9 F006          	movff	fsr0l,??_hisr+5
  1478  000030  CFEA F007          	movff	fsr0h,??_hisr+6
  1479  000034  CFE1 F008          	movff	fsr1l,??_hisr+7
  1480  000038  CFE2 F009          	movff	fsr1h,??_hisr+8
  1481  00003C  CFD9 F00A          	movff	fsr2l,??_hisr+9
  1482  000040  CFDA F00B          	movff	fsr2h,??_hisr+10
  1483  000044  CFF3 F00C          	movff	prodl,??_hisr+11
  1484  000048  CFF4 F00D          	movff	prodh,??_hisr+12
  1485  00004C  CFF6 F00E          	movff	tblptrl,??_hisr+13
  1486  000050  CFF7 F00F          	movff	tblptrh,??_hisr+14
  1487  000054  CFF8 F010          	movff	tblptru,??_hisr+15
  1488  000058  CFF5 F011          	movff	tablat,??_hisr+16
  1489                           
  1490                           ;lab103.c: 40: INT0IF=0;
  1491  00005C  92F2               	bcf	intcon,1,c	;volatile
  1492  00005E  C011  FFF5         	movff	??_hisr+16,tablat
  1493  000062  C010  FFF8         	movff	??_hisr+15,tblptru
  1494  000066  C00F  FFF7         	movff	??_hisr+14,tblptrh
  1495  00006A  C00E  FFF6         	movff	??_hisr+13,tblptrl
  1496  00006E  C00D  FFF4         	movff	??_hisr+12,prodh
  1497  000072  C00C  FFF3         	movff	??_hisr+11,prodl
  1498  000076  C00B  FFDA         	movff	??_hisr+10,fsr2h
  1499  00007A  C00A  FFD9         	movff	??_hisr+9,fsr2l
  1500  00007E  C009  FFE2         	movff	??_hisr+8,fsr1h
  1501  000082  C008  FFE1         	movff	??_hisr+7,fsr1l
  1502  000086  C007  FFEA         	movff	??_hisr+6,fsr0h
  1503  00008A  C006  FFE9         	movff	??_hisr+5,fsr0l
  1504  00008E  C005  FFFB         	movff	??_hisr+4,pclatu
  1505  000092  C004  FFFA         	movff	??_hisr+3,pclath
  1506  000096  C003  FFE0         	movff	??_hisr+2,bsr
  1507  00009A  C002  FFE8         	movff	??_hisr+1,wreg
  1508  00009E  C001  FFD8         	movff	??_hisr,status
  1509  0000A2  0010               	retfie	
  1510  0000A4                     __end_of_hisr:
  1511                           	opt stack 0
  1512                           pclatu	equ	0xFFB
  1513                           pclath	equ	0xFFA
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           prodh	equ	0xFF4
  1519                           prodl	equ	0xFF3
  1520                           intcon	equ	0xFF2
  1521                           postinc0	equ	0xFEE
  1522                           fsr0h	equ	0xFEA
  1523                           fsr0l	equ	0xFE9
  1524                           wreg	equ	0xFE8
  1525                           postdec1	equ	0xFE5
  1526                           fsr1h	equ	0xFE2
  1527                           fsr1l	equ	0xFE1
  1528                           bsr	equ	0xFE0
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _lisr *****************
  1534 ;; Defined at:
  1535 ;;		line 26 in file "lab103.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;		None               void
  1542 ;; Registers used:
  1543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1551 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1552 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:       14 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		_led_scan
  1558 ;; This function is called by:
  1559 ;;		Interrupt level 2
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	intcode
  1564  000008                     __pintcode:
  1565                           	opt stack 0
  1566  000008                     _lisr:
  1567                           	opt stack 25
  1568                           
  1569                           ;incstack = 0
  1570  000008  CFFA F016          	movff	pclath,??_lisr
  1571  00000C  CFFB F017          	movff	pclatu,??_lisr+1
  1572  000010  CFE9 F018          	movff	fsr0l,??_lisr+2
  1573  000014  ED2C  F002         	call	int_func,f	;refresh shadow registers
  1574                           pclatu	equ	0xFFB
  1575                           pclath	equ	0xFFA
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           prodh	equ	0xFF4
  1581                           prodl	equ	0xFF3
  1582                           intcon	equ	0xFF2
  1583                           postinc0	equ	0xFEE
  1584                           fsr0h	equ	0xFEA
  1585                           fsr0l	equ	0xFE9
  1586                           wreg	equ	0xFE8
  1587                           postdec1	equ	0xFE5
  1588                           fsr1h	equ	0xFE2
  1589                           fsr1l	equ	0xFE1
  1590                           bsr	equ	0xFE0
  1591                           fsr2h	equ	0xFDA
  1592                           fsr2l	equ	0xFD9
  1593                           status	equ	0xFD8
  1594                           
  1595                           	psect	intcode_body
  1596  000458                     __pintcode_body:
  1597                           	opt stack 25
  1598  000458                     int_func:
  1599                           	opt stack 25
  1600  000458  0006               	pop		; remove dummy address from shadow register refresh
  1601  00045A  CFEA F019          	movff	fsr0h,??_lisr+3
  1602  00045E  CFE1 F01A          	movff	fsr1l,??_lisr+4
  1603  000462  CFE2 F01B          	movff	fsr1h,??_lisr+5
  1604  000466  CFD9 F01C          	movff	fsr2l,??_lisr+6
  1605  00046A  CFDA F01D          	movff	fsr2h,??_lisr+7
  1606  00046E  CFF3 F01E          	movff	prodl,??_lisr+8
  1607  000472  CFF4 F01F          	movff	prodh,??_lisr+9
  1608  000476  CFF6 F020          	movff	tblptrl,??_lisr+10
  1609  00047A  CFF7 F021          	movff	tblptrh,??_lisr+11
  1610  00047E  CFF8 F022          	movff	tblptru,??_lisr+12
  1611  000482  CFF5 F023          	movff	tablat,??_lisr+13
  1612                           
  1613                           ;lab103.c: 28: if(TMR0IF==1)
  1614  000486  A4F2               	btfss	intcon,2,c	;volatile
  1615  000488  D009               	goto	i2l78
  1616                           
  1617                           ;lab103.c: 29: {
  1618                           ;lab103.c: 30: TMR0IF=0;
  1619  00048A  94F2               	bcf	intcon,2,c	;volatile
  1620                           
  1621                           ;lab103.c: 31: T0CON=0x88;
  1622  00048C  0E88               	movlw	136
  1623  00048E  6ED5               	movwf	4053,c	;volatile
  1624                           
  1625                           ;lab103.c: 32: TMR0H=(65536-4000)>>8;
  1626  000490  0EF0               	movlw	240
  1627  000492  6ED7               	movwf	4055,c	;volatile
  1628                           
  1629                           ;lab103.c: 33: TMR0L=(65536-4000);
  1630  000494  0E60               	movlw	96
  1631  000496  6ED6               	movwf	4054,c	;volatile
  1632                           
  1633                           ;lab103.c: 34: led_scan();
  1634  000498  ECF5  F000         	call	_led_scan	;wreg free
  1635  00049C                     i2l78:
  1636  00049C  C023  FFF5         	movff	??_lisr+13,tablat
  1637  0004A0  C022  FFF8         	movff	??_lisr+12,tblptru
  1638  0004A4  C021  FFF7         	movff	??_lisr+11,tblptrh
  1639  0004A8  C020  FFF6         	movff	??_lisr+10,tblptrl
  1640  0004AC  C01F  FFF4         	movff	??_lisr+9,prodh
  1641  0004B0  C01E  FFF3         	movff	??_lisr+8,prodl
  1642  0004B4  C01D  FFDA         	movff	??_lisr+7,fsr2h
  1643  0004B8  C01C  FFD9         	movff	??_lisr+6,fsr2l
  1644  0004BC  C01B  FFE2         	movff	??_lisr+5,fsr1h
  1645  0004C0  C01A  FFE1         	movff	??_lisr+4,fsr1l
  1646  0004C4  C019  FFEA         	movff	??_lisr+3,fsr0h
  1647  0004C8  C018  FFE9         	movff	??_lisr+2,fsr0l
  1648  0004CC  C017  FFFB         	movff	??_lisr+1,pclatu
  1649  0004D0  C016  FFFA         	movff	??_lisr,pclath
  1650  0004D4  0011               	retfie		f
  1651  0004D6                     __end_of_lisr:
  1652                           	opt stack 0
  1653                           pclatu	equ	0xFFB
  1654                           pclath	equ	0xFFA
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           intcon	equ	0xFF2
  1662                           postinc0	equ	0xFEE
  1663                           fsr0h	equ	0xFEA
  1664                           fsr0l	equ	0xFE9
  1665                           wreg	equ	0xFE8
  1666                           postdec1	equ	0xFE5
  1667                           fsr1h	equ	0xFE2
  1668                           fsr1l	equ	0xFE1
  1669                           bsr	equ	0xFE0
  1670                           fsr2h	equ	0xFDA
  1671                           fsr2l	equ	0xFD9
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _led_scan *****************
  1675 ;; Defined at:
  1676 ;;		line 19 in file "led7.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  dd              1   20[COMRAM] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0
  1691 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1692 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1693 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1694 ;;Total ram usage:        4 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_lisr
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text9
  1704  0001EA                     __ptext9:
  1705                           	opt stack 0
  1706  0001EA                     _led_scan:
  1707                           	opt stack 25
  1708                           
  1709                           ;led7.c: 21: char dd=0;
  1710                           
  1711                           ;incstack = 0
  1712  0001EA  0E00               	movlw	0
  1713  0001EC  6E15               	movwf	led_scan@dd,c
  1714                           
  1715                           ;led7.c: 22: LATB1=1;LATB2=1;LATB3=1;LATB4=1;
  1716  0001EE  828A               	bsf	3978,1,c	;volatile
  1717  0001F0  848A               	bsf	3978,2,c	;volatile
  1718  0001F2  868A               	bsf	3978,3,c	;volatile
  1719  0001F4  888A               	bsf	3978,4,c	;volatile
  1720                           
  1721                           ;led7.c: 23: switch(a)
  1722  0001F6  D043               	goto	i2l1199
  1723  0001F8                     i2l187:
  1724  0001F8  928A               	bcf	3978,1,c	;volatile
  1725  0001FA  5045               	movf	_DD1,w,c
  1726  0001FC  0D01               	mullw	1
  1727  0001FE  0100               	movlb	0	; () banked
  1728  000200  0E75               	movlw	low _led
  1729  000202  24F3               	addwf	prodl,w,c
  1730  000204  6ED9               	movwf	fsr2l,c
  1731  000206  0100               	movlb	0	; () banked
  1732  000208  0E00               	movlw	high _led
  1733  00020A  20F4               	addwfc	prodh,w,c
  1734  00020C  6EDA               	movwf	fsr2h,c
  1735  00020E  50DF               	movf	indf2,w,c
  1736  000210  6E8C               	movwf	3980,c	;volatile
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;led7.c: 26: if(dot&8){dd=1;}
  1740  000212  A644               	btfss	_dot,3,c
  1741  000214  D049               	goto	i2l1201
  1742  000216  D030               	goto	i2u35_40
  1743  000218                     i2l190:
  1744  000218  948A               	bcf	3978,2,c	;volatile
  1745  00021A  0100               	movlb	0	; () banked
  1746  00021C  517F               	movf	_DD2& (0+255),w,b
  1747  00021E  0D01               	mullw	1
  1748  000220  0100               	movlb	0	; () banked
  1749  000222  0E75               	movlw	low _led
  1750  000224  24F3               	addwf	prodl,w,c
  1751  000226  6ED9               	movwf	fsr2l,c
  1752  000228  0100               	movlb	0	; () banked
  1753  00022A  0E00               	movlw	high _led
  1754  00022C  20F4               	addwfc	prodh,w,c
  1755  00022E  6EDA               	movwf	fsr2h,c
  1756  000230  50DF               	movf	indf2,w,c
  1757  000232  6E8C               	movwf	3980,c	;volatile
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;led7.c: 29: if(dot&4){dd=1;}
  1761  000234  A444               	btfss	_dot,2,c
  1762  000236  D038               	goto	i2l1201
  1763  000238  D01F               	goto	i2u35_40
  1764  00023A                     i2l192:
  1765  00023A  968A               	bcf	3978,3,c	;volatile
  1766  00023C  5046               	movf	_DD3,w,c
  1767  00023E  0D01               	mullw	1
  1768  000240  0100               	movlb	0	; () banked
  1769  000242  0E75               	movlw	low _led
  1770  000244  24F3               	addwf	prodl,w,c
  1771  000246  6ED9               	movwf	fsr2l,c
  1772  000248  0100               	movlb	0	; () banked
  1773  00024A  0E00               	movlw	high _led
  1774  00024C  20F4               	addwfc	prodh,w,c
  1775  00024E  6EDA               	movwf	fsr2h,c
  1776  000250  50DF               	movf	indf2,w,c
  1777  000252  6E8C               	movwf	3980,c	;volatile
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;led7.c: 32: if(dot&2){dd=1;}
  1781  000254  A244               	btfss	_dot,1,c
  1782  000256  D028               	goto	i2l1201
  1783  000258  D00F               	goto	i2u35_40
  1784  00025A                     i2l194:
  1785  00025A  988A               	bcf	3978,4,c	;volatile
  1786  00025C  5047               	movf	_DD4,w,c
  1787  00025E  0D01               	mullw	1
  1788  000260  0100               	movlb	0	; () banked
  1789  000262  0E75               	movlw	low _led
  1790  000264  24F3               	addwf	prodl,w,c
  1791  000266  6ED9               	movwf	fsr2l,c
  1792  000268  0100               	movlb	0	; () banked
  1793  00026A  0E00               	movlw	high _led
  1794  00026C  20F4               	addwfc	prodh,w,c
  1795  00026E  6EDA               	movwf	fsr2h,c
  1796  000270  50DF               	movf	indf2,w,c
  1797  000272  6E8C               	movwf	3980,c	;volatile
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;led7.c: 35: if(dot&1){dd=1;}
  1801  000274  A044               	btfss	_dot,0,c
  1802  000276  D018               	goto	i2l1201
  1803  000278                     i2u35_40:
  1804                           
  1805                           ; BSR set to: 0
  1806  000278  0E01               	movlw	1
  1807  00027A  6E15               	movwf	led_scan@dd,c
  1808  00027C  D015               	goto	i2l1201
  1809  00027E                     i2l1199:
  1810  00027E  C030  F012         	movff	_a,??_led_scan
  1811  000282  C031  F013         	movff	_a+1,??_led_scan+1
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "space"
  1815                           ; Number of cases is 1, Range of values is 0 to 0
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            4     3 (average)
  1819                           ;	Chosen strategy is simple_byte
  1820  000286  5013               	movf	??_led_scan+1,w,c
  1821  000288  0A00               	xorlw	0	; case 0
  1822  00028A  A4D8               	btfss	status,2,c
  1823  00028C  D00D               	goto	i2l1201
  1824                           
  1825                           ; Switch size 1, requested type "space"
  1826                           ; Number of cases is 4, Range of values is 0 to 3
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte           13     7 (average)
  1830                           ;	Chosen strategy is simple_byte
  1831  00028E  5012               	movf	??_led_scan,w,c
  1832  000290  0A00               	xorlw	0	; case 0
  1833  000292  B4D8               	btfsc	status,2,c
  1834  000294  D7B1               	goto	i2l187
  1835  000296  0A01               	xorlw	1	; case 1
  1836  000298  B4D8               	btfsc	status,2,c
  1837  00029A  D7BE               	goto	i2l190
  1838  00029C  0A03               	xorlw	3	; case 2
  1839  00029E  B4D8               	btfsc	status,2,c
  1840  0002A0  D7CC               	goto	i2l192
  1841  0002A2  0A01               	xorlw	1	; case 3
  1842  0002A4  B4D8               	btfsc	status,2,c
  1843  0002A6  D7D9               	goto	i2l194
  1844  0002A8                     i2l1201:
  1845                           
  1846                           ;led7.c: 38: if(dd==1)LATD7=0;
  1847  0002A8  0415               	decf	led_scan@dd,w,c
  1848  0002AA  B4D8               	btfsc	status,2,c
  1849  0002AC  9E8C               	bcf	3980,7,c	;volatile
  1850                           
  1851                           ;led7.c: 39: if(light!=18){a++;}else{a=18;}
  1852  0002AE  5048               	movf	_light,w,c
  1853  0002B0  0A12               	xorlw	18
  1854  0002B2  B4D8               	btfsc	status,2,c
  1855  0002B4  D003               	goto	i2l1209
  1856  0002B6  4A30               	infsnz	_a,f,c
  1857  0002B8  2A31               	incf	_a+1,f,c
  1858  0002BA  D004               	goto	i2l1211
  1859  0002BC                     i2l1209:
  1860  0002BC  0E00               	movlw	0
  1861  0002BE  6E31               	movwf	_a+1,c
  1862  0002C0  0E12               	movlw	18
  1863  0002C2  6E30               	movwf	_a,c
  1864  0002C4                     i2l1211:
  1865                           
  1866                           ;led7.c: 40: if(a>light)a=0;
  1867  0002C4  5048               	movf	_light,w,c
  1868  0002C6  6E12               	movwf	??_led_scan& (0+255),c
  1869  0002C8  6A13               	clrf	(??_led_scan+1)& (0+255),c
  1870  0002CA  5013               	movf	??_led_scan+1,w,c
  1871  0002CC  0A80               	xorlw	128
  1872  0002CE  6E14               	movwf	(??_led_scan+2)& (0+255),c
  1873  0002D0  5030               	movf	_a,w,c
  1874  0002D2  5C12               	subwf	??_led_scan,w,c
  1875  0002D4  5031               	movf	_a+1,w,c
  1876  0002D6  0A80               	xorlw	128
  1877  0002D8  5814               	subwfb	(??_led_scan+2)& (0+255),w,c
  1878  0002DA  B0D8               	btfsc	status,0,c
  1879  0002DC  D004               	goto	i2l200
  1880  0002DE  0E00               	movlw	0
  1881  0002E0  6E31               	movwf	_a+1,c
  1882  0002E2  0E00               	movlw	0
  1883  0002E4  6E30               	movwf	_a,c
  1884  0002E6                     i2l200:
  1885  0002E6  0012               	return	
  1886  0002E8                     __end_of_led_scan:
  1887                           	opt stack 0
  1888  0000                     pclatu	equ	0xFFB
  1889                           pclath	equ	0xFFA
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           postinc0	equ	0xFEE
  1898                           fsr0h	equ	0xFEA
  1899                           fsr0l	equ	0xFE9
  1900                           wreg	equ	0xFE8
  1901                           postdec1	equ	0xFE5
  1902                           fsr1h	equ	0xFE2
  1903                           fsr1l	equ	0xFE1
  1904                           bsr	equ	0xFE0
  1905                           indf2	equ	0xFDF
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8
  1909                           pclatu	equ	0xFFB
  1910                           pclath	equ	0xFFA
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           prodh	equ	0xFF4
  1916                           prodl	equ	0xFF3
  1917                           intcon	equ	0xFF2
  1918                           postinc0	equ	0xFEE
  1919                           fsr0h	equ	0xFEA
  1920                           fsr0l	equ	0xFE9
  1921                           wreg	equ	0xFE8
  1922                           postdec1	equ	0xFE5
  1923                           fsr1h	equ	0xFE2
  1924                           fsr1l	equ	0xFE1
  1925                           bsr	equ	0xFE0
  1926                           indf2	equ	0xFDF
  1927                           fsr2h	equ	0xFDA
  1928                           fsr2l	equ	0xFD9
  1929                           status	equ	0xFD8
  1930                           
  1931                           	psect	rparam
  1932  0000                     pclatu	equ	0xFFB
  1933                           pclath	equ	0xFFA
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           prodh	equ	0xFF4
  1939                           prodl	equ	0xFF3
  1940                           intcon	equ	0xFF2
  1941                           postinc0	equ	0xFEE
  1942                           fsr0h	equ	0xFEA
  1943                           fsr0l	equ	0xFE9
  1944                           wreg	equ	0xFE8
  1945                           postdec1	equ	0xFE5
  1946                           fsr1h	equ	0xFE2
  1947                           fsr1l	equ	0xFE1
  1948                           bsr	equ	0xFE0
  1949                           indf2	equ	0xFDF
  1950                           fsr2h	equ	0xFDA
  1951                           fsr2l	equ	0xFD9
  1952                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         33
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      74
    BANK0           160     21      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _lisr in COMRAM

    _lisr->_led_scan

Critical Paths under _hisr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_HZ
    _led_dec->___lwdiv
    _HZ->___lldiv

Critical Paths under _lisr in BANK0

    None.

Critical Paths under _hisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lisr in BANK1

    None.

Critical Paths under _hisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lisr in BANK2

    None.

Critical Paths under _hisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lisr in BANK3

    None.

Critical Paths under _hisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lisr in BANK4

    None.

Critical Paths under _hisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lisr in BANK5

    None.

Critical Paths under _hisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lisr in BANK6

    None.

Critical Paths under _hisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lisr in BANK7

    None.

Critical Paths under _hisr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3951
                                             17 BANK0      4     4      0
                                 _HZ
                            ___lwdiv
                            ___lwmod
                            _led_dec
 ---------------------------------------------------------------------------------
 (1) _led_dec                                              4     0      4    1637
                                              7 BANK0      4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     622
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     761
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _HZ                                                   4     2      2     863
                                             13 BANK0      4     2      2
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     492
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     371
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _hisr                                                17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lisr                                                14    14      0      27
                                             21 COMRAM    14    14      0
                           _led_scan
 ---------------------------------------------------------------------------------
 (5) _led_scan                                             4     4      0      27
                                             17 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HZ
     ___lldiv
     ___wmul
   ___lwdiv
   ___lwmod
   _led_dec
     ___lwdiv
     ___lwmod

 _hisr (ROOT)

 _lisr (ROOT)
   _led_scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      4A       1       77.9%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      11        0.0%
DATA                 0      0      6A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 26 14:19:40 2017

                      _a 0030                        _i 0028                        _j 0032  
                     _HH 002C                       _GO 007E11                       l98 00E6  
                     _LL 002E                       _HZ 00A8                       _r1 0034  
                     _r2 0038                       _r3 0049                       _t2 003A  
                     _ff 0024                       bsr 000FE0      ___wmul@multiplicand 0062  
                    ?_HZ 006D                      l100 00E2                      l101 00DC  
                    l104 00F6                      l105 00F0                      l107 0106  
                    l108 0100                      _DD1 0045                      _DD2 007F  
                    _DD3 0046                      _DD4 0047                      l709 03AA  
                    l772 05C0                      l782 0620                      _RB0 007C08  
                    _PR2 000FCB                      _r16 0036                      _t41 003C  
                    _t42 003E                      _t43 0040                      _led 0075  
                    _dot 0044                      prod 000FF3                      wreg 000FE8  
           __CFG_FOSC$HS 000000                     ??_HZ 006F             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1311 032E                     l1321 0390  
                   l1313 0334                     l1331 0570                     l1309 0316  
                   l1333 057C                     l1343 05B2                     l1335 0582  
                   l1351 05DC                     l1353 05E8                     l1355 05EE  
                   l1359 0612                     l1397 03EA                     _LATD 000F8C  
                   _IPEN 007E87                     i2l78 049C                     _main 03BC  
                   _hisr 0018                     _lisr 0008                     _tick 0042  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 00A4                    ?_main 0001  
                  ?_hisr 0001                    ?_lisr 0001                    _ADRES 000FC3  
        __end_of___lldiv 03BC                    _T0CON 000FD5                    _T1CON 000FCD  
                  _T2CON 000FCA                    _LATB1 007C51                    _LATB2 007C52  
                  _LATC1 007C59                    _LATB3 007C53                    _LATC2 007C5A  
                  _LATB4 007C54                    _LATB5 007C55                    _LATD7 007C67  
        __end_of___lwdiv 05CA                    i2l200 02E6          __end_of___lwmod 062A  
                  i2l190 0218                    i2l192 023A                    i2l194 025A  
                  i2l187 01F8                    _TMR0H 000FD7                    _TMR1H 000FCF  
                  _TMR0L 000FD6                    _TMR1L 000FCE                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_led_dec 0552                    _light 0048                    tablat 000FF5  
                  status 000FD8          __initialization 062A             __end_of_main 0458  
           __end_of_hisr 00A4             __end_of_lisr 04D6                   ??_main 0071  
                 ??_hisr 0001                   ??_lisr 0016            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB                   _INT0IF 007F91  
                 i2l1201 02A8                   i2l1211 02C4                   i2l1209 02BC  
                 i2l1199 027E                   _INTCON 000FF2                   _TMR0IF 007F92  
                 _TRISB0 007C98                   _TRISC1 007CA1                   _TRISC2 007CA2  
                 _TRISB4 007C9C                   _TRISB5 007C9D           __CFG_XINST$OFF 000000  
       __end_of_led_scan 02E8                   ___wmul 0680                ??___lldiv 0068  
              ??___lwdiv 0064                ??___lwmod 0064                   clear_0 0630  
              ??_led_dec 006B             __pdataCOMRAM 0045                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0676          __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0001  
           __pidataBANK0 06B6               __end_of_HZ 01EA               __pnvCOMRAM 0049  
                ?___wmul 0060                  _CCP1CON 000FBD                  _CCP2CON 000FBA  
                i2u35_40 0278                ?_led_scan 0001                  __Hparam 0000  
                __Lparam 0000                  ___lldiv 02E8          __size_of___wmul 0036  
                ___lwdiv 0552                  ___lwmod 05CA                  __pcinit 062A  
                __ramtop 0800                  __ptext0 03BC                  __ptext1 04D6  
                __ptext2 05CA                  __ptext3 0552                  __ptext4 00A8  
                __ptext5 0680                  __ptext6 02E8                  __ptext9 01EA  
                _led_dec 04D6           __pintcode_body 0458               ??_led_scan 0012  
   end_of_initialization 0676            __Lmediumconst 0000                  int_func 0458  
        ___lldiv@divisor 0064          ___lldiv@counter 006C                  postdec1 000FE5  
                postinc0 000FEE               led_scan@dd 0015           __end_of___wmul 06B6  
          __pidataCOMRAM 06C0      start_initialization 062A                 ??___wmul 0064  
            __pdataBANK0 0075              __pbssCOMRAM 0024            __pcstackBANK0 0060  
      __size_of_led_scan 00FE                __pnvBANK0 007F         ___lwdiv@dividend 0060  
              __pintcode 0008                 ?___lldiv 0060                 ?___lwdiv 0060  
               ?___lwmod 0060              __pintcodelo 0018                 ?_led_dec 0067  
       ___lwdiv@quotient 0065              __size_of_HZ 0142           ___wmul@product 0064  
      ___wmul@multiplier 0060                led_dec@vh 0067                led_dec@vl 0069  
              copy_data0 064A                copy_data1 066A                 __Hrparam 0000  
               __Lrparam 0000         __size_of___lldiv 00D4         __size_of___lwdiv 0078  
       __size_of___lwmod 0060         __size_of_led_dec 007C                 _main$670 0071  
               _main$671 0073          ___lwdiv@divisor 0062          ___lwdiv@counter 0064  
               _led_scan 01EA            __size_of_main 009C            __size_of_hisr 008C  
          __size_of_lisr 04CE    __CFG_CPUDIV$OSC1_PLL2 000000                 intlevel1 0000  
               intlevel2 0000         ___lwmod@dividend 0060         ___lldiv@dividend 0060  
       ___lldiv@quotient 0068          ___lwmod@divisor 0062          ___lwmod@counter 0064  
