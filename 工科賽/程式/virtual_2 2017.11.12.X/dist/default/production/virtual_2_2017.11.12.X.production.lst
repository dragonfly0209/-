

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Nov 14 15:40:50 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  00247C                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _DD1
    45  00247C  0001               	dw	1
    46                           
    47                           ;initializer for _DD2
    48  00247E  0008               	dw	8
    49                           
    50                           ;initializer for _light
    51  002480  0003               	dw	3
    52                           
    53                           	psect	idataBANK0
    54  002442                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _led
    58  002442  C0                 	db	192
    59  002443  F9                 	db	249
    60  002444  A4                 	db	164
    61  002445  B0                 	db	176
    62  002446  99                 	db	153
    63  002447  92                 	db	146
    64  002448  82                 	db	130
    65  002449  D8                 	db	216
    66  00244A  80                 	db	128
    67  00244B  90                 	db	144
    68  00244C  FF                 	db	255
    69  00244D  BF                 	db	191
    70                           
    71                           ;initializer for _DD3
    72  00244E  0003               	dw	3
    73                           
    74                           ;initializer for _DD4
    75  002450  0004               	dw	4
    76  0000                     _ADRES	set	4035
    77  0000                     _ADCON0	set	4034
    78  0000                     _ADCON1	set	4033
    79  0000                     _ADCON2	set	4032
    80  0000                     _CCP1CON	set	4029
    81  0000                     _CCP2CON	set	4026
    82  0000                     _CCPR1L	set	4030
    83  0000                     _CCPR2L	set	4027
    84  0000                     _LATD	set	3980
    85  0000                     _PORTB	set	3969
    86  0000                     _PR2	set	4043
    87  0000                     _T0CON	set	4053
    88  0000                     _T1CON	set	4045
    89  0000                     _T2CON	set	4042
    90  0000                     _TMR0H	set	4055
    91  0000                     _TMR0L	set	4054
    92  0000                     _TMR1H	set	4047
    93  0000                     _TMR1L	set	4046
    94  0000                     _TRISB	set	3987
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISD	set	3989
    97  0000                     _TRISE	set	3990
    98  0000                     _GIEH	set	32663
    99  0000                     _GIEL	set	32662
   100  0000                     _GO	set	32273
   101  0000                     _IPEN	set	32391
   102  0000                     _LATB0	set	31824
   103  0000                     _LATB1	set	31825
   104  0000                     _LATB2	set	31826
   105  0000                     _LATB3	set	31827
   106  0000                     _LATB4	set	31828
   107  0000                     _LATB5	set	31829
   108  0000                     _LATC1	set	31833
   109  0000                     _LATC2	set	31834
   110  0000                     _LATD7	set	31847
   111  0000                     _RA3	set	31747
   112  0000                     _RC1	set	31761
   113  0000                     _TMR0IE	set	32661
   114  0000                     _TMR0IF	set	32658
   115  0000                     _TMR0IP	set	32650
   116  0000                     _TRISA3	set	31891
   117  0000                     _TRISB4	set	31900
   118  0000                     _TRISB5	set	31901
   119  0000                     _TRISC1	set	31905
   120  0000                     _TRISC2	set	31906
   121                           
   122                           	psect	nvCOMRAM
   123  000040                     __pnvCOMRAM:
   124                           	opt stack 0
   125  000040                     _get:
   126                           	opt stack 0
   127  000040                     	ds	4
   128  000044                     _dot:
   129                           	opt stack 0
   130  000044                     	ds	2
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  0021E8                     __pcinit:
   136                           	opt stack 0
   137  0021E8                     start_initialization:
   138                           	opt stack 0
   139  0021E8                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK0 (18 bytes)
   143  0021E8  EE00  F074         	lfsr	0,__pbssBANK0
   144  0021EC  0E12               	movlw	18
   145  0021EE                     clear_0:
   146  0021EE  6AEE               	clrf	postinc0,c
   147  0021F0  06E8               	decf	wreg,f,c
   148  0021F2  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to COMRAM (14 bytes)
   151  0021F4  EE00  F032         	lfsr	0,__pbssCOMRAM
   152  0021F8  0E0E               	movlw	14
   153  0021FA                     clear_1:
   154  0021FA  6AEE               	clrf	postinc0,c
   155  0021FC  06E8               	decf	wreg,f,c
   156  0021FE  E1FD               	bnz	clear_1
   157                           
   158                           ; Initialize objects allocated to BANK0 (16 bytes)
   159                           ; load TBLPTR registers with __pidataBANK0
   160  002200  0E42               	movlw	low __pidataBANK0
   161  002202  6EF6               	movwf	tblptrl,c
   162  002204  0E24               	movlw	high __pidataBANK0
   163  002206  6EF7               	movwf	tblptrh,c
   164  002208  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   165  00220A  6EF8               	movwf	tblptru,c
   166  00220C  EE00  F086         	lfsr	0,__pdataBANK0
   167  002210  EE10 F010          	lfsr	1,16
   168  002214                     copy_data0:
   169  002214  0009               	tblrd		*+
   170  002216  CFF5 FFEE          	movff	tablat,postinc0
   171  00221A  50E5               	movf	postdec1,w,c
   172  00221C  50E1               	movf	fsr1l,w,c
   173  00221E  E1FA               	bnz	copy_data0
   174                           
   175                           ; Initialize objects allocated to COMRAM (6 bytes)
   176                           ; load TBLPTR registers with __pidataCOMRAM
   177  002220  0E7C               	movlw	low __pidataCOMRAM
   178  002222  6EF6               	movwf	tblptrl,c
   179  002224  0E24               	movlw	high __pidataCOMRAM
   180  002226  6EF7               	movwf	tblptrh,c
   181  002228  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   182  00222A  6EF8               	movwf	tblptru,c
   183  00222C  EE00  F046         	lfsr	0,__pdataCOMRAM
   184  002230  EE10 F006          	lfsr	1,6
   185  002234                     copy_data1:
   186  002234  0009               	tblrd		*+
   187  002236  CFF5 FFEE          	movff	tablat,postinc0
   188  00223A  50E5               	movf	postdec1,w,c
   189  00223C  50E1               	movf	fsr1l,w,c
   190  00223E  E1FA               	bnz	copy_data1
   191  002240                     end_of_initialization:
   192                           	opt stack 0
   193  002240                     __end_of__initialization:
   194                           	opt stack 0
   195  002240  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  002242  6EF8               	movwf	tblptru,c
   197  002244  0100               	movlb	0
   198  002246  EF0E  F000         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	bssCOMRAM
   209  000032                     __pbssCOMRAM:
   210                           	opt stack 0
   211  000032                     _i:
   212                           	opt stack 0
   213  000032                     	ds	4
   214  000036                     _HH:
   215                           	opt stack 0
   216  000036                     	ds	2
   217  000038                     _LL:
   218                           	opt stack 0
   219  000038                     	ds	2
   220  00003A                     _a:
   221                           	opt stack 0
   222  00003A                     	ds	2
   223  00003C                     _t42:
   224                           	opt stack 0
   225  00003C                     	ds	2
   226  00003E                     _tick:
   227                           	opt stack 0
   228  00003E                     	ds	2
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           postdec1	equ	0xFE5
   236                           fsr1l	equ	0xFE1
   237                           
   238                           	psect	dataCOMRAM
   239  000046                     __pdataCOMRAM:
   240                           	opt stack 0
   241  000046                     _DD1:
   242                           	opt stack 0
   243  000046                     	ds	2
   244  000048                     _DD2:
   245                           	opt stack 0
   246  000048                     	ds	2
   247  00004A                     _light:
   248                           	opt stack 0
   249  00004A                     	ds	2
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	bssBANK0
   260  000074                     __pbssBANK0:
   261                           	opt stack 0
   262  000074                     _ff:
   263                           	opt stack 0
   264  000074                     	ds	4
   265  000078                     _r100:
   266                           	opt stack 0
   267  000078                     	ds	4
   268  00007C                     _r16:
   269                           	opt stack 0
   270  00007C                     	ds	4
   271  000080                     _t2:
   272                           	opt stack 0
   273  000080                     	ds	2
   274  000082                     _t41:
   275                           	opt stack 0
   276  000082                     	ds	2
   277  000084                     _t43:
   278                           	opt stack 0
   279  000084                     	ds	2
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	dataBANK0
   290  000086                     __pdataBANK0:
   291                           	opt stack 0
   292  000086                     _led:
   293                           	opt stack 0
   294  000086                     	ds	12
   295  000092                     _DD3:
   296                           	opt stack 0
   297  000092                     	ds	2
   298  000094                     _DD4:
   299                           	opt stack 0
   300  000094                     	ds	2
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	cstackBANK0
   311  000060                     __pcstackBANK0:
   312                           	opt stack 0
   313  000060                     ??_main:
   314                           
   315                           ; 0 bytes @ 0x0
   316  000060                     	ds	8
   317  000068                     main@y:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x8
   321  000068                     	ds	2
   322  00006A                     main@x1y:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0xA
   326  00006A                     	ds	2
   327  00006C                     main@x2y:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0xC
   331  00006C                     	ds	2
   332  00006E                     main@x1:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0xE
   336  00006E                     	ds	2
   337  000070                     main@x2:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x10
   341  000070                     	ds	2
   342  000072                     main@i:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x12
   346  000072                     	ds	2
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	cstackCOMRAM
   357  000001                     __pcstackCOMRAM:
   358                           	opt stack 0
   359  000001                     ??_led_scan:
   360  000001                     
   361                           ; 0 bytes @ 0x0
   362  000001                     	ds	2
   363  000003                     led_scan@dd:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x2
   367  000003                     	ds	1
   368  000004                     ??_hisr:
   369                           
   370                           ; 0 bytes @ 0x3
   371  000004                     	ds	14
   372  000012                     ?_adc_get:
   373                           	opt stack 0
   374  000012                     ?___wmul:
   375                           	opt stack 0
   376  000012                     ?___awdiv:
   377                           	opt stack 0
   378  000012                     ?___lwmod:
   379                           	opt stack 0
   380  000012                     ?___aldiv:
   381                           	opt stack 0
   382  000012                     ?___almod:
   383                           	opt stack 0
   384  000012                     ?___lldiv:
   385                           	opt stack 0
   386  000012                     led_dot@tp:
   387                           	opt stack 0
   388  000012                     Delay100TCYx@unit:
   389                           	opt stack 0
   390  000012                     Delay1KTCYx@unit:
   391                           	opt stack 0
   392  000012                     delay_ms@ms:
   393                           	opt stack 0
   394  000012                     ___wmul@multiplier:
   395                           	opt stack 0
   396  000012                     ___awdiv@dividend:
   397                           	opt stack 0
   398  000012                     ___lwmod@dividend:
   399                           	opt stack 0
   400  000012                     ___aldiv@dividend:
   401                           	opt stack 0
   402  000012                     ___almod@dividend:
   403                           	opt stack 0
   404  000012                     ___lldiv@dividend:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x11
   408  000012                     	ds	2
   409  000014                     adc_get@n:
   410                           	opt stack 0
   411  000014                     ___wmul@multiplicand:
   412                           	opt stack 0
   413  000014                     ___awdiv@divisor:
   414                           	opt stack 0
   415  000014                     ___lwmod@divisor:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x13
   419  000014                     	ds	2
   420  000016                     ___awdiv@counter:
   421                           	opt stack 0
   422  000016                     ___lwmod@counter:
   423                           	opt stack 0
   424  000016                     ___wmul@product:
   425                           	opt stack 0
   426  000016                     ___aldiv@divisor:
   427                           	opt stack 0
   428  000016                     ___almod@divisor:
   429                           	opt stack 0
   430  000016                     ___lldiv@divisor:
   431                           	opt stack 0
   432                           
   433                           ; 4 bytes @ 0x15
   434  000016                     	ds	1
   435  000017                     ___awdiv@sign:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x16
   439  000017                     	ds	1
   440  000018                     ___awdiv@quotient:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x17
   444  000018                     	ds	2
   445  00001A                     ___aldiv@counter:
   446                           	opt stack 0
   447  00001A                     ___almod@counter:
   448                           	opt stack 0
   449  00001A                     motor1@x:
   450                           	opt stack 0
   451  00001A                     motor2@x:
   452                           	opt stack 0
   453  00001A                     motor@x:
   454                           	opt stack 0
   455  00001A                     ___lldiv@quotient:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x19
   459  00001A                     	ds	1
   460  00001B                     ___aldiv@sign:
   461                           	opt stack 0
   462  00001B                     ___almod@sign:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x1A
   466  00001B                     	ds	1
   467  00001C                     ??_motor1:
   468  00001C                     ___aldiv@quotient:
   469                           	opt stack 0
   470                           
   471                           ; 4 bytes @ 0x1B
   472  00001C                     	ds	2
   473  00001E                     ___lldiv@counter:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x1D
   477  00001E                     	ds	1
   478  00001F                     ?_fn111:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x1E
   482  00001F                     	ds	2
   483  000021                     ??_fn111:
   484                           
   485                           ; 0 bytes @ 0x20
   486  000021                     	ds	2
   487  000023                     ?___lwdiv:
   488                           	opt stack 0
   489  000023                     ___lwdiv@dividend:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x22
   493  000023                     	ds	2
   494  000025                     ___lwdiv@divisor:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x24
   498  000025                     	ds	2
   499  000027                     ___lwdiv@counter:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x26
   503  000027                     	ds	1
   504  000028                     ___lwdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x27
   508  000028                     	ds	2
   509  00002A                     led_dec@vh:
   510                           	opt stack 0
   511  00002A                     leddec@vh1:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x29
   515  00002A                     	ds	2
   516  00002C                     led_dec@vl:
   517                           	opt stack 0
   518  00002C                     leddec@vh2:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x2B
   522  00002C                     	ds	2
   523  00002E                     leddec@vl1:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x2D
   527  00002E                     	ds	2
   528  000030                     leddec@vl2:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x2F
   532  000030                     	ds	2
   533  000032                     tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           ; 0 bytes @ 0x31
   543 ;;
   544 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   545 ;;
   546 ;; *************** function _main *****************
   547 ;; Defined at:
   548 ;;		line 194 in file "virtual_2.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  i               2   18[BANK0 ] unsigned int 
   553 ;;  x2              2   16[BANK0 ] unsigned int 
   554 ;;  x1              2   14[BANK0 ] unsigned int 
   555 ;;  x2y             2   12[BANK0 ] unsigned int 
   556 ;;  x1y             2   10[BANK0 ] unsigned int 
   557 ;;  y               2    8[BANK0 ] unsigned int 
   558 ;; Return value:  Size  Location     Type
   559 ;;		None               void
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   567 ;;      Params:         0       0       0       0       0       0       0       0       0
   568 ;;      Locals:         0      12       0       0       0       0       0       0       0
   569 ;;      Temps:          0       8       0       0       0       0       0       0       0
   570 ;;      Totals:         0      20       0       0       0       0       0       0       0
   571 ;;Total ram usage:       20 bytes
   572 ;; Hardware stack levels required when called:    4
   573 ;; This function calls:
   574 ;;		___aldiv
   575 ;;		___almod
   576 ;;		___lwdiv
   577 ;;		___lwmod
   578 ;;		_adc_get
   579 ;;		_delay_ms
   580 ;;		_fn111
   581 ;;		_led_dec
   582 ;;		_led_dot
   583 ;;		_leddec
   584 ;;		_motor
   585 ;;		_motor1
   586 ;;		_motor2
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text0
   593  00001C                     __ptext0:
   594                           	opt stack 0
   595  00001C                     _main:
   596                           	opt stack 27
   597                           
   598                           ;virtual_2.c: 196: TRISB=0xf0;
   599                           
   600                           ;incstack = 0
   601  00001C  0EF0               	movlw	240
   602  00001E  6E93               	movwf	3987,c	;volatile
   603                           
   604                           ;virtual_2.c: 197: TRISD=0;
   605  000020  0E00               	movlw	0
   606  000022  6E95               	movwf	3989,c	;volatile
   607                           
   608                           ;virtual_2.c: 198: TRISE=0;
   609  000024  0E00               	movlw	0
   610  000026  6E96               	movwf	3990,c	;volatile
   611                           
   612                           ;virtual_2.c: 199: TRISC=0;
   613  000028  0E00               	movlw	0
   614  00002A  6E94               	movwf	3988,c	;volatile
   615                           
   616                           ;virtual_2.c: 200: TRISA3=1;
   617  00002C  8692               	bsf	3986,3,c	;volatile
   618                           
   619                           ;virtual_2.c: 202: ADCON1=0x0F;
   620  00002E  0E0F               	movlw	15
   621  000030  6EC1               	movwf	4033,c	;volatile
   622                           
   623                           ;virtual_2.c: 204: T0CON=0x88;
   624  000032  0E88               	movlw	136
   625  000034  6ED5               	movwf	4053,c	;volatile
   626                           
   627                           ;virtual_2.c: 205: TMR0H=(65536-20000)>>8;
   628  000036  0EB1               	movlw	177
   629  000038  6ED7               	movwf	4055,c	;volatile
   630                           
   631                           ;virtual_2.c: 206: TMR0L=(65536-20000);
   632  00003A  0EE0               	movlw	224
   633  00003C  6ED6               	movwf	4054,c	;volatile
   634                           
   635                           ;virtual_2.c: 208: IPEN=1;
   636  00003E  8ED0               	bsf	4048,7,c	;volatile
   637                           
   638                           ;virtual_2.c: 209: TMR0IE=1;
   639  000040  8AF2               	bsf	intcon,5,c	;volatile
   640                           
   641                           ;virtual_2.c: 210: TMR0IF=0;
   642  000042  94F2               	bcf	intcon,2,c	;volatile
   643                           
   644                           ;virtual_2.c: 211: TMR0IP=1;
   645  000044  84F1               	bsf	intcon2,2,c	;volatile
   646                           
   647                           ;virtual_2.c: 212: GIEL=1;
   648  000046  8CF2               	bsf	intcon,6,c	;volatile
   649                           
   650                           ;virtual_2.c: 213: GIEH=1;
   651  000048  8EF2               	bsf	intcon,7,c	;volatile
   652                           
   653                           ;virtual_2.c: 215: unsigned int x1=0,x2=0,y=0,x1y=0,x2y=0,i=100;
   654  00004A  0E00               	movlw	0
   655  00004C  0100               	movlb	0	; () banked
   656  00004E  6F6F               	movwf	(main@x1+1)& (0+255),b
   657  000050  0E00               	movlw	0
   658  000052  0100               	movlb	0	; () banked
   659  000054  6F6E               	movwf	main@x1& (0+255),b
   660  000056  0E00               	movlw	0
   661  000058  0100               	movlb	0	; () banked
   662  00005A  6F71               	movwf	(main@x2+1)& (0+255),b
   663  00005C  0E00               	movlw	0
   664  00005E  0100               	movlb	0	; () banked
   665  000060  6F70               	movwf	main@x2& (0+255),b
   666  000062  0E00               	movlw	0
   667  000064  0100               	movlb	0	; () banked
   668  000066  6F69               	movwf	(main@y+1)& (0+255),b
   669  000068  0E00               	movlw	0
   670  00006A  0100               	movlb	0	; () banked
   671  00006C  6F68               	movwf	main@y& (0+255),b
   672  00006E  0E00               	movlw	0
   673  000070  0100               	movlb	0	; () banked
   674  000072  6F6B               	movwf	(main@x1y+1)& (0+255),b
   675  000074  0E00               	movlw	0
   676  000076  0100               	movlb	0	; () banked
   677  000078  6F6A               	movwf	main@x1y& (0+255),b
   678  00007A  0E00               	movlw	0
   679  00007C  0100               	movlb	0	; () banked
   680  00007E  6F6D               	movwf	(main@x2y+1)& (0+255),b
   681  000080  0E00               	movlw	0
   682  000082  0100               	movlb	0	; () banked
   683  000084  6F6C               	movwf	main@x2y& (0+255),b
   684  000086  0E00               	movlw	0
   685  000088  0100               	movlb	0	; () banked
   686  00008A  6F73               	movwf	(main@i+1)& (0+255),b
   687  00008C  0E64               	movlw	100
   688  00008E  0100               	movlb	0	; () banked
   689  000090  6F72               	movwf	main@i& (0+255),b
   690  000092  EF14  F00D         	goto	l3640
   691  000096                     l3190:
   692                           
   693                           ; BSR set to: 0
   694                           ;virtual_2.c: 221: led_dot(0);get=adc_get(1);
   695  000096  0E00               	movlw	0
   696  000098  EC39  F012         	call	_led_dot
   697  00009C  0E01               	movlw	1
   698  00009E  EC25  F011         	call	_adc_get
   699  0000A2  C012  F040         	movff	?_adc_get,_get
   700  0000A6  C013  F041         	movff	?_adc_get+1,_get+1
   701  0000AA  6A42               	clrf	_get+2,c
   702  0000AC  6A43               	clrf	_get+3,c
   703                           
   704                           ;virtual_2.c: 222: if(adc_get(1)<=660)get=0;
   705  0000AE  0E01               	movlw	1
   706  0000B0  EC25  F011         	call	_adc_get
   707  0000B4  0E95               	movlw	149
   708  0000B6  5C12               	subwf	?_adc_get,w,c
   709  0000B8  0E02               	movlw	2
   710  0000BA  5813               	subwfb	?_adc_get+1,w,c
   711  0000BC  B0D8               	btfsc	status,0,c
   712  0000BE  D009               	goto	l3198
   713  0000C0  0E00               	movlw	0
   714  0000C2  6E40               	movwf	_get,c
   715  0000C4  0E00               	movlw	0
   716  0000C6  6E41               	movwf	_get+1,c
   717  0000C8  0E00               	movlw	0
   718  0000CA  6E42               	movwf	_get+2,c
   719  0000CC  0E00               	movlw	0
   720  0000CE  6E43               	movwf	_get+3,c
   721  0000D0  D008               	goto	l294
   722  0000D2                     l3198:
   723                           
   724                           ;virtual_2.c: 223: else get-=660;
   725  0000D2  0E6C               	movlw	108
   726  0000D4  2640               	addwf	_get,f,c
   727  0000D6  0EFD               	movlw	253
   728  0000D8  2241               	addwfc	_get+1,f,c
   729  0000DA  0EFF               	movlw	255
   730  0000DC  2242               	addwfc	_get+2,f,c
   731  0000DE  0EFF               	movlw	255
   732  0000E0  2243               	addwfc	_get+3,f,c
   733  0000E2                     l294:
   734                           
   735                           ;virtual_2.c: 224: if(get>90)get=90;leddec(10,10,get/10,get%10);
   736  0000E2  5043               	movf	_get+3,w,c
   737  0000E4  0A80               	xorlw	128
   738  0000E6  0F80               	addlw	128
   739  0000E8  E108               	bnz	u2985
   740  0000EA  0E00               	movlw	0
   741  0000EC  5C42               	subwf	_get+2,w,c
   742  0000EE  E105               	bnz	u2985
   743  0000F0  0E00               	movlw	0
   744  0000F2  5C41               	subwf	_get+1,w,c
   745  0000F4  E102               	bnz	u2985
   746  0000F6  0E5B               	movlw	91
   747  0000F8  5C40               	subwf	_get,w,c
   748  0000FA                     u2985:
   749  0000FA  A0D8               	btfss	status,0,c
   750  0000FC  D008               	goto	l3202
   751  0000FE  0E5A               	movlw	90
   752  000100  6E40               	movwf	_get,c
   753  000102  0E00               	movlw	0
   754  000104  6E41               	movwf	_get+1,c
   755  000106  0E00               	movlw	0
   756  000108  6E42               	movwf	_get+2,c
   757  00010A  0E00               	movlw	0
   758  00010C  6E43               	movwf	_get+3,c
   759  00010E                     l3202:
   760  00010E  0E00               	movlw	0
   761  000110  6E2B               	movwf	leddec@vh1+1,c
   762  000112  0E0A               	movlw	10
   763  000114  6E2A               	movwf	leddec@vh1,c
   764  000116  0E00               	movlw	0
   765  000118  6E2D               	movwf	leddec@vh2+1,c
   766  00011A  0E0A               	movlw	10
   767  00011C  6E2C               	movwf	leddec@vh2,c
   768  00011E  C040  F012         	movff	_get,___aldiv@dividend
   769  000122  C041  F013         	movff	_get+1,___aldiv@dividend+1
   770  000126  C042  F014         	movff	_get+2,___aldiv@dividend+2
   771  00012A  C043  F015         	movff	_get+3,___aldiv@dividend+3
   772  00012E  0E0A               	movlw	10
   773  000130  6E16               	movwf	___aldiv@divisor,c
   774  000132  0E00               	movlw	0
   775  000134  6E17               	movwf	___aldiv@divisor+1,c
   776  000136  0E00               	movlw	0
   777  000138  6E18               	movwf	___aldiv@divisor+2,c
   778  00013A  0E00               	movlw	0
   779  00013C  6E19               	movwf	___aldiv@divisor+3,c
   780  00013E  EC50  F00E         	call	___aldiv	;wreg free
   781  000142  C012  F060         	movff	?___aldiv,??_main
   782  000146  C013  F061         	movff	?___aldiv+1,??_main+1
   783  00014A  C014  F062         	movff	?___aldiv+2,??_main+2
   784  00014E  C015  F063         	movff	?___aldiv+3,??_main+3
   785  000152  C060  F02E         	movff	??_main,leddec@vl1
   786  000156  C061  F02F         	movff	??_main+1,leddec@vl1+1
   787  00015A  C040  F012         	movff	_get,___almod@dividend
   788  00015E  C041  F013         	movff	_get+1,___almod@dividend+1
   789  000162  C042  F014         	movff	_get+2,___almod@dividend+2
   790  000166  C043  F015         	movff	_get+3,___almod@dividend+3
   791  00016A  0E0A               	movlw	10
   792  00016C  6E16               	movwf	___almod@divisor,c
   793  00016E  0E00               	movlw	0
   794  000170  6E17               	movwf	___almod@divisor+1,c
   795  000172  0E00               	movlw	0
   796  000174  6E18               	movwf	___almod@divisor+2,c
   797  000176  0E00               	movlw	0
   798  000178  6E19               	movwf	___almod@divisor+3,c
   799  00017A  EC42  F00F         	call	___almod	;wreg free
   800  00017E  C012  F064         	movff	?___almod,??_main+4
   801  000182  C013  F065         	movff	?___almod+1,??_main+5
   802  000186  C014  F066         	movff	?___almod+2,??_main+6
   803  00018A  C015  F067         	movff	?___almod+3,??_main+7
   804  00018E  C064  F030         	movff	??_main+4,leddec@vl2
   805  000192  C065  F031         	movff	??_main+5,leddec@vl2+1
   806  000196  EC01  F012         	call	_leddec	;wreg free
   807                           
   808                           ;virtual_2.c: 225: if(get<10)leddec(10,10,10,get);
   809  00019A  5043               	movf	_get+3,w,c
   810  00019C  0A80               	xorlw	128
   811  00019E  0F80               	addlw	128
   812  0001A0  E108               	bnz	u2995
   813  0001A2  0E00               	movlw	0
   814  0001A4  5C42               	subwf	_get+2,w,c
   815  0001A6  E105               	bnz	u2995
   816  0001A8  0E00               	movlw	0
   817  0001AA  5C41               	subwf	_get+1,w,c
   818  0001AC  E102               	bnz	u2995
   819  0001AE  0E0A               	movlw	10
   820  0001B0  5C40               	subwf	_get,w,c
   821  0001B2                     u2995:
   822  0001B2  B0D8               	btfsc	status,0,c
   823  0001B4  D012               	goto	l3208
   824  0001B6  0E00               	movlw	0
   825  0001B8  6E2B               	movwf	leddec@vh1+1,c
   826  0001BA  0E0A               	movlw	10
   827  0001BC  6E2A               	movwf	leddec@vh1,c
   828  0001BE  0E00               	movlw	0
   829  0001C0  6E2D               	movwf	leddec@vh2+1,c
   830  0001C2  0E0A               	movlw	10
   831  0001C4  6E2C               	movwf	leddec@vh2,c
   832  0001C6  0E00               	movlw	0
   833  0001C8  6E2F               	movwf	leddec@vl1+1,c
   834  0001CA  0E0A               	movlw	10
   835  0001CC  6E2E               	movwf	leddec@vl1,c
   836  0001CE  C040  F030         	movff	_get,leddec@vl2
   837  0001D2  C041  F031         	movff	_get+1,leddec@vl2+1
   838  0001D6  EC01  F012         	call	_leddec	;wreg free
   839  0001DA                     l3208:
   840                           
   841                           ;virtual_2.c: 226: motor1(get);break;
   842  0001DA  C040  F01A         	movff	_get,motor1@x
   843  0001DE  C041  F01B         	movff	_get+1,motor1@x+1
   844  0001E2  ECBC  F010         	call	_motor1	;wreg free
   845  0001E6  EF14  F00D         	goto	l3640
   846  0001EA                     l3210:
   847                           
   848                           ;virtual_2.c: 229: led_dot(0);get=adc_get(2);
   849  0001EA  0E00               	movlw	0
   850  0001EC  EC39  F012         	call	_led_dot
   851  0001F0  0E02               	movlw	2
   852  0001F2  EC25  F011         	call	_adc_get
   853  0001F6  C012  F040         	movff	?_adc_get,_get
   854  0001FA  C013  F041         	movff	?_adc_get+1,_get+1
   855  0001FE  6A42               	clrf	_get+2,c
   856  000200  6A43               	clrf	_get+3,c
   857                           
   858                           ;virtual_2.c: 230: if(adc_get(2)<=680)get=0;
   859  000202  0E02               	movlw	2
   860  000204  EC25  F011         	call	_adc_get
   861  000208  0EA9               	movlw	169
   862  00020A  5C12               	subwf	?_adc_get,w,c
   863  00020C  0E02               	movlw	2
   864  00020E  5813               	subwfb	?_adc_get+1,w,c
   865  000210  B0D8               	btfsc	status,0,c
   866  000212  D009               	goto	l3218
   867  000214  0E00               	movlw	0
   868  000216  6E40               	movwf	_get,c
   869  000218  0E00               	movlw	0
   870  00021A  6E41               	movwf	_get+1,c
   871  00021C  0E00               	movlw	0
   872  00021E  6E42               	movwf	_get+2,c
   873  000220  0E00               	movlw	0
   874  000222  6E43               	movwf	_get+3,c
   875  000224  D008               	goto	l300
   876  000226                     l3218:
   877                           
   878                           ;virtual_2.c: 231: else get-=680;
   879  000226  0E58               	movlw	88
   880  000228  2640               	addwf	_get,f,c
   881  00022A  0EFD               	movlw	253
   882  00022C  2241               	addwfc	_get+1,f,c
   883  00022E  0EFF               	movlw	255
   884  000230  2242               	addwfc	_get+2,f,c
   885  000232  0EFF               	movlw	255
   886  000234  2243               	addwfc	_get+3,f,c
   887  000236                     l300:
   888                           
   889                           ;virtual_2.c: 232: if(get>90)get=90;leddec(10,10,get/10,get%10);
   890  000236  5043               	movf	_get+3,w,c
   891  000238  0A80               	xorlw	128
   892  00023A  0F80               	addlw	128
   893  00023C  E108               	bnz	u3015
   894  00023E  0E00               	movlw	0
   895  000240  5C42               	subwf	_get+2,w,c
   896  000242  E105               	bnz	u3015
   897  000244  0E00               	movlw	0
   898  000246  5C41               	subwf	_get+1,w,c
   899  000248  E102               	bnz	u3015
   900  00024A  0E5B               	movlw	91
   901  00024C  5C40               	subwf	_get,w,c
   902  00024E                     u3015:
   903  00024E  A0D8               	btfss	status,0,c
   904  000250  D008               	goto	l3222
   905  000252  0E5A               	movlw	90
   906  000254  6E40               	movwf	_get,c
   907  000256  0E00               	movlw	0
   908  000258  6E41               	movwf	_get+1,c
   909  00025A  0E00               	movlw	0
   910  00025C  6E42               	movwf	_get+2,c
   911  00025E  0E00               	movlw	0
   912  000260  6E43               	movwf	_get+3,c
   913  000262                     l3222:
   914  000262  0E00               	movlw	0
   915  000264  6E2B               	movwf	leddec@vh1+1,c
   916  000266  0E0A               	movlw	10
   917  000268  6E2A               	movwf	leddec@vh1,c
   918  00026A  0E00               	movlw	0
   919  00026C  6E2D               	movwf	leddec@vh2+1,c
   920  00026E  0E0A               	movlw	10
   921  000270  6E2C               	movwf	leddec@vh2,c
   922  000272  C040  F012         	movff	_get,___aldiv@dividend
   923  000276  C041  F013         	movff	_get+1,___aldiv@dividend+1
   924  00027A  C042  F014         	movff	_get+2,___aldiv@dividend+2
   925  00027E  C043  F015         	movff	_get+3,___aldiv@dividend+3
   926  000282  0E0A               	movlw	10
   927  000284  6E16               	movwf	___aldiv@divisor,c
   928  000286  0E00               	movlw	0
   929  000288  6E17               	movwf	___aldiv@divisor+1,c
   930  00028A  0E00               	movlw	0
   931  00028C  6E18               	movwf	___aldiv@divisor+2,c
   932  00028E  0E00               	movlw	0
   933  000290  6E19               	movwf	___aldiv@divisor+3,c
   934  000292  EC50  F00E         	call	___aldiv	;wreg free
   935  000296  C012  F060         	movff	?___aldiv,??_main
   936  00029A  C013  F061         	movff	?___aldiv+1,??_main+1
   937  00029E  C014  F062         	movff	?___aldiv+2,??_main+2
   938  0002A2  C015  F063         	movff	?___aldiv+3,??_main+3
   939  0002A6  C060  F02E         	movff	??_main,leddec@vl1
   940  0002AA  C061  F02F         	movff	??_main+1,leddec@vl1+1
   941  0002AE  C040  F012         	movff	_get,___almod@dividend
   942  0002B2  C041  F013         	movff	_get+1,___almod@dividend+1
   943  0002B6  C042  F014         	movff	_get+2,___almod@dividend+2
   944  0002BA  C043  F015         	movff	_get+3,___almod@dividend+3
   945  0002BE  0E0A               	movlw	10
   946  0002C0  6E16               	movwf	___almod@divisor,c
   947  0002C2  0E00               	movlw	0
   948  0002C4  6E17               	movwf	___almod@divisor+1,c
   949  0002C6  0E00               	movlw	0
   950  0002C8  6E18               	movwf	___almod@divisor+2,c
   951  0002CA  0E00               	movlw	0
   952  0002CC  6E19               	movwf	___almod@divisor+3,c
   953  0002CE  EC42  F00F         	call	___almod	;wreg free
   954  0002D2  C012  F064         	movff	?___almod,??_main+4
   955  0002D6  C013  F065         	movff	?___almod+1,??_main+5
   956  0002DA  C014  F066         	movff	?___almod+2,??_main+6
   957  0002DE  C015  F067         	movff	?___almod+3,??_main+7
   958  0002E2  C064  F030         	movff	??_main+4,leddec@vl2
   959  0002E6  C065  F031         	movff	??_main+5,leddec@vl2+1
   960  0002EA  EC01  F012         	call	_leddec	;wreg free
   961                           
   962                           ;virtual_2.c: 233: if(get<10)leddec(10,10,10,get);
   963  0002EE  5043               	movf	_get+3,w,c
   964  0002F0  0A80               	xorlw	128
   965  0002F2  0F80               	addlw	128
   966  0002F4  E108               	bnz	u3025
   967  0002F6  0E00               	movlw	0
   968  0002F8  5C42               	subwf	_get+2,w,c
   969  0002FA  E105               	bnz	u3025
   970  0002FC  0E00               	movlw	0
   971  0002FE  5C41               	subwf	_get+1,w,c
   972  000300  E102               	bnz	u3025
   973  000302  0E0A               	movlw	10
   974  000304  5C40               	subwf	_get,w,c
   975  000306                     u3025:
   976  000306  B0D8               	btfsc	status,0,c
   977  000308  D012               	goto	l3228
   978  00030A  0E00               	movlw	0
   979  00030C  6E2B               	movwf	leddec@vh1+1,c
   980  00030E  0E0A               	movlw	10
   981  000310  6E2A               	movwf	leddec@vh1,c
   982  000312  0E00               	movlw	0
   983  000314  6E2D               	movwf	leddec@vh2+1,c
   984  000316  0E0A               	movlw	10
   985  000318  6E2C               	movwf	leddec@vh2,c
   986  00031A  0E00               	movlw	0
   987  00031C  6E2F               	movwf	leddec@vl1+1,c
   988  00031E  0E0A               	movlw	10
   989  000320  6E2E               	movwf	leddec@vl1,c
   990  000322  C040  F030         	movff	_get,leddec@vl2
   991  000326  C041  F031         	movff	_get+1,leddec@vl2+1
   992  00032A  EC01  F012         	call	_leddec	;wreg free
   993  00032E                     l3228:
   994                           
   995                           ;virtual_2.c: 234: motor2(get);break;
   996  00032E  C040  F01A         	movff	_get,motor2@x
   997  000332  C041  F01B         	movff	_get+1,motor2@x+1
   998  000336  EC50  F011         	call	_motor2	;wreg free
   999  00033A  EF14  F00D         	goto	l3640
  1000  00033E                     l3230:
  1001                           
  1002                           ;virtual_2.c: 237: led_dot(0);x1=adc_get(1);
  1003  00033E  0E00               	movlw	0
  1004  000340  EC39  F012         	call	_led_dot
  1005  000344  0E01               	movlw	1
  1006  000346  EC25  F011         	call	_adc_get
  1007  00034A  C012  F06E         	movff	?_adc_get,main@x1
  1008  00034E  C013  F06F         	movff	?_adc_get+1,main@x1+1
  1009                           
  1010                           ;virtual_2.c: 238: if(adc_get(1)<=660)x1=0;
  1011  000352  0E01               	movlw	1
  1012  000354  EC25  F011         	call	_adc_get
  1013  000358  0E95               	movlw	149
  1014  00035A  5C12               	subwf	?_adc_get,w,c
  1015  00035C  0E02               	movlw	2
  1016  00035E  5813               	subwfb	?_adc_get+1,w,c
  1017  000360  B0D8               	btfsc	status,0,c
  1018  000362  D007               	goto	l3238
  1019  000364  0E00               	movlw	0
  1020  000366  0100               	movlb	0	; () banked
  1021  000368  6F6F               	movwf	(main@x1+1)& (0+255),b
  1022  00036A  0E00               	movlw	0
  1023  00036C  0100               	movlb	0	; () banked
  1024  00036E  6F6E               	movwf	main@x1& (0+255),b
  1025  000370  D007               	goto	l3240
  1026  000372                     l3238:
  1027                           
  1028                           ;virtual_2.c: 239: else x1-=660;
  1029  000372  0100               	movlb	0	; () banked
  1030  000374  0E94               	movlw	148
  1031  000376  0100               	movlb	0	; () banked
  1032  000378  5F6E               	subwf	main@x1& (0+255),f,b
  1033  00037A  0E02               	movlw	2
  1034  00037C  0100               	movlb	0	; () banked
  1035  00037E  5B6F               	subwfb	(main@x1+1)& (0+255),f,b
  1036  000380                     l3240:
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;virtual_2.c: 240: x2=adc_get(2);
  1040  000380  0E02               	movlw	2
  1041  000382  EC25  F011         	call	_adc_get
  1042  000386  C012  F070         	movff	?_adc_get,main@x2
  1043  00038A  C013  F071         	movff	?_adc_get+1,main@x2+1
  1044                           
  1045                           ;virtual_2.c: 241: if(adc_get(2)<=680)x2=0;
  1046  00038E  0E02               	movlw	2
  1047  000390  EC25  F011         	call	_adc_get
  1048  000394  0EA9               	movlw	169
  1049  000396  5C12               	subwf	?_adc_get,w,c
  1050  000398  0E02               	movlw	2
  1051  00039A  5813               	subwfb	?_adc_get+1,w,c
  1052  00039C  B0D8               	btfsc	status,0,c
  1053  00039E  D007               	goto	l3246
  1054  0003A0  0E00               	movlw	0
  1055  0003A2  0100               	movlb	0	; () banked
  1056  0003A4  6F71               	movwf	(main@x2+1)& (0+255),b
  1057  0003A6  0E00               	movlw	0
  1058  0003A8  0100               	movlb	0	; () banked
  1059  0003AA  6F70               	movwf	main@x2& (0+255),b
  1060  0003AC  D007               	goto	l307
  1061  0003AE                     l3246:
  1062                           
  1063                           ;virtual_2.c: 242: else x2-=680;
  1064  0003AE  0100               	movlb	0	; () banked
  1065  0003B0  0EA8               	movlw	168
  1066  0003B2  0100               	movlb	0	; () banked
  1067  0003B4  5F70               	subwf	main@x2& (0+255),f,b
  1068  0003B6  0E02               	movlw	2
  1069  0003B8  0100               	movlb	0	; () banked
  1070  0003BA  5B71               	subwfb	(main@x2+1)& (0+255),f,b
  1071  0003BC                     l307:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;virtual_2.c: 243: if(x1>90)x1=90;if(x2>90)x2=90;
  1075  0003BC  0E5B               	movlw	91
  1076  0003BE  0100               	movlb	0	; () banked
  1077  0003C0  5D6E               	subwf	main@x1& (0+255),w,b
  1078  0003C2  0E00               	movlw	0
  1079  0003C4  0100               	movlb	0	; () banked
  1080  0003C6  596F               	subwfb	(main@x1+1)& (0+255),w,b
  1081  0003C8  A0D8               	btfss	status,0,c
  1082  0003CA  D006               	goto	l3250
  1083                           
  1084                           ; BSR set to: 0
  1085  0003CC  0E00               	movlw	0
  1086  0003CE  0100               	movlb	0	; () banked
  1087  0003D0  6F6F               	movwf	(main@x1+1)& (0+255),b
  1088  0003D2  0E5A               	movlw	90
  1089  0003D4  0100               	movlb	0	; () banked
  1090  0003D6  6F6E               	movwf	main@x1& (0+255),b
  1091  0003D8                     l3250:
  1092                           
  1093                           ; BSR set to: 0
  1094  0003D8  0E5B               	movlw	91
  1095  0003DA  0100               	movlb	0	; () banked
  1096  0003DC  5D70               	subwf	main@x2& (0+255),w,b
  1097  0003DE  0E00               	movlw	0
  1098  0003E0  0100               	movlb	0	; () banked
  1099  0003E2  5971               	subwfb	(main@x2+1)& (0+255),w,b
  1100  0003E4  A0D8               	btfss	status,0,c
  1101  0003E6  D006               	goto	l3254
  1102                           
  1103                           ; BSR set to: 0
  1104  0003E8  0E00               	movlw	0
  1105  0003EA  0100               	movlb	0	; () banked
  1106  0003EC  6F71               	movwf	(main@x2+1)& (0+255),b
  1107  0003EE  0E5A               	movlw	90
  1108  0003F0  0100               	movlb	0	; () banked
  1109  0003F2  6F70               	movwf	main@x2& (0+255),b
  1110  0003F4                     l3254:
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;virtual_2.c: 244: if(x1<10)leddec(10,x1,x2/10,x2%10);
  1114  0003F4  0E0A               	movlw	10
  1115  0003F6  0100               	movlb	0	; () banked
  1116  0003F8  5D6E               	subwf	main@x1& (0+255),w,b
  1117  0003FA  0E00               	movlw	0
  1118  0003FC  0100               	movlb	0	; () banked
  1119  0003FE  596F               	subwfb	(main@x1+1)& (0+255),w,b
  1120  000400  B0D8               	btfsc	status,0,c
  1121  000402  D026               	goto	l3258
  1122                           
  1123                           ; BSR set to: 0
  1124  000404  0E00               	movlw	0
  1125  000406  6E2B               	movwf	leddec@vh1+1,c
  1126  000408  0E0A               	movlw	10
  1127  00040A  6E2A               	movwf	leddec@vh1,c
  1128  00040C  C06E  F02C         	movff	main@x1,leddec@vh2
  1129  000410  C06F  F02D         	movff	main@x1+1,leddec@vh2+1
  1130  000414  C070  F023         	movff	main@x2,___lwdiv@dividend
  1131  000418  C071  F024         	movff	main@x2+1,___lwdiv@dividend+1
  1132  00041C  0E00               	movlw	0
  1133  00041E  6E26               	movwf	___lwdiv@divisor+1,c
  1134  000420  0E0A               	movlw	10
  1135  000422  6E25               	movwf	___lwdiv@divisor,c
  1136  000424  ECA4  F011         	call	___lwdiv	;wreg free
  1137  000428  C023  F02E         	movff	?___lwdiv,leddec@vl1
  1138  00042C  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  1139  000430  C070  F012         	movff	main@x2,___lwmod@dividend
  1140  000434  C071  F013         	movff	main@x2+1,___lwmod@dividend+1
  1141  000438  0E00               	movlw	0
  1142  00043A  6E15               	movwf	___lwmod@divisor+1,c
  1143  00043C  0E0A               	movlw	10
  1144  00043E  6E14               	movwf	___lwmod@divisor,c
  1145  000440  ECCD  F011         	call	___lwmod	;wreg free
  1146  000444  C012  F030         	movff	?___lwmod,leddec@vl2
  1147  000448  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  1148  00044C  EC01  F012         	call	_leddec	;wreg free
  1149  000450                     l3258:
  1150                           
  1151                           ;virtual_2.c: 245: if(x2<10)leddec(x1/10,x1%10,10,x2);
  1152  000450  0E0A               	movlw	10
  1153  000452  0100               	movlb	0	; () banked
  1154  000454  5D70               	subwf	main@x2& (0+255),w,b
  1155  000456  0E00               	movlw	0
  1156  000458  0100               	movlb	0	; () banked
  1157  00045A  5971               	subwfb	(main@x2+1)& (0+255),w,b
  1158  00045C  B0D8               	btfsc	status,0,c
  1159  00045E  D026               	goto	l3262
  1160                           
  1161                           ; BSR set to: 0
  1162  000460  C06E  F023         	movff	main@x1,___lwdiv@dividend
  1163  000464  C06F  F024         	movff	main@x1+1,___lwdiv@dividend+1
  1164  000468  0E00               	movlw	0
  1165  00046A  6E26               	movwf	___lwdiv@divisor+1,c
  1166  00046C  0E0A               	movlw	10
  1167  00046E  6E25               	movwf	___lwdiv@divisor,c
  1168  000470  ECA4  F011         	call	___lwdiv	;wreg free
  1169  000474  C023  F02A         	movff	?___lwdiv,leddec@vh1
  1170  000478  C024  F02B         	movff	?___lwdiv+1,leddec@vh1+1
  1171  00047C  C06E  F012         	movff	main@x1,___lwmod@dividend
  1172  000480  C06F  F013         	movff	main@x1+1,___lwmod@dividend+1
  1173  000484  0E00               	movlw	0
  1174  000486  6E15               	movwf	___lwmod@divisor+1,c
  1175  000488  0E0A               	movlw	10
  1176  00048A  6E14               	movwf	___lwmod@divisor,c
  1177  00048C  ECCD  F011         	call	___lwmod	;wreg free
  1178  000490  C012  F02C         	movff	?___lwmod,leddec@vh2
  1179  000494  C013  F02D         	movff	?___lwmod+1,leddec@vh2+1
  1180  000498  0E00               	movlw	0
  1181  00049A  6E2F               	movwf	leddec@vl1+1,c
  1182  00049C  0E0A               	movlw	10
  1183  00049E  6E2E               	movwf	leddec@vl1,c
  1184  0004A0  C070  F030         	movff	main@x2,leddec@vl2
  1185  0004A4  C071  F031         	movff	main@x2+1,leddec@vl2+1
  1186  0004A8  EC01  F012         	call	_leddec	;wreg free
  1187  0004AC                     l3262:
  1188                           
  1189                           ;virtual_2.c: 246: if((x1<10)&&(x2<10))leddec(10,x1,10,x2);
  1190  0004AC  0E0A               	movlw	10
  1191  0004AE  0100               	movlb	0	; () banked
  1192  0004B0  5D6E               	subwf	main@x1& (0+255),w,b
  1193  0004B2  0E00               	movlw	0
  1194  0004B4  0100               	movlb	0	; () banked
  1195  0004B6  596F               	subwfb	(main@x1+1)& (0+255),w,b
  1196  0004B8  B0D8               	btfsc	status,0,c
  1197  0004BA  D01A               	goto	l3268
  1198                           
  1199                           ; BSR set to: 0
  1200  0004BC  0E0A               	movlw	10
  1201  0004BE  0100               	movlb	0	; () banked
  1202  0004C0  5D70               	subwf	main@x2& (0+255),w,b
  1203  0004C2  0E00               	movlw	0
  1204  0004C4  0100               	movlb	0	; () banked
  1205  0004C6  5971               	subwfb	(main@x2+1)& (0+255),w,b
  1206  0004C8  B0D8               	btfsc	status,0,c
  1207  0004CA  D012               	goto	l3268
  1208                           
  1209                           ; BSR set to: 0
  1210  0004CC  0E00               	movlw	0
  1211  0004CE  6E2B               	movwf	leddec@vh1+1,c
  1212  0004D0  0E0A               	movlw	10
  1213  0004D2  6E2A               	movwf	leddec@vh1,c
  1214  0004D4  C06E  F02C         	movff	main@x1,leddec@vh2
  1215  0004D8  C06F  F02D         	movff	main@x1+1,leddec@vh2+1
  1216  0004DC  0E00               	movlw	0
  1217  0004DE  6E2F               	movwf	leddec@vl1+1,c
  1218  0004E0  0E0A               	movlw	10
  1219  0004E2  6E2E               	movwf	leddec@vl1,c
  1220  0004E4  C070  F030         	movff	main@x2,leddec@vl2
  1221  0004E8  C071  F031         	movff	main@x2+1,leddec@vl2+1
  1222  0004EC  EC01  F012         	call	_leddec	;wreg free
  1223  0004F0                     l3268:
  1224                           
  1225                           ;virtual_2.c: 247: leddec(x1/10,x1%10,x2/10,x2%10);
  1226  0004F0  C06E  F023         	movff	main@x1,___lwdiv@dividend
  1227  0004F4  C06F  F024         	movff	main@x1+1,___lwdiv@dividend+1
  1228  0004F8  0E00               	movlw	0
  1229  0004FA  6E26               	movwf	___lwdiv@divisor+1,c
  1230  0004FC  0E0A               	movlw	10
  1231  0004FE  6E25               	movwf	___lwdiv@divisor,c
  1232  000500  ECA4  F011         	call	___lwdiv	;wreg free
  1233  000504  C023  F02A         	movff	?___lwdiv,leddec@vh1
  1234  000508  C024  F02B         	movff	?___lwdiv+1,leddec@vh1+1
  1235  00050C  C06E  F012         	movff	main@x1,___lwmod@dividend
  1236  000510  C06F  F013         	movff	main@x1+1,___lwmod@dividend+1
  1237  000514  0E00               	movlw	0
  1238  000516  6E15               	movwf	___lwmod@divisor+1,c
  1239  000518  0E0A               	movlw	10
  1240  00051A  6E14               	movwf	___lwmod@divisor,c
  1241  00051C  ECCD  F011         	call	___lwmod	;wreg free
  1242  000520  C012  F02C         	movff	?___lwmod,leddec@vh2
  1243  000524  C013  F02D         	movff	?___lwmod+1,leddec@vh2+1
  1244  000528  C070  F023         	movff	main@x2,___lwdiv@dividend
  1245  00052C  C071  F024         	movff	main@x2+1,___lwdiv@dividend+1
  1246  000530  0E00               	movlw	0
  1247  000532  6E26               	movwf	___lwdiv@divisor+1,c
  1248  000534  0E0A               	movlw	10
  1249  000536  6E25               	movwf	___lwdiv@divisor,c
  1250  000538  ECA4  F011         	call	___lwdiv	;wreg free
  1251  00053C  C023  F02E         	movff	?___lwdiv,leddec@vl1
  1252  000540  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  1253  000544  C070  F012         	movff	main@x2,___lwmod@dividend
  1254  000548  C071  F013         	movff	main@x2+1,___lwmod@dividend+1
  1255  00054C  0E00               	movlw	0
  1256  00054E  6E15               	movwf	___lwmod@divisor+1,c
  1257  000550  0E0A               	movlw	10
  1258  000552  6E14               	movwf	___lwmod@divisor,c
  1259  000554  ECCD  F011         	call	___lwmod	;wreg free
  1260  000558  C012  F030         	movff	?___lwmod,leddec@vl2
  1261  00055C  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  1262  000560  EC01  F012         	call	_leddec	;wreg free
  1263                           
  1264                           ;virtual_2.c: 248: motor(90);break;
  1265  000564  0E00               	movlw	0
  1266  000566  6E1B               	movwf	motor@x+1,c
  1267  000568  0E5A               	movlw	90
  1268  00056A  6E1A               	movwf	motor@x,c
  1269  00056C  EC7A  F011         	call	_motor	;wreg free
  1270  000570  EF14  F00D         	goto	l3640
  1271  000574                     l3272:
  1272                           
  1273                           ;virtual_2.c: 251: led_dot(0);
  1274  000574  0E00               	movlw	0
  1275  000576  EC39  F012         	call	_led_dot
  1276                           
  1277                           ;virtual_2.c: 252: x1=adc_get(1);
  1278  00057A  0E01               	movlw	1
  1279  00057C  EC25  F011         	call	_adc_get
  1280  000580  C012  F06E         	movff	?_adc_get,main@x1
  1281  000584  C013  F06F         	movff	?_adc_get+1,main@x1+1
  1282                           
  1283                           ;virtual_2.c: 253: if(adc_get(1)<=660)x1=0;
  1284  000588  0E01               	movlw	1
  1285  00058A  EC25  F011         	call	_adc_get
  1286  00058E  0E95               	movlw	149
  1287  000590  5C12               	subwf	?_adc_get,w,c
  1288  000592  0E02               	movlw	2
  1289  000594  5813               	subwfb	?_adc_get+1,w,c
  1290  000596  B0D8               	btfsc	status,0,c
  1291  000598  D007               	goto	l3280
  1292  00059A  0E00               	movlw	0
  1293  00059C  0100               	movlb	0	; () banked
  1294  00059E  6F6F               	movwf	(main@x1+1)& (0+255),b
  1295  0005A0  0E00               	movlw	0
  1296  0005A2  0100               	movlb	0	; () banked
  1297  0005A4  6F6E               	movwf	main@x1& (0+255),b
  1298  0005A6  D007               	goto	l3282
  1299  0005A8                     l3280:
  1300                           
  1301                           ;virtual_2.c: 254: else x1-=660;
  1302  0005A8  0100               	movlb	0	; () banked
  1303  0005AA  0E94               	movlw	148
  1304  0005AC  0100               	movlb	0	; () banked
  1305  0005AE  5F6E               	subwf	main@x1& (0+255),f,b
  1306  0005B0  0E02               	movlw	2
  1307  0005B2  0100               	movlb	0	; () banked
  1308  0005B4  5B6F               	subwfb	(main@x1+1)& (0+255),f,b
  1309  0005B6                     l3282:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;virtual_2.c: 255: x2=adc_get(2);
  1313  0005B6  0E02               	movlw	2
  1314  0005B8  EC25  F011         	call	_adc_get
  1315  0005BC  C012  F070         	movff	?_adc_get,main@x2
  1316  0005C0  C013  F071         	movff	?_adc_get+1,main@x2+1
  1317                           
  1318                           ;virtual_2.c: 256: if(adc_get(2)<=680)x2=0;
  1319  0005C4  0E02               	movlw	2
  1320  0005C6  EC25  F011         	call	_adc_get
  1321  0005CA  0EA9               	movlw	169
  1322  0005CC  5C12               	subwf	?_adc_get,w,c
  1323  0005CE  0E02               	movlw	2
  1324  0005D0  5813               	subwfb	?_adc_get+1,w,c
  1325  0005D2  B0D8               	btfsc	status,0,c
  1326  0005D4  D007               	goto	l3288
  1327  0005D6  0E00               	movlw	0
  1328  0005D8  0100               	movlb	0	; () banked
  1329  0005DA  6F71               	movwf	(main@x2+1)& (0+255),b
  1330  0005DC  0E00               	movlw	0
  1331  0005DE  0100               	movlb	0	; () banked
  1332  0005E0  6F70               	movwf	main@x2& (0+255),b
  1333  0005E2  D007               	goto	l317
  1334  0005E4                     l3288:
  1335                           
  1336                           ;virtual_2.c: 257: else x2-=680;
  1337  0005E4  0100               	movlb	0	; () banked
  1338  0005E6  0EA8               	movlw	168
  1339  0005E8  0100               	movlb	0	; () banked
  1340  0005EA  5F70               	subwf	main@x2& (0+255),f,b
  1341  0005EC  0E02               	movlw	2
  1342  0005EE  0100               	movlb	0	; () banked
  1343  0005F0  5B71               	subwfb	(main@x2+1)& (0+255),f,b
  1344  0005F2                     l317:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;virtual_2.c: 258: if(x1>90)x1=90;if(x2>90)x2=90;
  1348  0005F2  0E5B               	movlw	91
  1349  0005F4  0100               	movlb	0	; () banked
  1350  0005F6  5D6E               	subwf	main@x1& (0+255),w,b
  1351  0005F8  0E00               	movlw	0
  1352  0005FA  0100               	movlb	0	; () banked
  1353  0005FC  596F               	subwfb	(main@x1+1)& (0+255),w,b
  1354  0005FE  A0D8               	btfss	status,0,c
  1355  000600  D006               	goto	l3292
  1356                           
  1357                           ; BSR set to: 0
  1358  000602  0E00               	movlw	0
  1359  000604  0100               	movlb	0	; () banked
  1360  000606  6F6F               	movwf	(main@x1+1)& (0+255),b
  1361  000608  0E5A               	movlw	90
  1362  00060A  0100               	movlb	0	; () banked
  1363  00060C  6F6E               	movwf	main@x1& (0+255),b
  1364  00060E                     l3292:
  1365                           
  1366                           ; BSR set to: 0
  1367  00060E  0E5B               	movlw	91
  1368  000610  0100               	movlb	0	; () banked
  1369  000612  5D70               	subwf	main@x2& (0+255),w,b
  1370  000614  0E00               	movlw	0
  1371  000616  0100               	movlb	0	; () banked
  1372  000618  5971               	subwfb	(main@x2+1)& (0+255),w,b
  1373  00061A  A0D8               	btfss	status,0,c
  1374  00061C  D006               	goto	l3296
  1375                           
  1376                           ; BSR set to: 0
  1377  00061E  0E00               	movlw	0
  1378  000620  0100               	movlb	0	; () banked
  1379  000622  6F71               	movwf	(main@x2+1)& (0+255),b
  1380  000624  0E5A               	movlw	90
  1381  000626  0100               	movlb	0	; () banked
  1382  000628  6F70               	movwf	main@x2& (0+255),b
  1383  00062A                     l3296:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;virtual_2.c: 259: if(x1>x2){get=x1-x2;leddec(11,10,get/10,get%10);motor1(get);}
  1387  00062A  0100               	movlb	0	; () banked
  1388  00062C  516E               	movf	main@x1& (0+255),w,b
  1389  00062E  0100               	movlb	0	; () banked
  1390  000630  5D70               	subwf	main@x2& (0+255),w,b
  1391  000632  0100               	movlb	0	; () banked
  1392  000634  516F               	movf	(main@x1+1)& (0+255),w,b
  1393  000636  0100               	movlb	0	; () banked
  1394  000638  5971               	subwfb	(main@x2+1)& (0+255),w,b
  1395  00063A  B0D8               	btfsc	status,0,c
  1396  00063C  D067               	goto	l3304
  1397                           
  1398                           ; BSR set to: 0
  1399  00063E  0100               	movlb	0	; () banked
  1400  000640  C070  F060         	movff	main@x2,??_main
  1401  000644  0100               	movlb	0	; () banked
  1402  000646  C071  F061         	movff	main@x2+1,??_main+1
  1403  00064A  0100               	movlb	0	; () banked
  1404  00064C  1F60               	comf	??_main& (0+255),f,b
  1405  00064E  1F61               	comf	(??_main+1)& (0+255),f,b
  1406  000650  4B60               	infsnz	??_main& (0+255),f,b
  1407  000652  2B61               	incf	(??_main+1)& (0+255),f,b
  1408  000654  0100               	movlb	0	; () banked
  1409  000656  516E               	movf	main@x1& (0+255),w,b
  1410  000658  0100               	movlb	0	; () banked
  1411  00065A  2760               	addwf	??_main& (0+255),f,b
  1412  00065C  0100               	movlb	0	; () banked
  1413  00065E  516F               	movf	(main@x1+1)& (0+255),w,b
  1414  000660  0100               	movlb	0	; () banked
  1415  000662  2361               	addwfc	(??_main+1)& (0+255),f,b
  1416  000664  C060  F040         	movff	??_main,_get
  1417  000668  C061  F041         	movff	??_main+1,_get+1
  1418  00066C  6A42               	clrf	_get+2,c
  1419  00066E  6A43               	clrf	_get+3,c
  1420                           
  1421                           ; BSR set to: 0
  1422  000670  0E00               	movlw	0
  1423  000672  6E2B               	movwf	leddec@vh1+1,c
  1424  000674  0E0B               	movlw	11
  1425  000676  6E2A               	movwf	leddec@vh1,c
  1426  000678  0E00               	movlw	0
  1427  00067A  6E2D               	movwf	leddec@vh2+1,c
  1428  00067C  0E0A               	movlw	10
  1429  00067E  6E2C               	movwf	leddec@vh2,c
  1430  000680  C040  F012         	movff	_get,___aldiv@dividend
  1431  000684  C041  F013         	movff	_get+1,___aldiv@dividend+1
  1432  000688  C042  F014         	movff	_get+2,___aldiv@dividend+2
  1433  00068C  C043  F015         	movff	_get+3,___aldiv@dividend+3
  1434  000690  0E0A               	movlw	10
  1435  000692  6E16               	movwf	___aldiv@divisor,c
  1436  000694  0E00               	movlw	0
  1437  000696  6E17               	movwf	___aldiv@divisor+1,c
  1438  000698  0E00               	movlw	0
  1439  00069A  6E18               	movwf	___aldiv@divisor+2,c
  1440  00069C  0E00               	movlw	0
  1441  00069E  6E19               	movwf	___aldiv@divisor+3,c
  1442  0006A0  EC50  F00E         	call	___aldiv	;wreg free
  1443  0006A4  C012  F060         	movff	?___aldiv,??_main
  1444  0006A8  C013  F061         	movff	?___aldiv+1,??_main+1
  1445  0006AC  C014  F062         	movff	?___aldiv+2,??_main+2
  1446  0006B0  C015  F063         	movff	?___aldiv+3,??_main+3
  1447  0006B4  C060  F02E         	movff	??_main,leddec@vl1
  1448  0006B8  C061  F02F         	movff	??_main+1,leddec@vl1+1
  1449  0006BC  C040  F012         	movff	_get,___almod@dividend
  1450  0006C0  C041  F013         	movff	_get+1,___almod@dividend+1
  1451  0006C4  C042  F014         	movff	_get+2,___almod@dividend+2
  1452  0006C8  C043  F015         	movff	_get+3,___almod@dividend+3
  1453  0006CC  0E0A               	movlw	10
  1454  0006CE  6E16               	movwf	___almod@divisor,c
  1455  0006D0  0E00               	movlw	0
  1456  0006D2  6E17               	movwf	___almod@divisor+1,c
  1457  0006D4  0E00               	movlw	0
  1458  0006D6  6E18               	movwf	___almod@divisor+2,c
  1459  0006D8  0E00               	movlw	0
  1460  0006DA  6E19               	movwf	___almod@divisor+3,c
  1461  0006DC  EC42  F00F         	call	___almod	;wreg free
  1462  0006E0  C012  F064         	movff	?___almod,??_main+4
  1463  0006E4  C013  F065         	movff	?___almod+1,??_main+5
  1464  0006E8  C014  F066         	movff	?___almod+2,??_main+6
  1465  0006EC  C015  F067         	movff	?___almod+3,??_main+7
  1466  0006F0  C064  F030         	movff	??_main+4,leddec@vl2
  1467  0006F4  C065  F031         	movff	??_main+5,leddec@vl2+1
  1468  0006F8  EC01  F012         	call	_leddec	;wreg free
  1469  0006FC  C040  F01A         	movff	_get,motor1@x
  1470  000700  C041  F01B         	movff	_get+1,motor1@x+1
  1471  000704  ECBC  F010         	call	_motor1	;wreg free
  1472  000708  EF14  F00D         	goto	l3640
  1473  00070C                     l3304:
  1474                           
  1475                           ;virtual_2.c: 260: else if(x1<x2){get=x2-x1;leddec(10,10,get/10,get%10);motor2(get);}
  1476  00070C  0100               	movlb	0	; () banked
  1477  00070E  5170               	movf	main@x2& (0+255),w,b
  1478  000710  0100               	movlb	0	; () banked
  1479  000712  5D6E               	subwf	main@x1& (0+255),w,b
  1480  000714  0100               	movlb	0	; () banked
  1481  000716  5171               	movf	(main@x2+1)& (0+255),w,b
  1482  000718  0100               	movlb	0	; () banked
  1483  00071A  596F               	subwfb	(main@x1+1)& (0+255),w,b
  1484  00071C  B0D8               	btfsc	status,0,c
  1485  00071E  D067               	goto	l3312
  1486                           
  1487                           ; BSR set to: 0
  1488  000720  0100               	movlb	0	; () banked
  1489  000722  C06E  F060         	movff	main@x1,??_main
  1490  000726  0100               	movlb	0	; () banked
  1491  000728  C06F  F061         	movff	main@x1+1,??_main+1
  1492  00072C  0100               	movlb	0	; () banked
  1493  00072E  1F60               	comf	??_main& (0+255),f,b
  1494  000730  1F61               	comf	(??_main+1)& (0+255),f,b
  1495  000732  4B60               	infsnz	??_main& (0+255),f,b
  1496  000734  2B61               	incf	(??_main+1)& (0+255),f,b
  1497  000736  0100               	movlb	0	; () banked
  1498  000738  5170               	movf	main@x2& (0+255),w,b
  1499  00073A  0100               	movlb	0	; () banked
  1500  00073C  2760               	addwf	??_main& (0+255),f,b
  1501  00073E  0100               	movlb	0	; () banked
  1502  000740  5171               	movf	(main@x2+1)& (0+255),w,b
  1503  000742  0100               	movlb	0	; () banked
  1504  000744  2361               	addwfc	(??_main+1)& (0+255),f,b
  1505  000746  C060  F040         	movff	??_main,_get
  1506  00074A  C061  F041         	movff	??_main+1,_get+1
  1507  00074E  6A42               	clrf	_get+2,c
  1508  000750  6A43               	clrf	_get+3,c
  1509                           
  1510                           ; BSR set to: 0
  1511  000752  0E00               	movlw	0
  1512  000754  6E2B               	movwf	leddec@vh1+1,c
  1513  000756  0E0A               	movlw	10
  1514  000758  6E2A               	movwf	leddec@vh1,c
  1515  00075A  0E00               	movlw	0
  1516  00075C  6E2D               	movwf	leddec@vh2+1,c
  1517  00075E  0E0A               	movlw	10
  1518  000760  6E2C               	movwf	leddec@vh2,c
  1519  000762  C040  F012         	movff	_get,___aldiv@dividend
  1520  000766  C041  F013         	movff	_get+1,___aldiv@dividend+1
  1521  00076A  C042  F014         	movff	_get+2,___aldiv@dividend+2
  1522  00076E  C043  F015         	movff	_get+3,___aldiv@dividend+3
  1523  000772  0E0A               	movlw	10
  1524  000774  6E16               	movwf	___aldiv@divisor,c
  1525  000776  0E00               	movlw	0
  1526  000778  6E17               	movwf	___aldiv@divisor+1,c
  1527  00077A  0E00               	movlw	0
  1528  00077C  6E18               	movwf	___aldiv@divisor+2,c
  1529  00077E  0E00               	movlw	0
  1530  000780  6E19               	movwf	___aldiv@divisor+3,c
  1531  000782  EC50  F00E         	call	___aldiv	;wreg free
  1532  000786  C012  F060         	movff	?___aldiv,??_main
  1533  00078A  C013  F061         	movff	?___aldiv+1,??_main+1
  1534  00078E  C014  F062         	movff	?___aldiv+2,??_main+2
  1535  000792  C015  F063         	movff	?___aldiv+3,??_main+3
  1536  000796  C060  F02E         	movff	??_main,leddec@vl1
  1537  00079A  C061  F02F         	movff	??_main+1,leddec@vl1+1
  1538  00079E  C040  F012         	movff	_get,___almod@dividend
  1539  0007A2  C041  F013         	movff	_get+1,___almod@dividend+1
  1540  0007A6  C042  F014         	movff	_get+2,___almod@dividend+2
  1541  0007AA  C043  F015         	movff	_get+3,___almod@dividend+3
  1542  0007AE  0E0A               	movlw	10
  1543  0007B0  6E16               	movwf	___almod@divisor,c
  1544  0007B2  0E00               	movlw	0
  1545  0007B4  6E17               	movwf	___almod@divisor+1,c
  1546  0007B6  0E00               	movlw	0
  1547  0007B8  6E18               	movwf	___almod@divisor+2,c
  1548  0007BA  0E00               	movlw	0
  1549  0007BC  6E19               	movwf	___almod@divisor+3,c
  1550  0007BE  EC42  F00F         	call	___almod	;wreg free
  1551  0007C2  C012  F064         	movff	?___almod,??_main+4
  1552  0007C6  C013  F065         	movff	?___almod+1,??_main+5
  1553  0007CA  C014  F066         	movff	?___almod+2,??_main+6
  1554  0007CE  C015  F067         	movff	?___almod+3,??_main+7
  1555  0007D2  C064  F030         	movff	??_main+4,leddec@vl2
  1556  0007D6  C065  F031         	movff	??_main+5,leddec@vl2+1
  1557  0007DA  EC01  F012         	call	_leddec	;wreg free
  1558  0007DE  C040  F01A         	movff	_get,motor2@x
  1559  0007E2  C041  F01B         	movff	_get+1,motor2@x+1
  1560  0007E6  EC50  F011         	call	_motor2	;wreg free
  1561  0007EA  EF14  F00D         	goto	l3640
  1562  0007EE                     l3312:
  1563                           
  1564                           ;virtual_2.c: 261: else if(x1=x2){leddec(10,10,0,0);motor(90);}break;
  1565  0007EE  C070  F06E         	movff	main@x2,main@x1
  1566  0007F2  C071  F06F         	movff	main@x2+1,main@x1+1
  1567  0007F6  0100               	movlb	0	; () banked
  1568  0007F8  516F               	movf	(main@x1+1)& (0+255),w,b
  1569  0007FA  116E               	iorwf	main@x1& (0+255),w,b
  1570  0007FC  B4D8               	btfsc	status,2,c
  1571  0007FE  EF14  F00D         	goto	l3640
  1572                           
  1573                           ; BSR set to: 0
  1574  000802  0E00               	movlw	0
  1575  000804  6E2B               	movwf	leddec@vh1+1,c
  1576  000806  0E0A               	movlw	10
  1577  000808  6E2A               	movwf	leddec@vh1,c
  1578  00080A  0E00               	movlw	0
  1579  00080C  6E2D               	movwf	leddec@vh2+1,c
  1580  00080E  0E0A               	movlw	10
  1581  000810  6E2C               	movwf	leddec@vh2,c
  1582  000812  0E00               	movlw	0
  1583  000814  6E2F               	movwf	leddec@vl1+1,c
  1584  000816  0E00               	movlw	0
  1585  000818  6E2E               	movwf	leddec@vl1,c
  1586  00081A  0E00               	movlw	0
  1587  00081C  6E31               	movwf	leddec@vl2+1,c
  1588  00081E  0E00               	movlw	0
  1589  000820  6E30               	movwf	leddec@vl2,c
  1590  000822  EC01  F012         	call	_leddec	;wreg free
  1591  000826  0E00               	movlw	0
  1592  000828  6E1B               	movwf	motor@x+1,c
  1593  00082A  0E5A               	movlw	90
  1594  00082C  6E1A               	movwf	motor@x,c
  1595  00082E  EC7A  F011         	call	_motor	;wreg free
  1596  000832  EF14  F00D         	goto	l3640
  1597  000836                     l3318:
  1598                           
  1599                           ;virtual_2.c: 265: led_dot(0);x1=adc_get(1);
  1600  000836  0E00               	movlw	0
  1601  000838  EC39  F012         	call	_led_dot
  1602  00083C  0E01               	movlw	1
  1603  00083E  EC25  F011         	call	_adc_get
  1604  000842  C012  F06E         	movff	?_adc_get,main@x1
  1605  000846  C013  F06F         	movff	?_adc_get+1,main@x1+1
  1606                           
  1607                           ;virtual_2.c: 266: if(RA3==1)
  1608  00084A  A680               	btfss	3968,3,c	;volatile
  1609  00084C  D028               	goto	l3340
  1610                           
  1611                           ;virtual_2.c: 267: {
  1612                           ;virtual_2.c: 268: delay_ms(1000);
  1613  00084E  0E03               	movlw	3
  1614  000850  6E13               	movwf	delay_ms@ms+1,c
  1615  000852  0EE8               	movlw	232
  1616  000854  6E12               	movwf	delay_ms@ms,c
  1617  000856  EC12  F012         	call	_delay_ms	;wreg free
  1618                           
  1619                           ;virtual_2.c: 269: if(RA3==1)
  1620  00085A  A680               	btfss	3968,3,c	;volatile
  1621  00085C  D020               	goto	l3340
  1622                           
  1623                           ;virtual_2.c: 270: {
  1624                           ;virtual_2.c: 271: delay_ms(1000);
  1625  00085E  0E03               	movlw	3
  1626  000860  6E13               	movwf	delay_ms@ms+1,c
  1627  000862  0EE8               	movlw	232
  1628  000864  6E12               	movwf	delay_ms@ms,c
  1629  000866  EC12  F012         	call	_delay_ms	;wreg free
  1630                           
  1631                           ;virtual_2.c: 272: if(RA3==1)
  1632  00086A  A680               	btfss	3968,3,c	;volatile
  1633  00086C  D018               	goto	l3340
  1634                           
  1635                           ;virtual_2.c: 273: {
  1636                           ;virtual_2.c: 274: delay_ms(1000);
  1637  00086E  0E03               	movlw	3
  1638  000870  6E13               	movwf	delay_ms@ms+1,c
  1639  000872  0EE8               	movlw	232
  1640  000874  6E12               	movwf	delay_ms@ms,c
  1641  000876  EC12  F012         	call	_delay_ms	;wreg free
  1642                           
  1643                           ;virtual_2.c: 275: if(RA3==1)
  1644  00087A  A680               	btfss	3968,3,c	;volatile
  1645  00087C  D010               	goto	l3340
  1646                           
  1647                           ;virtual_2.c: 276: {
  1648                           ;virtual_2.c: 277: x1y=0;
  1649  00087E  0E00               	movlw	0
  1650  000880  0100               	movlb	0	; () banked
  1651  000882  6F6B               	movwf	(main@x1y+1)& (0+255),b
  1652  000884  0E00               	movlw	0
  1653  000886  0100               	movlb	0	; () banked
  1654  000888  6F6A               	movwf	main@x1y& (0+255),b
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;virtual_2.c: 278: led_dec(0,x1y);
  1658  00088A  0E00               	movlw	0
  1659  00088C  6E2B               	movwf	led_dec@vh+1,c
  1660  00088E  0E00               	movlw	0
  1661  000890  6E2A               	movwf	led_dec@vh,c
  1662  000892  C06A  F02C         	movff	main@x1y,led_dec@vl
  1663  000896  C06B  F02D         	movff	main@x1y+1,led_dec@vl+1
  1664  00089A  EC83  F010         	call	_led_dec	;wreg free
  1665  00089E                     l3340:
  1666                           
  1667                           ;virtual_2.c: 279: }
  1668                           ;virtual_2.c: 280: }
  1669                           ;virtual_2.c: 281: }
  1670                           ;virtual_2.c: 282: }
  1671                           ;virtual_2.c: 283: if(x1>700)
  1672  00089E  0EBD               	movlw	189
  1673  0008A0  0100               	movlb	0	; () banked
  1674  0008A2  5D6E               	subwf	main@x1& (0+255),w,b
  1675  0008A4  0E02               	movlw	2
  1676  0008A6  0100               	movlb	0	; () banked
  1677  0008A8  596F               	subwfb	(main@x1+1)& (0+255),w,b
  1678  0008AA  A0D8               	btfss	status,0,c
  1679  0008AC  D049               	goto	l3360
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;virtual_2.c: 284: {
  1683                           ;virtual_2.c: 285: x1y++;if(x1y>99)x1y=0;
  1684  0008AE  0100               	movlb	0	; () banked
  1685  0008B0  4B6A               	infsnz	main@x1y& (0+255),f,b
  1686  0008B2  2B6B               	incf	(main@x1y+1)& (0+255),f,b
  1687                           
  1688                           ; BSR set to: 0
  1689  0008B4  0E64               	movlw	100
  1690  0008B6  0100               	movlb	0	; () banked
  1691  0008B8  5D6A               	subwf	main@x1y& (0+255),w,b
  1692  0008BA  0E00               	movlw	0
  1693  0008BC  0100               	movlb	0	; () banked
  1694  0008BE  596B               	subwfb	(main@x1y+1)& (0+255),w,b
  1695  0008C0  A0D8               	btfss	status,0,c
  1696  0008C2  D006               	goto	l3348
  1697                           
  1698                           ; BSR set to: 0
  1699  0008C4  0E00               	movlw	0
  1700  0008C6  0100               	movlb	0	; () banked
  1701  0008C8  6F6B               	movwf	(main@x1y+1)& (0+255),b
  1702  0008CA  0E00               	movlw	0
  1703  0008CC  0100               	movlb	0	; () banked
  1704  0008CE  6F6A               	movwf	main@x1y& (0+255),b
  1705  0008D0                     l3348:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;virtual_2.c: 286: led_dec(0,x1y);
  1709  0008D0  0E00               	movlw	0
  1710  0008D2  6E2B               	movwf	led_dec@vh+1,c
  1711  0008D4  0E00               	movlw	0
  1712  0008D6  6E2A               	movwf	led_dec@vh,c
  1713  0008D8  C06A  F02C         	movff	main@x1y,led_dec@vl
  1714  0008DC  C06B  F02D         	movff	main@x1y+1,led_dec@vl+1
  1715  0008E0  EC83  F010         	call	_led_dec	;wreg free
  1716                           
  1717                           ;virtual_2.c: 287: delay_ms(200);
  1718  0008E4  0E00               	movlw	0
  1719  0008E6  6E13               	movwf	delay_ms@ms+1,c
  1720  0008E8  0EC8               	movlw	200
  1721  0008EA  6E12               	movwf	delay_ms@ms,c
  1722  0008EC  EC12  F012         	call	_delay_ms	;wreg free
  1723  0008F0                     l3352:
  1724  0008F0  0E01               	movlw	1
  1725  0008F2  EC25  F011         	call	_adc_get
  1726  0008F6  C012  F040         	movff	?_adc_get,_get
  1727  0008FA  C013  F041         	movff	?_adc_get+1,_get+1
  1728  0008FE  6A42               	clrf	_get+2,c
  1729  000900  6A43               	clrf	_get+3,c
  1730  000902  0E00               	movlw	0
  1731  000904  6E13               	movwf	delay_ms@ms+1,c
  1732  000906  0E32               	movlw	50
  1733  000908  6E12               	movwf	delay_ms@ms,c
  1734  00090A  EC12  F012         	call	_delay_ms	;wreg free
  1735  00090E  5043               	movf	_get+3,w,c
  1736  000910  0A80               	xorlw	128
  1737  000912  0F80               	addlw	128
  1738  000914  E108               	bnz	u3245
  1739  000916  0E00               	movlw	0
  1740  000918  5C42               	subwf	_get+2,w,c
  1741  00091A  E105               	bnz	u3245
  1742  00091C  0E02               	movlw	2
  1743  00091E  5C41               	subwf	_get+1,w,c
  1744  000920  E102               	bnz	u3245
  1745  000922  0EBD               	movlw	189
  1746  000924  5C40               	subwf	_get,w,c
  1747  000926                     u3245:
  1748  000926  A0D8               	btfss	status,0,c
  1749  000928  D00B               	goto	l3360
  1750  00092A  0E00               	movlw	0
  1751  00092C  6E2B               	movwf	led_dec@vh+1,c
  1752  00092E  0E00               	movlw	0
  1753  000930  6E2A               	movwf	led_dec@vh,c
  1754  000932  C06A  F02C         	movff	main@x1y,led_dec@vl
  1755  000936  C06B  F02D         	movff	main@x1y+1,led_dec@vl+1
  1756  00093A  EC83  F010         	call	_led_dec	;wreg free
  1757  00093E  D7D8               	goto	l3352
  1758  000940                     l3360:
  1759                           
  1760                           ;virtual_2.c: 289: }
  1761                           ;virtual_2.c: 290: led_dec(0,x1y);
  1762  000940  0E00               	movlw	0
  1763  000942  6E2B               	movwf	led_dec@vh+1,c
  1764  000944  0E00               	movlw	0
  1765  000946  6E2A               	movwf	led_dec@vh,c
  1766  000948  C06A  F02C         	movff	main@x1y,led_dec@vl
  1767  00094C  C06B  F02D         	movff	main@x1y+1,led_dec@vl+1
  1768  000950  EC83  F010         	call	_led_dec	;wreg free
  1769                           
  1770                           ;virtual_2.c: 291: motor1(90);
  1771  000954  0E00               	movlw	0
  1772  000956  6E1B               	movwf	motor1@x+1,c
  1773  000958  0E5A               	movlw	90
  1774  00095A  6E1A               	movwf	motor1@x,c
  1775  00095C  ECBC  F010         	call	_motor1	;wreg free
  1776                           
  1777                           ;virtual_2.c: 292: break;
  1778  000960  EF14  F00D         	goto	l3640
  1779  000964                     l3364:
  1780                           
  1781                           ;virtual_2.c: 296: led_dot(0);x2=adc_get(2);
  1782  000964  0E00               	movlw	0
  1783  000966  EC39  F012         	call	_led_dot
  1784  00096A  0E02               	movlw	2
  1785  00096C  EC25  F011         	call	_adc_get
  1786  000970  C012  F070         	movff	?_adc_get,main@x2
  1787  000974  C013  F071         	movff	?_adc_get+1,main@x2+1
  1788                           
  1789                           ;virtual_2.c: 297: if(RA3==1)
  1790  000978  A680               	btfss	3968,3,c	;volatile
  1791  00097A  D028               	goto	l3386
  1792                           
  1793                           ;virtual_2.c: 298: {
  1794                           ;virtual_2.c: 299: delay_ms(1000);
  1795  00097C  0E03               	movlw	3
  1796  00097E  6E13               	movwf	delay_ms@ms+1,c
  1797  000980  0EE8               	movlw	232
  1798  000982  6E12               	movwf	delay_ms@ms,c
  1799  000984  EC12  F012         	call	_delay_ms	;wreg free
  1800                           
  1801                           ;virtual_2.c: 300: if(RA3==1)
  1802  000988  A680               	btfss	3968,3,c	;volatile
  1803  00098A  D020               	goto	l3386
  1804                           
  1805                           ;virtual_2.c: 301: {
  1806                           ;virtual_2.c: 302: delay_ms(1000);
  1807  00098C  0E03               	movlw	3
  1808  00098E  6E13               	movwf	delay_ms@ms+1,c
  1809  000990  0EE8               	movlw	232
  1810  000992  6E12               	movwf	delay_ms@ms,c
  1811  000994  EC12  F012         	call	_delay_ms	;wreg free
  1812                           
  1813                           ;virtual_2.c: 303: if(RA3==1)
  1814  000998  A680               	btfss	3968,3,c	;volatile
  1815  00099A  D018               	goto	l3386
  1816                           
  1817                           ;virtual_2.c: 304: {
  1818                           ;virtual_2.c: 305: delay_ms(1000);
  1819  00099C  0E03               	movlw	3
  1820  00099E  6E13               	movwf	delay_ms@ms+1,c
  1821  0009A0  0EE8               	movlw	232
  1822  0009A2  6E12               	movwf	delay_ms@ms,c
  1823  0009A4  EC12  F012         	call	_delay_ms	;wreg free
  1824                           
  1825                           ;virtual_2.c: 306: if(RA3==1)
  1826  0009A8  A680               	btfss	3968,3,c	;volatile
  1827  0009AA  D010               	goto	l3386
  1828                           
  1829                           ;virtual_2.c: 307: {
  1830                           ;virtual_2.c: 308: x2y=0;
  1831  0009AC  0E00               	movlw	0
  1832  0009AE  0100               	movlb	0	; () banked
  1833  0009B0  6F6D               	movwf	(main@x2y+1)& (0+255),b
  1834  0009B2  0E00               	movlw	0
  1835  0009B4  0100               	movlb	0	; () banked
  1836  0009B6  6F6C               	movwf	main@x2y& (0+255),b
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;virtual_2.c: 309: led_dec(0,x2y);
  1840  0009B8  0E00               	movlw	0
  1841  0009BA  6E2B               	movwf	led_dec@vh+1,c
  1842  0009BC  0E00               	movlw	0
  1843  0009BE  6E2A               	movwf	led_dec@vh,c
  1844  0009C0  C06C  F02C         	movff	main@x2y,led_dec@vl
  1845  0009C4  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  1846  0009C8  EC83  F010         	call	_led_dec	;wreg free
  1847  0009CC                     l3386:
  1848                           
  1849                           ;virtual_2.c: 310: }
  1850                           ;virtual_2.c: 311: }
  1851                           ;virtual_2.c: 312: }
  1852                           ;virtual_2.c: 313: }
  1853                           ;virtual_2.c: 314: if(x2>700)
  1854  0009CC  0EBD               	movlw	189
  1855  0009CE  0100               	movlb	0	; () banked
  1856  0009D0  5D70               	subwf	main@x2& (0+255),w,b
  1857  0009D2  0E02               	movlw	2
  1858  0009D4  0100               	movlb	0	; () banked
  1859  0009D6  5971               	subwfb	(main@x2+1)& (0+255),w,b
  1860  0009D8  A0D8               	btfss	status,0,c
  1861  0009DA  D049               	goto	l3406
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;virtual_2.c: 315: {
  1865                           ;virtual_2.c: 316: x2y++;if(x2y>99)x2y=0;
  1866  0009DC  0100               	movlb	0	; () banked
  1867  0009DE  4B6C               	infsnz	main@x2y& (0+255),f,b
  1868  0009E0  2B6D               	incf	(main@x2y+1)& (0+255),f,b
  1869                           
  1870                           ; BSR set to: 0
  1871  0009E2  0E64               	movlw	100
  1872  0009E4  0100               	movlb	0	; () banked
  1873  0009E6  5D6C               	subwf	main@x2y& (0+255),w,b
  1874  0009E8  0E00               	movlw	0
  1875  0009EA  0100               	movlb	0	; () banked
  1876  0009EC  596D               	subwfb	(main@x2y+1)& (0+255),w,b
  1877  0009EE  A0D8               	btfss	status,0,c
  1878  0009F0  D006               	goto	l3394
  1879                           
  1880                           ; BSR set to: 0
  1881  0009F2  0E00               	movlw	0
  1882  0009F4  0100               	movlb	0	; () banked
  1883  0009F6  6F6D               	movwf	(main@x2y+1)& (0+255),b
  1884  0009F8  0E00               	movlw	0
  1885  0009FA  0100               	movlb	0	; () banked
  1886  0009FC  6F6C               	movwf	main@x2y& (0+255),b
  1887  0009FE                     l3394:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;virtual_2.c: 317: led_dec(0,x2y);
  1891  0009FE  0E00               	movlw	0
  1892  000A00  6E2B               	movwf	led_dec@vh+1,c
  1893  000A02  0E00               	movlw	0
  1894  000A04  6E2A               	movwf	led_dec@vh,c
  1895  000A06  C06C  F02C         	movff	main@x2y,led_dec@vl
  1896  000A0A  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  1897  000A0E  EC83  F010         	call	_led_dec	;wreg free
  1898                           
  1899                           ;virtual_2.c: 318: delay_ms(200);
  1900  000A12  0E00               	movlw	0
  1901  000A14  6E13               	movwf	delay_ms@ms+1,c
  1902  000A16  0EC8               	movlw	200
  1903  000A18  6E12               	movwf	delay_ms@ms,c
  1904  000A1A  EC12  F012         	call	_delay_ms	;wreg free
  1905  000A1E                     l3398:
  1906  000A1E  0E02               	movlw	2
  1907  000A20  EC25  F011         	call	_adc_get
  1908  000A24  C012  F040         	movff	?_adc_get,_get
  1909  000A28  C013  F041         	movff	?_adc_get+1,_get+1
  1910  000A2C  6A42               	clrf	_get+2,c
  1911  000A2E  6A43               	clrf	_get+3,c
  1912  000A30  0E00               	movlw	0
  1913  000A32  6E13               	movwf	delay_ms@ms+1,c
  1914  000A34  0E32               	movlw	50
  1915  000A36  6E12               	movwf	delay_ms@ms,c
  1916  000A38  EC12  F012         	call	_delay_ms	;wreg free
  1917  000A3C  5043               	movf	_get+3,w,c
  1918  000A3E  0A80               	xorlw	128
  1919  000A40  0F80               	addlw	128
  1920  000A42  E108               	bnz	u3315
  1921  000A44  0E00               	movlw	0
  1922  000A46  5C42               	subwf	_get+2,w,c
  1923  000A48  E105               	bnz	u3315
  1924  000A4A  0E02               	movlw	2
  1925  000A4C  5C41               	subwf	_get+1,w,c
  1926  000A4E  E102               	bnz	u3315
  1927  000A50  0EBD               	movlw	189
  1928  000A52  5C40               	subwf	_get,w,c
  1929  000A54                     u3315:
  1930  000A54  A0D8               	btfss	status,0,c
  1931  000A56  D00B               	goto	l3406
  1932  000A58  0E00               	movlw	0
  1933  000A5A  6E2B               	movwf	led_dec@vh+1,c
  1934  000A5C  0E00               	movlw	0
  1935  000A5E  6E2A               	movwf	led_dec@vh,c
  1936  000A60  C06C  F02C         	movff	main@x2y,led_dec@vl
  1937  000A64  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  1938  000A68  EC83  F010         	call	_led_dec	;wreg free
  1939  000A6C  D7D8               	goto	l3398
  1940  000A6E                     l3406:
  1941                           
  1942                           ;virtual_2.c: 320: }
  1943                           ;virtual_2.c: 321: led_dec(0,x2y);
  1944  000A6E  0E00               	movlw	0
  1945  000A70  6E2B               	movwf	led_dec@vh+1,c
  1946  000A72  0E00               	movlw	0
  1947  000A74  6E2A               	movwf	led_dec@vh,c
  1948  000A76  C06C  F02C         	movff	main@x2y,led_dec@vl
  1949  000A7A  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  1950  000A7E  EC83  F010         	call	_led_dec	;wreg free
  1951                           
  1952                           ;virtual_2.c: 322: motor2(90);
  1953  000A82  0E00               	movlw	0
  1954  000A84  6E1B               	movwf	motor2@x+1,c
  1955  000A86  0E5A               	movlw	90
  1956  000A88  6E1A               	movwf	motor2@x,c
  1957  000A8A  EC50  F011         	call	_motor2	;wreg free
  1958                           
  1959                           ;virtual_2.c: 323: break;
  1960  000A8E  EF14  F00D         	goto	l3640
  1961  000A92                     l3410:
  1962                           
  1963                           ;virtual_2.c: 326: led_dot(0);x1=adc_get(1);x2=adc_get(2);
  1964  000A92  0E00               	movlw	0
  1965  000A94  EC39  F012         	call	_led_dot
  1966  000A98  0E01               	movlw	1
  1967  000A9A  EC25  F011         	call	_adc_get
  1968  000A9E  C012  F06E         	movff	?_adc_get,main@x1
  1969  000AA2  C013  F06F         	movff	?_adc_get+1,main@x1+1
  1970  000AA6  0E02               	movlw	2
  1971  000AA8  EC25  F011         	call	_adc_get
  1972  000AAC  C012  F070         	movff	?_adc_get,main@x2
  1973  000AB0  C013  F071         	movff	?_adc_get+1,main@x2+1
  1974                           
  1975                           ;virtual_2.c: 327: if(RA3==1)
  1976  000AB4  A680               	btfss	3968,3,c	;volatile
  1977  000AB6  D02C               	goto	l3434
  1978                           
  1979                           ;virtual_2.c: 328: {
  1980                           ;virtual_2.c: 329: delay_ms(1000);
  1981  000AB8  0E03               	movlw	3
  1982  000ABA  6E13               	movwf	delay_ms@ms+1,c
  1983  000ABC  0EE8               	movlw	232
  1984  000ABE  6E12               	movwf	delay_ms@ms,c
  1985  000AC0  EC12  F012         	call	_delay_ms	;wreg free
  1986                           
  1987                           ;virtual_2.c: 330: if(RA3==1)
  1988  000AC4  A680               	btfss	3968,3,c	;volatile
  1989  000AC6  D024               	goto	l3434
  1990                           
  1991                           ;virtual_2.c: 331: {
  1992                           ;virtual_2.c: 332: delay_ms(1000);
  1993  000AC8  0E03               	movlw	3
  1994  000ACA  6E13               	movwf	delay_ms@ms+1,c
  1995  000ACC  0EE8               	movlw	232
  1996  000ACE  6E12               	movwf	delay_ms@ms,c
  1997  000AD0  EC12  F012         	call	_delay_ms	;wreg free
  1998                           
  1999                           ;virtual_2.c: 333: if(RA3==1)
  2000  000AD4  A680               	btfss	3968,3,c	;volatile
  2001  000AD6  D01C               	goto	l3434
  2002                           
  2003                           ;virtual_2.c: 334: {
  2004                           ;virtual_2.c: 335: delay_ms(1000);
  2005  000AD8  0E03               	movlw	3
  2006  000ADA  6E13               	movwf	delay_ms@ms+1,c
  2007  000ADC  0EE8               	movlw	232
  2008  000ADE  6E12               	movwf	delay_ms@ms,c
  2009  000AE0  EC12  F012         	call	_delay_ms	;wreg free
  2010                           
  2011                           ;virtual_2.c: 336: if(RA3==1)
  2012  000AE4  A680               	btfss	3968,3,c	;volatile
  2013  000AE6  D014               	goto	l3434
  2014                           
  2015                           ;virtual_2.c: 337: {
  2016                           ;virtual_2.c: 338: x1y=x2y=0;
  2017  000AE8  0E00               	movlw	0
  2018  000AEA  0100               	movlb	0	; () banked
  2019  000AEC  6F6D               	movwf	(main@x2y+1)& (0+255),b
  2020  000AEE  0E00               	movlw	0
  2021  000AF0  0100               	movlb	0	; () banked
  2022  000AF2  6F6C               	movwf	main@x2y& (0+255),b
  2023  000AF4  C06C  F06A         	movff	main@x2y,main@x1y
  2024  000AF8  C06D  F06B         	movff	main@x2y+1,main@x1y+1
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;virtual_2.c: 339: led_dec(x1y,x2y);
  2028  000AFC  C06A  F02A         	movff	main@x1y,led_dec@vh
  2029  000B00  C06B  F02B         	movff	main@x1y+1,led_dec@vh+1
  2030  000B04  C06C  F02C         	movff	main@x2y,led_dec@vl
  2031  000B08  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  2032  000B0C  EC83  F010         	call	_led_dec	;wreg free
  2033  000B10                     l3434:
  2034                           
  2035                           ;virtual_2.c: 340: }
  2036                           ;virtual_2.c: 341: }
  2037                           ;virtual_2.c: 342: }
  2038                           ;virtual_2.c: 343: }
  2039                           ;virtual_2.c: 344: if(x1>700)
  2040  000B10  0EBD               	movlw	189
  2041  000B12  0100               	movlb	0	; () banked
  2042  000B14  5D6E               	subwf	main@x1& (0+255),w,b
  2043  000B16  0E02               	movlw	2
  2044  000B18  0100               	movlb	0	; () banked
  2045  000B1A  596F               	subwfb	(main@x1+1)& (0+255),w,b
  2046  000B1C  A0D8               	btfss	status,0,c
  2047  000B1E  D049               	goto	l3454
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;virtual_2.c: 345: {
  2051                           ;virtual_2.c: 346: x1y++;if(x1y>99)x1y=0;
  2052  000B20  0100               	movlb	0	; () banked
  2053  000B22  4B6A               	infsnz	main@x1y& (0+255),f,b
  2054  000B24  2B6B               	incf	(main@x1y+1)& (0+255),f,b
  2055                           
  2056                           ; BSR set to: 0
  2057  000B26  0E64               	movlw	100
  2058  000B28  0100               	movlb	0	; () banked
  2059  000B2A  5D6A               	subwf	main@x1y& (0+255),w,b
  2060  000B2C  0E00               	movlw	0
  2061  000B2E  0100               	movlb	0	; () banked
  2062  000B30  596B               	subwfb	(main@x1y+1)& (0+255),w,b
  2063  000B32  A0D8               	btfss	status,0,c
  2064  000B34  D006               	goto	l3442
  2065                           
  2066                           ; BSR set to: 0
  2067  000B36  0E00               	movlw	0
  2068  000B38  0100               	movlb	0	; () banked
  2069  000B3A  6F6B               	movwf	(main@x1y+1)& (0+255),b
  2070  000B3C  0E00               	movlw	0
  2071  000B3E  0100               	movlb	0	; () banked
  2072  000B40  6F6A               	movwf	main@x1y& (0+255),b
  2073  000B42                     l3442:
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;virtual_2.c: 347: led_dec(x1y,x2y);
  2077  000B42  C06A  F02A         	movff	main@x1y,led_dec@vh
  2078  000B46  C06B  F02B         	movff	main@x1y+1,led_dec@vh+1
  2079  000B4A  C06C  F02C         	movff	main@x2y,led_dec@vl
  2080  000B4E  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  2081  000B52  EC83  F010         	call	_led_dec	;wreg free
  2082                           
  2083                           ;virtual_2.c: 348: delay_ms(200);
  2084  000B56  0E00               	movlw	0
  2085  000B58  6E13               	movwf	delay_ms@ms+1,c
  2086  000B5A  0EC8               	movlw	200
  2087  000B5C  6E12               	movwf	delay_ms@ms,c
  2088  000B5E  EC12  F012         	call	_delay_ms	;wreg free
  2089  000B62                     l3446:
  2090  000B62  0E01               	movlw	1
  2091  000B64  EC25  F011         	call	_adc_get
  2092  000B68  C012  F040         	movff	?_adc_get,_get
  2093  000B6C  C013  F041         	movff	?_adc_get+1,_get+1
  2094  000B70  6A42               	clrf	_get+2,c
  2095  000B72  6A43               	clrf	_get+3,c
  2096  000B74  0E00               	movlw	0
  2097  000B76  6E13               	movwf	delay_ms@ms+1,c
  2098  000B78  0E32               	movlw	50
  2099  000B7A  6E12               	movwf	delay_ms@ms,c
  2100  000B7C  EC12  F012         	call	_delay_ms	;wreg free
  2101  000B80  5043               	movf	_get+3,w,c
  2102  000B82  0A80               	xorlw	128
  2103  000B84  0F80               	addlw	128
  2104  000B86  E108               	bnz	u3385
  2105  000B88  0E00               	movlw	0
  2106  000B8A  5C42               	subwf	_get+2,w,c
  2107  000B8C  E105               	bnz	u3385
  2108  000B8E  0E02               	movlw	2
  2109  000B90  5C41               	subwf	_get+1,w,c
  2110  000B92  E102               	bnz	u3385
  2111  000B94  0EBD               	movlw	189
  2112  000B96  5C40               	subwf	_get,w,c
  2113  000B98                     u3385:
  2114  000B98  A0D8               	btfss	status,0,c
  2115  000B9A  D00B               	goto	l3454
  2116  000B9C  C06A  F02A         	movff	main@x1y,led_dec@vh
  2117  000BA0  C06B  F02B         	movff	main@x1y+1,led_dec@vh+1
  2118  000BA4  C06C  F02C         	movff	main@x2y,led_dec@vl
  2119  000BA8  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  2120  000BAC  EC83  F010         	call	_led_dec	;wreg free
  2121  000BB0  D7D8               	goto	l3446
  2122  000BB2                     l3454:
  2123                           
  2124                           ;virtual_2.c: 350: }
  2125                           ;virtual_2.c: 351: if(x2>700)
  2126  000BB2  0EBD               	movlw	189
  2127  000BB4  0100               	movlb	0	; () banked
  2128  000BB6  5D70               	subwf	main@x2& (0+255),w,b
  2129  000BB8  0E02               	movlw	2
  2130  000BBA  0100               	movlb	0	; () banked
  2131  000BBC  5971               	subwfb	(main@x2+1)& (0+255),w,b
  2132  000BBE  A0D8               	btfss	status,0,c
  2133  000BC0  D049               	goto	l3474
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;virtual_2.c: 352: {
  2137                           ;virtual_2.c: 353: x2y++;if(x2y>99)x2y=0;
  2138  000BC2  0100               	movlb	0	; () banked
  2139  000BC4  4B6C               	infsnz	main@x2y& (0+255),f,b
  2140  000BC6  2B6D               	incf	(main@x2y+1)& (0+255),f,b
  2141                           
  2142                           ; BSR set to: 0
  2143  000BC8  0E64               	movlw	100
  2144  000BCA  0100               	movlb	0	; () banked
  2145  000BCC  5D6C               	subwf	main@x2y& (0+255),w,b
  2146  000BCE  0E00               	movlw	0
  2147  000BD0  0100               	movlb	0	; () banked
  2148  000BD2  596D               	subwfb	(main@x2y+1)& (0+255),w,b
  2149  000BD4  A0D8               	btfss	status,0,c
  2150  000BD6  D006               	goto	l3462
  2151                           
  2152                           ; BSR set to: 0
  2153  000BD8  0E00               	movlw	0
  2154  000BDA  0100               	movlb	0	; () banked
  2155  000BDC  6F6D               	movwf	(main@x2y+1)& (0+255),b
  2156  000BDE  0E00               	movlw	0
  2157  000BE0  0100               	movlb	0	; () banked
  2158  000BE2  6F6C               	movwf	main@x2y& (0+255),b
  2159  000BE4                     l3462:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;virtual_2.c: 354: led_dec(x1y,x2y);
  2163  000BE4  C06A  F02A         	movff	main@x1y,led_dec@vh
  2164  000BE8  C06B  F02B         	movff	main@x1y+1,led_dec@vh+1
  2165  000BEC  C06C  F02C         	movff	main@x2y,led_dec@vl
  2166  000BF0  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  2167  000BF4  EC83  F010         	call	_led_dec	;wreg free
  2168                           
  2169                           ;virtual_2.c: 355: delay_ms(200);
  2170  000BF8  0E00               	movlw	0
  2171  000BFA  6E13               	movwf	delay_ms@ms+1,c
  2172  000BFC  0EC8               	movlw	200
  2173  000BFE  6E12               	movwf	delay_ms@ms,c
  2174  000C00  EC12  F012         	call	_delay_ms	;wreg free
  2175  000C04                     l3466:
  2176  000C04  0E02               	movlw	2
  2177  000C06  EC25  F011         	call	_adc_get
  2178  000C0A  C012  F040         	movff	?_adc_get,_get
  2179  000C0E  C013  F041         	movff	?_adc_get+1,_get+1
  2180  000C12  6A42               	clrf	_get+2,c
  2181  000C14  6A43               	clrf	_get+3,c
  2182  000C16  0E00               	movlw	0
  2183  000C18  6E13               	movwf	delay_ms@ms+1,c
  2184  000C1A  0E32               	movlw	50
  2185  000C1C  6E12               	movwf	delay_ms@ms,c
  2186  000C1E  EC12  F012         	call	_delay_ms	;wreg free
  2187  000C22  5043               	movf	_get+3,w,c
  2188  000C24  0A80               	xorlw	128
  2189  000C26  0F80               	addlw	128
  2190  000C28  E108               	bnz	u3415
  2191  000C2A  0E00               	movlw	0
  2192  000C2C  5C42               	subwf	_get+2,w,c
  2193  000C2E  E105               	bnz	u3415
  2194  000C30  0E02               	movlw	2
  2195  000C32  5C41               	subwf	_get+1,w,c
  2196  000C34  E102               	bnz	u3415
  2197  000C36  0EBD               	movlw	189
  2198  000C38  5C40               	subwf	_get,w,c
  2199  000C3A                     u3415:
  2200  000C3A  A0D8               	btfss	status,0,c
  2201  000C3C  D00B               	goto	l3474
  2202  000C3E  C06A  F02A         	movff	main@x1y,led_dec@vh
  2203  000C42  C06B  F02B         	movff	main@x1y+1,led_dec@vh+1
  2204  000C46  C06C  F02C         	movff	main@x2y,led_dec@vl
  2205  000C4A  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  2206  000C4E  EC83  F010         	call	_led_dec	;wreg free
  2207  000C52  D7D8               	goto	l3466
  2208  000C54                     l3474:
  2209                           
  2210                           ;virtual_2.c: 357: }
  2211                           ;virtual_2.c: 358: led_dec(x1y,x2y);
  2212  000C54  C06A  F02A         	movff	main@x1y,led_dec@vh
  2213  000C58  C06B  F02B         	movff	main@x1y+1,led_dec@vh+1
  2214  000C5C  C06C  F02C         	movff	main@x2y,led_dec@vl
  2215  000C60  C06D  F02D         	movff	main@x2y+1,led_dec@vl+1
  2216  000C64  EC83  F010         	call	_led_dec	;wreg free
  2217                           
  2218                           ;virtual_2.c: 359: motor(90);
  2219  000C68  0E00               	movlw	0
  2220  000C6A  6E1B               	movwf	motor@x+1,c
  2221  000C6C  0E5A               	movlw	90
  2222  000C6E  6E1A               	movwf	motor@x,c
  2223  000C70  EC7A  F011         	call	_motor	;wreg free
  2224                           
  2225                           ;virtual_2.c: 360: break;
  2226  000C74  EF14  F00D         	goto	l3640
  2227  000C78                     l3478:
  2228                           
  2229                           ;virtual_2.c: 363: led_dot(0);x1=adc_get(1);x2=adc_get(2);
  2230  000C78  0E00               	movlw	0
  2231  000C7A  EC39  F012         	call	_led_dot
  2232  000C7E  0E01               	movlw	1
  2233  000C80  EC25  F011         	call	_adc_get
  2234  000C84  C012  F06E         	movff	?_adc_get,main@x1
  2235  000C88  C013  F06F         	movff	?_adc_get+1,main@x1+1
  2236  000C8C  0E02               	movlw	2
  2237  000C8E  EC25  F011         	call	_adc_get
  2238  000C92  C012  F070         	movff	?_adc_get,main@x2
  2239  000C96  C013  F071         	movff	?_adc_get+1,main@x2+1
  2240                           
  2241                           ;virtual_2.c: 364: if(RA3==1)
  2242  000C9A  A680               	btfss	3968,3,c	;volatile
  2243  000C9C  D052               	goto	l3504
  2244                           
  2245                           ;virtual_2.c: 365: {
  2246                           ;virtual_2.c: 366: delay_ms(1000);
  2247  000C9E  0E03               	movlw	3
  2248  000CA0  6E13               	movwf	delay_ms@ms+1,c
  2249  000CA2  0EE8               	movlw	232
  2250  000CA4  6E12               	movwf	delay_ms@ms,c
  2251  000CA6  EC12  F012         	call	_delay_ms	;wreg free
  2252                           
  2253                           ;virtual_2.c: 367: if(RA3==1)
  2254  000CAA  A680               	btfss	3968,3,c	;volatile
  2255  000CAC  D04A               	goto	l3504
  2256                           
  2257                           ;virtual_2.c: 368: {
  2258                           ;virtual_2.c: 369: delay_ms(1000);
  2259  000CAE  0E03               	movlw	3
  2260  000CB0  6E13               	movwf	delay_ms@ms+1,c
  2261  000CB2  0EE8               	movlw	232
  2262  000CB4  6E12               	movwf	delay_ms@ms,c
  2263  000CB6  EC12  F012         	call	_delay_ms	;wreg free
  2264                           
  2265                           ;virtual_2.c: 370: if(RA3==1)
  2266  000CBA  A680               	btfss	3968,3,c	;volatile
  2267  000CBC  D042               	goto	l3504
  2268                           
  2269                           ;virtual_2.c: 371: {
  2270                           ;virtual_2.c: 372: delay_ms(1000);
  2271  000CBE  0E03               	movlw	3
  2272  000CC0  6E13               	movwf	delay_ms@ms+1,c
  2273  000CC2  0EE8               	movlw	232
  2274  000CC4  6E12               	movwf	delay_ms@ms,c
  2275  000CC6  EC12  F012         	call	_delay_ms	;wreg free
  2276                           
  2277                           ;virtual_2.c: 373: if(RA3==1)
  2278  000CCA  A680               	btfss	3968,3,c	;volatile
  2279  000CCC  D03A               	goto	l3504
  2280                           
  2281                           ;virtual_2.c: 374: {
  2282                           ;virtual_2.c: 375: i=100;
  2283  000CCE  0E00               	movlw	0
  2284  000CD0  0100               	movlb	0	; () banked
  2285  000CD2  6F73               	movwf	(main@i+1)& (0+255),b
  2286  000CD4  0E64               	movlw	100
  2287  000CD6  0100               	movlb	0	; () banked
  2288  000CD8  6F72               	movwf	main@i& (0+255),b
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;virtual_2.c: 376: leddec(10,10,(i-100)/10,(i-100)%10);
  2292  000CDA  0E00               	movlw	0
  2293  000CDC  6E2B               	movwf	leddec@vh1+1,c
  2294  000CDE  0E0A               	movlw	10
  2295  000CE0  6E2A               	movwf	leddec@vh1,c
  2296  000CE2  0E00               	movlw	0
  2297  000CE4  6E2D               	movwf	leddec@vh2+1,c
  2298  000CE6  0E0A               	movlw	10
  2299  000CE8  6E2C               	movwf	leddec@vh2,c
  2300  000CEA  0E9C               	movlw	156
  2301  000CEC  0100               	movlb	0	; () banked
  2302  000CEE  2572               	addwf	main@i& (0+255),w,b
  2303  000CF0  6E23               	movwf	___lwdiv@dividend,c
  2304  000CF2  0EFF               	movlw	255
  2305  000CF4  0100               	movlb	0	; () banked
  2306  000CF6  2173               	addwfc	(main@i+1)& (0+255),w,b
  2307  000CF8  6E24               	movwf	___lwdiv@dividend+1,c
  2308  000CFA  0E00               	movlw	0
  2309  000CFC  6E26               	movwf	___lwdiv@divisor+1,c
  2310  000CFE  0E0A               	movlw	10
  2311  000D00  6E25               	movwf	___lwdiv@divisor,c
  2312  000D02  ECA4  F011         	call	___lwdiv	;wreg free
  2313  000D06  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2314  000D0A  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2315  000D0E  0E9C               	movlw	156
  2316  000D10  0100               	movlb	0	; () banked
  2317  000D12  2572               	addwf	main@i& (0+255),w,b
  2318  000D14  6E12               	movwf	___lwmod@dividend,c
  2319  000D16  0EFF               	movlw	255
  2320  000D18  0100               	movlb	0	; () banked
  2321  000D1A  2173               	addwfc	(main@i+1)& (0+255),w,b
  2322  000D1C  6E13               	movwf	___lwmod@dividend+1,c
  2323  000D1E  0E00               	movlw	0
  2324  000D20  6E15               	movwf	___lwmod@divisor+1,c
  2325  000D22  0E0A               	movlw	10
  2326  000D24  6E14               	movwf	___lwmod@divisor,c
  2327  000D26  ECCD  F011         	call	___lwmod	;wreg free
  2328  000D2A  C012  F030         	movff	?___lwmod,leddec@vl2
  2329  000D2E  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2330  000D32  EC01  F012         	call	_leddec	;wreg free
  2331                           
  2332                           ;virtual_2.c: 377: motor(i);
  2333  000D36  C072  F01A         	movff	main@i,motor@x
  2334  000D3A  C073  F01B         	movff	main@i+1,motor@x+1
  2335  000D3E  EC7A  F011         	call	_motor	;wreg free
  2336  000D42                     l3504:
  2337                           
  2338                           ;virtual_2.c: 378: }
  2339                           ;virtual_2.c: 379: }
  2340                           ;virtual_2.c: 380: }
  2341                           ;virtual_2.c: 381: }
  2342                           ;virtual_2.c: 382: if(x1>700)
  2343  000D42  0EBD               	movlw	189
  2344  000D44  0100               	movlb	0	; () banked
  2345  000D46  5D6E               	subwf	main@x1& (0+255),w,b
  2346  000D48  0E02               	movlw	2
  2347  000D4A  0100               	movlb	0	; () banked
  2348  000D4C  596F               	subwfb	(main@x1+1)& (0+255),w,b
  2349  000D4E  A0D8               	btfss	status,0,c
  2350  000D50  D13E               	goto	l3528
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;virtual_2.c: 383: {
  2354                           ;virtual_2.c: 384: i+=10;if(i>=190)i=190;
  2355  000D52  0E0A               	movlw	10
  2356  000D54  0100               	movlb	0	; () banked
  2357  000D56  2772               	addwf	main@i& (0+255),f,b
  2358  000D58  0E00               	movlw	0
  2359  000D5A  0100               	movlb	0	; () banked
  2360  000D5C  2373               	addwfc	(main@i+1)& (0+255),f,b
  2361  000D5E  0EBE               	movlw	190
  2362  000D60  0100               	movlb	0	; () banked
  2363  000D62  5D72               	subwf	main@i& (0+255),w,b
  2364  000D64  0E00               	movlw	0
  2365  000D66  0100               	movlb	0	; () banked
  2366  000D68  5973               	subwfb	(main@i+1)& (0+255),w,b
  2367  000D6A  A0D8               	btfss	status,0,c
  2368  000D6C  D006               	goto	l3510
  2369                           
  2370                           ; BSR set to: 0
  2371  000D6E  0E00               	movlw	0
  2372  000D70  0100               	movlb	0	; () banked
  2373  000D72  6F73               	movwf	(main@i+1)& (0+255),b
  2374  000D74  0EBE               	movlw	190
  2375  000D76  0100               	movlb	0	; () banked
  2376  000D78  6F72               	movwf	main@i& (0+255),b
  2377  000D7A                     l3510:
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;virtual_2.c: 385: if(i>=100)leddec(10,10,(i-100)/10,(i-100)%10);
  2381  000D7A  0E64               	movlw	100
  2382  000D7C  0100               	movlb	0	; () banked
  2383  000D7E  5D72               	subwf	main@i& (0+255),w,b
  2384  000D80  0E00               	movlw	0
  2385  000D82  0100               	movlb	0	; () banked
  2386  000D84  5973               	subwfb	(main@i+1)& (0+255),w,b
  2387  000D86  A0D8               	btfss	status,0,c
  2388  000D88  D02F               	goto	l3514
  2389                           
  2390                           ; BSR set to: 0
  2391  000D8A  0E00               	movlw	0
  2392  000D8C  6E2B               	movwf	leddec@vh1+1,c
  2393  000D8E  0E0A               	movlw	10
  2394  000D90  6E2A               	movwf	leddec@vh1,c
  2395  000D92  0E00               	movlw	0
  2396  000D94  6E2D               	movwf	leddec@vh2+1,c
  2397  000D96  0E0A               	movlw	10
  2398  000D98  6E2C               	movwf	leddec@vh2,c
  2399  000D9A  0E9C               	movlw	156
  2400  000D9C  0100               	movlb	0	; () banked
  2401  000D9E  2572               	addwf	main@i& (0+255),w,b
  2402  000DA0  6E23               	movwf	___lwdiv@dividend,c
  2403  000DA2  0EFF               	movlw	255
  2404  000DA4  0100               	movlb	0	; () banked
  2405  000DA6  2173               	addwfc	(main@i+1)& (0+255),w,b
  2406  000DA8  6E24               	movwf	___lwdiv@dividend+1,c
  2407  000DAA  0E00               	movlw	0
  2408  000DAC  6E26               	movwf	___lwdiv@divisor+1,c
  2409  000DAE  0E0A               	movlw	10
  2410  000DB0  6E25               	movwf	___lwdiv@divisor,c
  2411  000DB2  ECA4  F011         	call	___lwdiv	;wreg free
  2412  000DB6  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2413  000DBA  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2414  000DBE  0E9C               	movlw	156
  2415  000DC0  0100               	movlb	0	; () banked
  2416  000DC2  2572               	addwf	main@i& (0+255),w,b
  2417  000DC4  6E12               	movwf	___lwmod@dividend,c
  2418  000DC6  0EFF               	movlw	255
  2419  000DC8  0100               	movlb	0	; () banked
  2420  000DCA  2173               	addwfc	(main@i+1)& (0+255),w,b
  2421  000DCC  6E13               	movwf	___lwmod@dividend+1,c
  2422  000DCE  0E00               	movlw	0
  2423  000DD0  6E15               	movwf	___lwmod@divisor+1,c
  2424  000DD2  0E0A               	movlw	10
  2425  000DD4  6E14               	movwf	___lwmod@divisor,c
  2426  000DD6  ECCD  F011         	call	___lwmod	;wreg free
  2427  000DDA  C012  F030         	movff	?___lwmod,leddec@vl2
  2428  000DDE  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2429  000DE2  EC01  F012         	call	_leddec	;wreg free
  2430  000DE6  D04C               	goto	l364
  2431  000DE8                     l3514:
  2432                           
  2433                           ;virtual_2.c: 386: else if(i<100)leddec(11,10,(100-i)/10,(100-i)%10);
  2434  000DE8  0E64               	movlw	100
  2435  000DEA  0100               	movlb	0	; () banked
  2436  000DEC  5D72               	subwf	main@i& (0+255),w,b
  2437  000DEE  0E00               	movlw	0
  2438  000DF0  0100               	movlb	0	; () banked
  2439  000DF2  5973               	subwfb	(main@i+1)& (0+255),w,b
  2440  000DF4  B0D8               	btfsc	status,0,c
  2441  000DF6  D044               	goto	l364
  2442                           
  2443                           ; BSR set to: 0
  2444  000DF8  0E00               	movlw	0
  2445  000DFA  6E2B               	movwf	leddec@vh1+1,c
  2446  000DFC  0E0B               	movlw	11
  2447  000DFE  6E2A               	movwf	leddec@vh1,c
  2448  000E00  0E00               	movlw	0
  2449  000E02  6E2D               	movwf	leddec@vh2+1,c
  2450  000E04  0E0A               	movlw	10
  2451  000E06  6E2C               	movwf	leddec@vh2,c
  2452  000E08  0100               	movlb	0	; () banked
  2453  000E0A  C072  F060         	movff	main@i,??_main
  2454  000E0E  0100               	movlb	0	; () banked
  2455  000E10  C073  F061         	movff	main@i+1,??_main+1
  2456  000E14  0100               	movlb	0	; () banked
  2457  000E16  1F60               	comf	??_main& (0+255),f,b
  2458  000E18  1F61               	comf	(??_main+1)& (0+255),f,b
  2459  000E1A  4B60               	infsnz	??_main& (0+255),f,b
  2460  000E1C  2B61               	incf	(??_main+1)& (0+255),f,b
  2461  000E1E  0E64               	movlw	100
  2462  000E20  0100               	movlb	0	; () banked
  2463  000E22  2560               	addwf	??_main& (0+255),w,b
  2464  000E24  6E23               	movwf	___lwdiv@dividend,c
  2465  000E26  0E00               	movlw	0
  2466  000E28  0100               	movlb	0	; () banked
  2467  000E2A  2161               	addwfc	(??_main+1)& (0+255),w,b
  2468  000E2C  6E24               	movwf	___lwdiv@dividend+1,c
  2469  000E2E  0E00               	movlw	0
  2470  000E30  6E26               	movwf	___lwdiv@divisor+1,c
  2471  000E32  0E0A               	movlw	10
  2472  000E34  6E25               	movwf	___lwdiv@divisor,c
  2473  000E36  ECA4  F011         	call	___lwdiv	;wreg free
  2474  000E3A  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2475  000E3E  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2476  000E42  0100               	movlb	0	; () banked
  2477  000E44  C072  F062         	movff	main@i,??_main+2
  2478  000E48  0100               	movlb	0	; () banked
  2479  000E4A  C073  F063         	movff	main@i+1,??_main+3
  2480  000E4E  0100               	movlb	0	; () banked
  2481  000E50  1F62               	comf	(??_main+2)& (0+255),f,b
  2482  000E52  1F63               	comf	(??_main+3)& (0+255),f,b
  2483  000E54  4B62               	infsnz	(??_main+2)& (0+255),f,b
  2484  000E56  2B63               	incf	(??_main+3)& (0+255),f,b
  2485  000E58  0E64               	movlw	100
  2486  000E5A  0100               	movlb	0	; () banked
  2487  000E5C  2562               	addwf	(??_main+2)& (0+255),w,b
  2488  000E5E  6E12               	movwf	___lwmod@dividend,c
  2489  000E60  0E00               	movlw	0
  2490  000E62  0100               	movlb	0	; () banked
  2491  000E64  2163               	addwfc	(??_main+3)& (0+255),w,b
  2492  000E66  6E13               	movwf	___lwmod@dividend+1,c
  2493  000E68  0E00               	movlw	0
  2494  000E6A  6E15               	movwf	___lwmod@divisor+1,c
  2495  000E6C  0E0A               	movlw	10
  2496  000E6E  6E14               	movwf	___lwmod@divisor,c
  2497  000E70  ECCD  F011         	call	___lwmod	;wreg free
  2498  000E74  C012  F030         	movff	?___lwmod,leddec@vl2
  2499  000E78  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2500  000E7C  EC01  F012         	call	_leddec	;wreg free
  2501  000E80                     l364:
  2502                           
  2503                           ;virtual_2.c: 387: delay_ms(200);
  2504  000E80  0E00               	movlw	0
  2505  000E82  6E13               	movwf	delay_ms@ms+1,c
  2506  000E84  0EC8               	movlw	200
  2507  000E86  6E12               	movwf	delay_ms@ms,c
  2508  000E88  EC12  F012         	call	_delay_ms	;wreg free
  2509  000E8C                     l366:
  2510  000E8C  0E01               	movlw	1
  2511  000E8E  EC25  F011         	call	_adc_get
  2512  000E92  C012  F040         	movff	?_adc_get,_get
  2513  000E96  C013  F041         	movff	?_adc_get+1,_get+1
  2514  000E9A  6A42               	clrf	_get+2,c
  2515  000E9C  6A43               	clrf	_get+3,c
  2516  000E9E  0E00               	movlw	0
  2517  000EA0  6E13               	movwf	delay_ms@ms+1,c
  2518  000EA2  0E32               	movlw	50
  2519  000EA4  6E12               	movwf	delay_ms@ms,c
  2520  000EA6  EC12  F012         	call	_delay_ms	;wreg free
  2521  000EAA  5043               	movf	_get+3,w,c
  2522  000EAC  0A80               	xorlw	128
  2523  000EAE  0F80               	addlw	128
  2524  000EB0  E108               	bnz	u3505
  2525  000EB2  0E00               	movlw	0
  2526  000EB4  5C42               	subwf	_get+2,w,c
  2527  000EB6  E105               	bnz	u3505
  2528  000EB8  0E02               	movlw	2
  2529  000EBA  5C41               	subwf	_get+1,w,c
  2530  000EBC  E102               	bnz	u3505
  2531  000EBE  0EBD               	movlw	189
  2532  000EC0  5C40               	subwf	_get,w,c
  2533  000EC2                     u3505:
  2534  000EC2  A0D8               	btfss	status,0,c
  2535  000EC4  D084               	goto	l3528
  2536                           
  2537                           ;virtual_2.c: 389: {
  2538                           ;virtual_2.c: 390: if(i>=100)leddec(10,10,(i-100)/10,(i-100)%10);
  2539  000EC6  0E64               	movlw	100
  2540  000EC8  0100               	movlb	0	; () banked
  2541  000ECA  5D72               	subwf	main@i& (0+255),w,b
  2542  000ECC  0E00               	movlw	0
  2543  000ECE  0100               	movlb	0	; () banked
  2544  000ED0  5973               	subwfb	(main@i+1)& (0+255),w,b
  2545  000ED2  A0D8               	btfss	status,0,c
  2546  000ED4  D02F               	goto	l3524
  2547                           
  2548                           ; BSR set to: 0
  2549  000ED6  0E00               	movlw	0
  2550  000ED8  6E2B               	movwf	leddec@vh1+1,c
  2551  000EDA  0E0A               	movlw	10
  2552  000EDC  6E2A               	movwf	leddec@vh1,c
  2553  000EDE  0E00               	movlw	0
  2554  000EE0  6E2D               	movwf	leddec@vh2+1,c
  2555  000EE2  0E0A               	movlw	10
  2556  000EE4  6E2C               	movwf	leddec@vh2,c
  2557  000EE6  0E9C               	movlw	156
  2558  000EE8  0100               	movlb	0	; () banked
  2559  000EEA  2572               	addwf	main@i& (0+255),w,b
  2560  000EEC  6E23               	movwf	___lwdiv@dividend,c
  2561  000EEE  0EFF               	movlw	255
  2562  000EF0  0100               	movlb	0	; () banked
  2563  000EF2  2173               	addwfc	(main@i+1)& (0+255),w,b
  2564  000EF4  6E24               	movwf	___lwdiv@dividend+1,c
  2565  000EF6  0E00               	movlw	0
  2566  000EF8  6E26               	movwf	___lwdiv@divisor+1,c
  2567  000EFA  0E0A               	movlw	10
  2568  000EFC  6E25               	movwf	___lwdiv@divisor,c
  2569  000EFE  ECA4  F011         	call	___lwdiv	;wreg free
  2570  000F02  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2571  000F06  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2572  000F0A  0E9C               	movlw	156
  2573  000F0C  0100               	movlb	0	; () banked
  2574  000F0E  2572               	addwf	main@i& (0+255),w,b
  2575  000F10  6E12               	movwf	___lwmod@dividend,c
  2576  000F12  0EFF               	movlw	255
  2577  000F14  0100               	movlb	0	; () banked
  2578  000F16  2173               	addwfc	(main@i+1)& (0+255),w,b
  2579  000F18  6E13               	movwf	___lwmod@dividend+1,c
  2580  000F1A  0E00               	movlw	0
  2581  000F1C  6E15               	movwf	___lwmod@divisor+1,c
  2582  000F1E  0E0A               	movlw	10
  2583  000F20  6E14               	movwf	___lwmod@divisor,c
  2584  000F22  ECCD  F011         	call	___lwmod	;wreg free
  2585  000F26  C012  F030         	movff	?___lwmod,leddec@vl2
  2586  000F2A  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2587  000F2E  EC01  F012         	call	_leddec	;wreg free
  2588  000F32  D7AC               	goto	l366
  2589  000F34                     l3524:
  2590                           
  2591                           ;virtual_2.c: 391: else if(i<100)leddec(11,10,(100-i)/10,(100-i)%10);
  2592  000F34  0E64               	movlw	100
  2593  000F36  0100               	movlb	0	; () banked
  2594  000F38  5D72               	subwf	main@i& (0+255),w,b
  2595  000F3A  0E00               	movlw	0
  2596  000F3C  0100               	movlb	0	; () banked
  2597  000F3E  5973               	subwfb	(main@i+1)& (0+255),w,b
  2598  000F40  B0D8               	btfsc	status,0,c
  2599  000F42  D7A4               	goto	l366
  2600                           
  2601                           ; BSR set to: 0
  2602  000F44  0E00               	movlw	0
  2603  000F46  6E2B               	movwf	leddec@vh1+1,c
  2604  000F48  0E0B               	movlw	11
  2605  000F4A  6E2A               	movwf	leddec@vh1,c
  2606  000F4C  0E00               	movlw	0
  2607  000F4E  6E2D               	movwf	leddec@vh2+1,c
  2608  000F50  0E0A               	movlw	10
  2609  000F52  6E2C               	movwf	leddec@vh2,c
  2610  000F54  0100               	movlb	0	; () banked
  2611  000F56  C072  F060         	movff	main@i,??_main
  2612  000F5A  0100               	movlb	0	; () banked
  2613  000F5C  C073  F061         	movff	main@i+1,??_main+1
  2614  000F60  0100               	movlb	0	; () banked
  2615  000F62  1F60               	comf	??_main& (0+255),f,b
  2616  000F64  1F61               	comf	(??_main+1)& (0+255),f,b
  2617  000F66  4B60               	infsnz	??_main& (0+255),f,b
  2618  000F68  2B61               	incf	(??_main+1)& (0+255),f,b
  2619  000F6A  0E64               	movlw	100
  2620  000F6C  0100               	movlb	0	; () banked
  2621  000F6E  2560               	addwf	??_main& (0+255),w,b
  2622  000F70  6E23               	movwf	___lwdiv@dividend,c
  2623  000F72  0E00               	movlw	0
  2624  000F74  0100               	movlb	0	; () banked
  2625  000F76  2161               	addwfc	(??_main+1)& (0+255),w,b
  2626  000F78  6E24               	movwf	___lwdiv@dividend+1,c
  2627  000F7A  0E00               	movlw	0
  2628  000F7C  6E26               	movwf	___lwdiv@divisor+1,c
  2629  000F7E  0E0A               	movlw	10
  2630  000F80  6E25               	movwf	___lwdiv@divisor,c
  2631  000F82  ECA4  F011         	call	___lwdiv	;wreg free
  2632  000F86  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2633  000F8A  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2634  000F8E  0100               	movlb	0	; () banked
  2635  000F90  C072  F062         	movff	main@i,??_main+2
  2636  000F94  0100               	movlb	0	; () banked
  2637  000F96  C073  F063         	movff	main@i+1,??_main+3
  2638  000F9A  0100               	movlb	0	; () banked
  2639  000F9C  1F62               	comf	(??_main+2)& (0+255),f,b
  2640  000F9E  1F63               	comf	(??_main+3)& (0+255),f,b
  2641  000FA0  4B62               	infsnz	(??_main+2)& (0+255),f,b
  2642  000FA2  2B63               	incf	(??_main+3)& (0+255),f,b
  2643  000FA4  0E64               	movlw	100
  2644  000FA6  0100               	movlb	0	; () banked
  2645  000FA8  2562               	addwf	(??_main+2)& (0+255),w,b
  2646  000FAA  6E12               	movwf	___lwmod@dividend,c
  2647  000FAC  0E00               	movlw	0
  2648  000FAE  0100               	movlb	0	; () banked
  2649  000FB0  2163               	addwfc	(??_main+3)& (0+255),w,b
  2650  000FB2  6E13               	movwf	___lwmod@dividend+1,c
  2651  000FB4  0E00               	movlw	0
  2652  000FB6  6E15               	movwf	___lwmod@divisor+1,c
  2653  000FB8  0E0A               	movlw	10
  2654  000FBA  6E14               	movwf	___lwmod@divisor,c
  2655  000FBC  ECCD  F011         	call	___lwmod	;wreg free
  2656  000FC0  C012  F030         	movff	?___lwmod,leddec@vl2
  2657  000FC4  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2658  000FC8  EC01  F012         	call	_leddec	;wreg free
  2659  000FCC  D75F               	goto	l366
  2660  000FCE                     l3528:
  2661                           
  2662                           ;virtual_2.c: 393: }
  2663                           ;virtual_2.c: 394: }
  2664                           ;virtual_2.c: 395: if(x2>700)
  2665  000FCE  0EBD               	movlw	189
  2666  000FD0  0100               	movlb	0	; () banked
  2667  000FD2  5D70               	subwf	main@x2& (0+255),w,b
  2668  000FD4  0E02               	movlw	2
  2669  000FD6  0100               	movlb	0	; () banked
  2670  000FD8  5971               	subwfb	(main@x2+1)& (0+255),w,b
  2671  000FDA  A0D8               	btfss	status,0,c
  2672  000FDC  D13E               	goto	l3552
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;virtual_2.c: 396: {
  2676                           ;virtual_2.c: 397: i-=10;if(i<10)i=10;
  2677  000FDE  0E0A               	movlw	10
  2678  000FE0  0100               	movlb	0	; () banked
  2679  000FE2  5F72               	subwf	main@i& (0+255),f,b
  2680  000FE4  0E00               	movlw	0
  2681  000FE6  0100               	movlb	0	; () banked
  2682  000FE8  5B73               	subwfb	(main@i+1)& (0+255),f,b
  2683  000FEA  0E0A               	movlw	10
  2684  000FEC  0100               	movlb	0	; () banked
  2685  000FEE  5D72               	subwf	main@i& (0+255),w,b
  2686  000FF0  0E00               	movlw	0
  2687  000FF2  0100               	movlb	0	; () banked
  2688  000FF4  5973               	subwfb	(main@i+1)& (0+255),w,b
  2689  000FF6  B0D8               	btfsc	status,0,c
  2690  000FF8  D006               	goto	l3534
  2691                           
  2692                           ; BSR set to: 0
  2693  000FFA  0E00               	movlw	0
  2694  000FFC  0100               	movlb	0	; () banked
  2695  000FFE  6F73               	movwf	(main@i+1)& (0+255),b
  2696  001000  0E0A               	movlw	10
  2697  001002  0100               	movlb	0	; () banked
  2698  001004  6F72               	movwf	main@i& (0+255),b
  2699  001006                     l3534:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;virtual_2.c: 398: if(i>=100)leddec(10,10,(i-100)/10,(i-100)%10);
  2703  001006  0E64               	movlw	100
  2704  001008  0100               	movlb	0	; () banked
  2705  00100A  5D72               	subwf	main@i& (0+255),w,b
  2706  00100C  0E00               	movlw	0
  2707  00100E  0100               	movlb	0	; () banked
  2708  001010  5973               	subwfb	(main@i+1)& (0+255),w,b
  2709  001012  A0D8               	btfss	status,0,c
  2710  001014  D02F               	goto	l3538
  2711                           
  2712                           ; BSR set to: 0
  2713  001016  0E00               	movlw	0
  2714  001018  6E2B               	movwf	leddec@vh1+1,c
  2715  00101A  0E0A               	movlw	10
  2716  00101C  6E2A               	movwf	leddec@vh1,c
  2717  00101E  0E00               	movlw	0
  2718  001020  6E2D               	movwf	leddec@vh2+1,c
  2719  001022  0E0A               	movlw	10
  2720  001024  6E2C               	movwf	leddec@vh2,c
  2721  001026  0E9C               	movlw	156
  2722  001028  0100               	movlb	0	; () banked
  2723  00102A  2572               	addwf	main@i& (0+255),w,b
  2724  00102C  6E23               	movwf	___lwdiv@dividend,c
  2725  00102E  0EFF               	movlw	255
  2726  001030  0100               	movlb	0	; () banked
  2727  001032  2173               	addwfc	(main@i+1)& (0+255),w,b
  2728  001034  6E24               	movwf	___lwdiv@dividend+1,c
  2729  001036  0E00               	movlw	0
  2730  001038  6E26               	movwf	___lwdiv@divisor+1,c
  2731  00103A  0E0A               	movlw	10
  2732  00103C  6E25               	movwf	___lwdiv@divisor,c
  2733  00103E  ECA4  F011         	call	___lwdiv	;wreg free
  2734  001042  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2735  001046  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2736  00104A  0E9C               	movlw	156
  2737  00104C  0100               	movlb	0	; () banked
  2738  00104E  2572               	addwf	main@i& (0+255),w,b
  2739  001050  6E12               	movwf	___lwmod@dividend,c
  2740  001052  0EFF               	movlw	255
  2741  001054  0100               	movlb	0	; () banked
  2742  001056  2173               	addwfc	(main@i+1)& (0+255),w,b
  2743  001058  6E13               	movwf	___lwmod@dividend+1,c
  2744  00105A  0E00               	movlw	0
  2745  00105C  6E15               	movwf	___lwmod@divisor+1,c
  2746  00105E  0E0A               	movlw	10
  2747  001060  6E14               	movwf	___lwmod@divisor,c
  2748  001062  ECCD  F011         	call	___lwmod	;wreg free
  2749  001066  C012  F030         	movff	?___lwmod,leddec@vl2
  2750  00106A  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2751  00106E  EC01  F012         	call	_leddec	;wreg free
  2752  001072  D04C               	goto	l374
  2753  001074                     l3538:
  2754                           
  2755                           ;virtual_2.c: 399: else if(i<100)leddec(11,10,(100-i)/10,(100-i)%10);
  2756  001074  0E64               	movlw	100
  2757  001076  0100               	movlb	0	; () banked
  2758  001078  5D72               	subwf	main@i& (0+255),w,b
  2759  00107A  0E00               	movlw	0
  2760  00107C  0100               	movlb	0	; () banked
  2761  00107E  5973               	subwfb	(main@i+1)& (0+255),w,b
  2762  001080  B0D8               	btfsc	status,0,c
  2763  001082  D044               	goto	l374
  2764                           
  2765                           ; BSR set to: 0
  2766  001084  0E00               	movlw	0
  2767  001086  6E2B               	movwf	leddec@vh1+1,c
  2768  001088  0E0B               	movlw	11
  2769  00108A  6E2A               	movwf	leddec@vh1,c
  2770  00108C  0E00               	movlw	0
  2771  00108E  6E2D               	movwf	leddec@vh2+1,c
  2772  001090  0E0A               	movlw	10
  2773  001092  6E2C               	movwf	leddec@vh2,c
  2774  001094  0100               	movlb	0	; () banked
  2775  001096  C072  F060         	movff	main@i,??_main
  2776  00109A  0100               	movlb	0	; () banked
  2777  00109C  C073  F061         	movff	main@i+1,??_main+1
  2778  0010A0  0100               	movlb	0	; () banked
  2779  0010A2  1F60               	comf	??_main& (0+255),f,b
  2780  0010A4  1F61               	comf	(??_main+1)& (0+255),f,b
  2781  0010A6  4B60               	infsnz	??_main& (0+255),f,b
  2782  0010A8  2B61               	incf	(??_main+1)& (0+255),f,b
  2783  0010AA  0E64               	movlw	100
  2784  0010AC  0100               	movlb	0	; () banked
  2785  0010AE  2560               	addwf	??_main& (0+255),w,b
  2786  0010B0  6E23               	movwf	___lwdiv@dividend,c
  2787  0010B2  0E00               	movlw	0
  2788  0010B4  0100               	movlb	0	; () banked
  2789  0010B6  2161               	addwfc	(??_main+1)& (0+255),w,b
  2790  0010B8  6E24               	movwf	___lwdiv@dividend+1,c
  2791  0010BA  0E00               	movlw	0
  2792  0010BC  6E26               	movwf	___lwdiv@divisor+1,c
  2793  0010BE  0E0A               	movlw	10
  2794  0010C0  6E25               	movwf	___lwdiv@divisor,c
  2795  0010C2  ECA4  F011         	call	___lwdiv	;wreg free
  2796  0010C6  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2797  0010CA  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2798  0010CE  0100               	movlb	0	; () banked
  2799  0010D0  C072  F062         	movff	main@i,??_main+2
  2800  0010D4  0100               	movlb	0	; () banked
  2801  0010D6  C073  F063         	movff	main@i+1,??_main+3
  2802  0010DA  0100               	movlb	0	; () banked
  2803  0010DC  1F62               	comf	(??_main+2)& (0+255),f,b
  2804  0010DE  1F63               	comf	(??_main+3)& (0+255),f,b
  2805  0010E0  4B62               	infsnz	(??_main+2)& (0+255),f,b
  2806  0010E2  2B63               	incf	(??_main+3)& (0+255),f,b
  2807  0010E4  0E64               	movlw	100
  2808  0010E6  0100               	movlb	0	; () banked
  2809  0010E8  2562               	addwf	(??_main+2)& (0+255),w,b
  2810  0010EA  6E12               	movwf	___lwmod@dividend,c
  2811  0010EC  0E00               	movlw	0
  2812  0010EE  0100               	movlb	0	; () banked
  2813  0010F0  2163               	addwfc	(??_main+3)& (0+255),w,b
  2814  0010F2  6E13               	movwf	___lwmod@dividend+1,c
  2815  0010F4  0E00               	movlw	0
  2816  0010F6  6E15               	movwf	___lwmod@divisor+1,c
  2817  0010F8  0E0A               	movlw	10
  2818  0010FA  6E14               	movwf	___lwmod@divisor,c
  2819  0010FC  ECCD  F011         	call	___lwmod	;wreg free
  2820  001100  C012  F030         	movff	?___lwmod,leddec@vl2
  2821  001104  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2822  001108  EC01  F012         	call	_leddec	;wreg free
  2823  00110C                     l374:
  2824                           
  2825                           ;virtual_2.c: 400: delay_ms(200);
  2826  00110C  0E00               	movlw	0
  2827  00110E  6E13               	movwf	delay_ms@ms+1,c
  2828  001110  0EC8               	movlw	200
  2829  001112  6E12               	movwf	delay_ms@ms,c
  2830  001114  EC12  F012         	call	_delay_ms	;wreg free
  2831  001118                     l376:
  2832  001118  0E02               	movlw	2
  2833  00111A  EC25  F011         	call	_adc_get
  2834  00111E  C012  F040         	movff	?_adc_get,_get
  2835  001122  C013  F041         	movff	?_adc_get+1,_get+1
  2836  001126  6A42               	clrf	_get+2,c
  2837  001128  6A43               	clrf	_get+3,c
  2838  00112A  0E00               	movlw	0
  2839  00112C  6E13               	movwf	delay_ms@ms+1,c
  2840  00112E  0E32               	movlw	50
  2841  001130  6E12               	movwf	delay_ms@ms,c
  2842  001132  EC12  F012         	call	_delay_ms	;wreg free
  2843  001136  5043               	movf	_get+3,w,c
  2844  001138  0A80               	xorlw	128
  2845  00113A  0F80               	addlw	128
  2846  00113C  E108               	bnz	u3575
  2847  00113E  0E00               	movlw	0
  2848  001140  5C42               	subwf	_get+2,w,c
  2849  001142  E105               	bnz	u3575
  2850  001144  0E02               	movlw	2
  2851  001146  5C41               	subwf	_get+1,w,c
  2852  001148  E102               	bnz	u3575
  2853  00114A  0EBD               	movlw	189
  2854  00114C  5C40               	subwf	_get,w,c
  2855  00114E                     u3575:
  2856  00114E  A0D8               	btfss	status,0,c
  2857  001150  D084               	goto	l3552
  2858                           
  2859                           ;virtual_2.c: 402: {
  2860                           ;virtual_2.c: 403: if(i>=100)leddec(10,10,(i-100)/10,(i-100)%10);
  2861  001152  0E64               	movlw	100
  2862  001154  0100               	movlb	0	; () banked
  2863  001156  5D72               	subwf	main@i& (0+255),w,b
  2864  001158  0E00               	movlw	0
  2865  00115A  0100               	movlb	0	; () banked
  2866  00115C  5973               	subwfb	(main@i+1)& (0+255),w,b
  2867  00115E  A0D8               	btfss	status,0,c
  2868  001160  D02F               	goto	l3548
  2869                           
  2870                           ; BSR set to: 0
  2871  001162  0E00               	movlw	0
  2872  001164  6E2B               	movwf	leddec@vh1+1,c
  2873  001166  0E0A               	movlw	10
  2874  001168  6E2A               	movwf	leddec@vh1,c
  2875  00116A  0E00               	movlw	0
  2876  00116C  6E2D               	movwf	leddec@vh2+1,c
  2877  00116E  0E0A               	movlw	10
  2878  001170  6E2C               	movwf	leddec@vh2,c
  2879  001172  0E9C               	movlw	156
  2880  001174  0100               	movlb	0	; () banked
  2881  001176  2572               	addwf	main@i& (0+255),w,b
  2882  001178  6E23               	movwf	___lwdiv@dividend,c
  2883  00117A  0EFF               	movlw	255
  2884  00117C  0100               	movlb	0	; () banked
  2885  00117E  2173               	addwfc	(main@i+1)& (0+255),w,b
  2886  001180  6E24               	movwf	___lwdiv@dividend+1,c
  2887  001182  0E00               	movlw	0
  2888  001184  6E26               	movwf	___lwdiv@divisor+1,c
  2889  001186  0E0A               	movlw	10
  2890  001188  6E25               	movwf	___lwdiv@divisor,c
  2891  00118A  ECA4  F011         	call	___lwdiv	;wreg free
  2892  00118E  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2893  001192  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2894  001196  0E9C               	movlw	156
  2895  001198  0100               	movlb	0	; () banked
  2896  00119A  2572               	addwf	main@i& (0+255),w,b
  2897  00119C  6E12               	movwf	___lwmod@dividend,c
  2898  00119E  0EFF               	movlw	255
  2899  0011A0  0100               	movlb	0	; () banked
  2900  0011A2  2173               	addwfc	(main@i+1)& (0+255),w,b
  2901  0011A4  6E13               	movwf	___lwmod@dividend+1,c
  2902  0011A6  0E00               	movlw	0
  2903  0011A8  6E15               	movwf	___lwmod@divisor+1,c
  2904  0011AA  0E0A               	movlw	10
  2905  0011AC  6E14               	movwf	___lwmod@divisor,c
  2906  0011AE  ECCD  F011         	call	___lwmod	;wreg free
  2907  0011B2  C012  F030         	movff	?___lwmod,leddec@vl2
  2908  0011B6  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2909  0011BA  EC01  F012         	call	_leddec	;wreg free
  2910  0011BE  D7AC               	goto	l376
  2911  0011C0                     l3548:
  2912                           
  2913                           ;virtual_2.c: 404: else if(i<100)leddec(11,10,(100-i)/10,(100-i)%10);
  2914  0011C0  0E64               	movlw	100
  2915  0011C2  0100               	movlb	0	; () banked
  2916  0011C4  5D72               	subwf	main@i& (0+255),w,b
  2917  0011C6  0E00               	movlw	0
  2918  0011C8  0100               	movlb	0	; () banked
  2919  0011CA  5973               	subwfb	(main@i+1)& (0+255),w,b
  2920  0011CC  B0D8               	btfsc	status,0,c
  2921  0011CE  D7A4               	goto	l376
  2922                           
  2923                           ; BSR set to: 0
  2924  0011D0  0E00               	movlw	0
  2925  0011D2  6E2B               	movwf	leddec@vh1+1,c
  2926  0011D4  0E0B               	movlw	11
  2927  0011D6  6E2A               	movwf	leddec@vh1,c
  2928  0011D8  0E00               	movlw	0
  2929  0011DA  6E2D               	movwf	leddec@vh2+1,c
  2930  0011DC  0E0A               	movlw	10
  2931  0011DE  6E2C               	movwf	leddec@vh2,c
  2932  0011E0  0100               	movlb	0	; () banked
  2933  0011E2  C072  F060         	movff	main@i,??_main
  2934  0011E6  0100               	movlb	0	; () banked
  2935  0011E8  C073  F061         	movff	main@i+1,??_main+1
  2936  0011EC  0100               	movlb	0	; () banked
  2937  0011EE  1F60               	comf	??_main& (0+255),f,b
  2938  0011F0  1F61               	comf	(??_main+1)& (0+255),f,b
  2939  0011F2  4B60               	infsnz	??_main& (0+255),f,b
  2940  0011F4  2B61               	incf	(??_main+1)& (0+255),f,b
  2941  0011F6  0E64               	movlw	100
  2942  0011F8  0100               	movlb	0	; () banked
  2943  0011FA  2560               	addwf	??_main& (0+255),w,b
  2944  0011FC  6E23               	movwf	___lwdiv@dividend,c
  2945  0011FE  0E00               	movlw	0
  2946  001200  0100               	movlb	0	; () banked
  2947  001202  2161               	addwfc	(??_main+1)& (0+255),w,b
  2948  001204  6E24               	movwf	___lwdiv@dividend+1,c
  2949  001206  0E00               	movlw	0
  2950  001208  6E26               	movwf	___lwdiv@divisor+1,c
  2951  00120A  0E0A               	movlw	10
  2952  00120C  6E25               	movwf	___lwdiv@divisor,c
  2953  00120E  ECA4  F011         	call	___lwdiv	;wreg free
  2954  001212  C023  F02E         	movff	?___lwdiv,leddec@vl1
  2955  001216  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  2956  00121A  0100               	movlb	0	; () banked
  2957  00121C  C072  F062         	movff	main@i,??_main+2
  2958  001220  0100               	movlb	0	; () banked
  2959  001222  C073  F063         	movff	main@i+1,??_main+3
  2960  001226  0100               	movlb	0	; () banked
  2961  001228  1F62               	comf	(??_main+2)& (0+255),f,b
  2962  00122A  1F63               	comf	(??_main+3)& (0+255),f,b
  2963  00122C  4B62               	infsnz	(??_main+2)& (0+255),f,b
  2964  00122E  2B63               	incf	(??_main+3)& (0+255),f,b
  2965  001230  0E64               	movlw	100
  2966  001232  0100               	movlb	0	; () banked
  2967  001234  2562               	addwf	(??_main+2)& (0+255),w,b
  2968  001236  6E12               	movwf	___lwmod@dividend,c
  2969  001238  0E00               	movlw	0
  2970  00123A  0100               	movlb	0	; () banked
  2971  00123C  2163               	addwfc	(??_main+3)& (0+255),w,b
  2972  00123E  6E13               	movwf	___lwmod@dividend+1,c
  2973  001240  0E00               	movlw	0
  2974  001242  6E15               	movwf	___lwmod@divisor+1,c
  2975  001244  0E0A               	movlw	10
  2976  001246  6E14               	movwf	___lwmod@divisor,c
  2977  001248  ECCD  F011         	call	___lwmod	;wreg free
  2978  00124C  C012  F030         	movff	?___lwmod,leddec@vl2
  2979  001250  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  2980  001254  EC01  F012         	call	_leddec	;wreg free
  2981  001258  D75F               	goto	l376
  2982  00125A                     l3552:
  2983                           
  2984                           ;virtual_2.c: 406: }
  2985                           ;virtual_2.c: 407: }
  2986                           ;virtual_2.c: 408: if(i>=100)leddec(10,10,(i-100)/10,(i-100)%10);
  2987  00125A  0E64               	movlw	100
  2988  00125C  0100               	movlb	0	; () banked
  2989  00125E  5D72               	subwf	main@i& (0+255),w,b
  2990  001260  0E00               	movlw	0
  2991  001262  0100               	movlb	0	; () banked
  2992  001264  5973               	subwfb	(main@i+1)& (0+255),w,b
  2993  001266  A0D8               	btfss	status,0,c
  2994  001268  D02F               	goto	l3556
  2995                           
  2996                           ; BSR set to: 0
  2997  00126A  0E00               	movlw	0
  2998  00126C  6E2B               	movwf	leddec@vh1+1,c
  2999  00126E  0E0A               	movlw	10
  3000  001270  6E2A               	movwf	leddec@vh1,c
  3001  001272  0E00               	movlw	0
  3002  001274  6E2D               	movwf	leddec@vh2+1,c
  3003  001276  0E0A               	movlw	10
  3004  001278  6E2C               	movwf	leddec@vh2,c
  3005  00127A  0E9C               	movlw	156
  3006  00127C  0100               	movlb	0	; () banked
  3007  00127E  2572               	addwf	main@i& (0+255),w,b
  3008  001280  6E23               	movwf	___lwdiv@dividend,c
  3009  001282  0EFF               	movlw	255
  3010  001284  0100               	movlb	0	; () banked
  3011  001286  2173               	addwfc	(main@i+1)& (0+255),w,b
  3012  001288  6E24               	movwf	___lwdiv@dividend+1,c
  3013  00128A  0E00               	movlw	0
  3014  00128C  6E26               	movwf	___lwdiv@divisor+1,c
  3015  00128E  0E0A               	movlw	10
  3016  001290  6E25               	movwf	___lwdiv@divisor,c
  3017  001292  ECA4  F011         	call	___lwdiv	;wreg free
  3018  001296  C023  F02E         	movff	?___lwdiv,leddec@vl1
  3019  00129A  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  3020  00129E  0E9C               	movlw	156
  3021  0012A0  0100               	movlb	0	; () banked
  3022  0012A2  2572               	addwf	main@i& (0+255),w,b
  3023  0012A4  6E12               	movwf	___lwmod@dividend,c
  3024  0012A6  0EFF               	movlw	255
  3025  0012A8  0100               	movlb	0	; () banked
  3026  0012AA  2173               	addwfc	(main@i+1)& (0+255),w,b
  3027  0012AC  6E13               	movwf	___lwmod@dividend+1,c
  3028  0012AE  0E00               	movlw	0
  3029  0012B0  6E15               	movwf	___lwmod@divisor+1,c
  3030  0012B2  0E0A               	movlw	10
  3031  0012B4  6E14               	movwf	___lwmod@divisor,c
  3032  0012B6  ECCD  F011         	call	___lwmod	;wreg free
  3033  0012BA  C012  F030         	movff	?___lwmod,leddec@vl2
  3034  0012BE  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  3035  0012C2  EC01  F012         	call	_leddec	;wreg free
  3036  0012C6  D04C               	goto	l3560
  3037  0012C8                     l3556:
  3038                           
  3039                           ;virtual_2.c: 409: else if(i<100)leddec(11,10,(100-i)/10,(100-i)%10);
  3040  0012C8  0E64               	movlw	100
  3041  0012CA  0100               	movlb	0	; () banked
  3042  0012CC  5D72               	subwf	main@i& (0+255),w,b
  3043  0012CE  0E00               	movlw	0
  3044  0012D0  0100               	movlb	0	; () banked
  3045  0012D2  5973               	subwfb	(main@i+1)& (0+255),w,b
  3046  0012D4  B0D8               	btfsc	status,0,c
  3047  0012D6  D044               	goto	l3560
  3048                           
  3049                           ; BSR set to: 0
  3050  0012D8  0E00               	movlw	0
  3051  0012DA  6E2B               	movwf	leddec@vh1+1,c
  3052  0012DC  0E0B               	movlw	11
  3053  0012DE  6E2A               	movwf	leddec@vh1,c
  3054  0012E0  0E00               	movlw	0
  3055  0012E2  6E2D               	movwf	leddec@vh2+1,c
  3056  0012E4  0E0A               	movlw	10
  3057  0012E6  6E2C               	movwf	leddec@vh2,c
  3058  0012E8  0100               	movlb	0	; () banked
  3059  0012EA  C072  F060         	movff	main@i,??_main
  3060  0012EE  0100               	movlb	0	; () banked
  3061  0012F0  C073  F061         	movff	main@i+1,??_main+1
  3062  0012F4  0100               	movlb	0	; () banked
  3063  0012F6  1F60               	comf	??_main& (0+255),f,b
  3064  0012F8  1F61               	comf	(??_main+1)& (0+255),f,b
  3065  0012FA  4B60               	infsnz	??_main& (0+255),f,b
  3066  0012FC  2B61               	incf	(??_main+1)& (0+255),f,b
  3067  0012FE  0E64               	movlw	100
  3068  001300  0100               	movlb	0	; () banked
  3069  001302  2560               	addwf	??_main& (0+255),w,b
  3070  001304  6E23               	movwf	___lwdiv@dividend,c
  3071  001306  0E00               	movlw	0
  3072  001308  0100               	movlb	0	; () banked
  3073  00130A  2161               	addwfc	(??_main+1)& (0+255),w,b
  3074  00130C  6E24               	movwf	___lwdiv@dividend+1,c
  3075  00130E  0E00               	movlw	0
  3076  001310  6E26               	movwf	___lwdiv@divisor+1,c
  3077  001312  0E0A               	movlw	10
  3078  001314  6E25               	movwf	___lwdiv@divisor,c
  3079  001316  ECA4  F011         	call	___lwdiv	;wreg free
  3080  00131A  C023  F02E         	movff	?___lwdiv,leddec@vl1
  3081  00131E  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  3082  001322  0100               	movlb	0	; () banked
  3083  001324  C072  F062         	movff	main@i,??_main+2
  3084  001328  0100               	movlb	0	; () banked
  3085  00132A  C073  F063         	movff	main@i+1,??_main+3
  3086  00132E  0100               	movlb	0	; () banked
  3087  001330  1F62               	comf	(??_main+2)& (0+255),f,b
  3088  001332  1F63               	comf	(??_main+3)& (0+255),f,b
  3089  001334  4B62               	infsnz	(??_main+2)& (0+255),f,b
  3090  001336  2B63               	incf	(??_main+3)& (0+255),f,b
  3091  001338  0E64               	movlw	100
  3092  00133A  0100               	movlb	0	; () banked
  3093  00133C  2562               	addwf	(??_main+2)& (0+255),w,b
  3094  00133E  6E12               	movwf	___lwmod@dividend,c
  3095  001340  0E00               	movlw	0
  3096  001342  0100               	movlb	0	; () banked
  3097  001344  2163               	addwfc	(??_main+3)& (0+255),w,b
  3098  001346  6E13               	movwf	___lwmod@dividend+1,c
  3099  001348  0E00               	movlw	0
  3100  00134A  6E15               	movwf	___lwmod@divisor+1,c
  3101  00134C  0E0A               	movlw	10
  3102  00134E  6E14               	movwf	___lwmod@divisor,c
  3103  001350  ECCD  F011         	call	___lwmod	;wreg free
  3104  001354  C012  F030         	movff	?___lwmod,leddec@vl2
  3105  001358  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  3106  00135C  EC01  F012         	call	_leddec	;wreg free
  3107  001360                     l3560:
  3108                           
  3109                           ;virtual_2.c: 410: motor(i);
  3110  001360  C072  F01A         	movff	main@i,motor@x
  3111  001364  C073  F01B         	movff	main@i+1,motor@x+1
  3112  001368  EC7A  F011         	call	_motor	;wreg free
  3113                           
  3114                           ;virtual_2.c: 411: break;
  3115  00136C  D35D               	goto	l3640
  3116  00136E                     l3562:
  3117                           
  3118                           ;virtual_2.c: 414: led_dot(0);get=adc_get(0);led_dec(get/100,get%100);motor(90);break;
  3119  00136E  0E00               	movlw	0
  3120  001370  EC39  F012         	call	_led_dot
  3121  001374  0E00               	movlw	0
  3122  001376  EC25  F011         	call	_adc_get
  3123  00137A  C012  F040         	movff	?_adc_get,_get
  3124  00137E  C013  F041         	movff	?_adc_get+1,_get+1
  3125  001382  6A42               	clrf	_get+2,c
  3126  001384  6A43               	clrf	_get+3,c
  3127  001386  C040  F012         	movff	_get,___aldiv@dividend
  3128  00138A  C041  F013         	movff	_get+1,___aldiv@dividend+1
  3129  00138E  C042  F014         	movff	_get+2,___aldiv@dividend+2
  3130  001392  C043  F015         	movff	_get+3,___aldiv@dividend+3
  3131  001396  0E64               	movlw	100
  3132  001398  6E16               	movwf	___aldiv@divisor,c
  3133  00139A  0E00               	movlw	0
  3134  00139C  6E17               	movwf	___aldiv@divisor+1,c
  3135  00139E  0E00               	movlw	0
  3136  0013A0  6E18               	movwf	___aldiv@divisor+2,c
  3137  0013A2  0E00               	movlw	0
  3138  0013A4  6E19               	movwf	___aldiv@divisor+3,c
  3139  0013A6  EC50  F00E         	call	___aldiv	;wreg free
  3140  0013AA  C012  F060         	movff	?___aldiv,??_main
  3141  0013AE  C013  F061         	movff	?___aldiv+1,??_main+1
  3142  0013B2  C014  F062         	movff	?___aldiv+2,??_main+2
  3143  0013B6  C015  F063         	movff	?___aldiv+3,??_main+3
  3144  0013BA  C060  F02A         	movff	??_main,led_dec@vh
  3145  0013BE  C061  F02B         	movff	??_main+1,led_dec@vh+1
  3146  0013C2  C040  F012         	movff	_get,___almod@dividend
  3147  0013C6  C041  F013         	movff	_get+1,___almod@dividend+1
  3148  0013CA  C042  F014         	movff	_get+2,___almod@dividend+2
  3149  0013CE  C043  F015         	movff	_get+3,___almod@dividend+3
  3150  0013D2  0E64               	movlw	100
  3151  0013D4  6E16               	movwf	___almod@divisor,c
  3152  0013D6  0E00               	movlw	0
  3153  0013D8  6E17               	movwf	___almod@divisor+1,c
  3154  0013DA  0E00               	movlw	0
  3155  0013DC  6E18               	movwf	___almod@divisor+2,c
  3156  0013DE  0E00               	movlw	0
  3157  0013E0  6E19               	movwf	___almod@divisor+3,c
  3158  0013E2  EC42  F00F         	call	___almod	;wreg free
  3159  0013E6  C012  F064         	movff	?___almod,??_main+4
  3160  0013EA  C013  F065         	movff	?___almod+1,??_main+5
  3161  0013EE  C014  F066         	movff	?___almod+2,??_main+6
  3162  0013F2  C015  F067         	movff	?___almod+3,??_main+7
  3163  0013F6  C064  F02C         	movff	??_main+4,led_dec@vl
  3164  0013FA  C065  F02D         	movff	??_main+5,led_dec@vl+1
  3165  0013FE  EC83  F010         	call	_led_dec	;wreg free
  3166  001402  0E00               	movlw	0
  3167  001404  6E1B               	movwf	motor@x+1,c
  3168  001406  0E5A               	movlw	90
  3169  001408  6E1A               	movwf	motor@x,c
  3170  00140A  EC7A  F011         	call	_motor	;wreg free
  3171  00140E  D30C               	goto	l3640
  3172  001410                     l385:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;virtual_2.c: 417: if(RA3==1){y++;if(y<1)y=0;}
  3176  001410  A680               	btfss	3968,3,c	;volatile
  3177  001412  D00E               	goto	l3576
  3178                           
  3179                           ; BSR set to: 0
  3180  001414  0100               	movlb	0	; () banked
  3181  001416  4B68               	infsnz	main@y& (0+255),f,b
  3182  001418  2B69               	incf	(main@y+1)& (0+255),f,b
  3183                           
  3184                           ; BSR set to: 0
  3185  00141A  0100               	movlb	0	; () banked
  3186  00141C  5169               	movf	(main@y+1)& (0+255),w,b
  3187  00141E  1168               	iorwf	main@y& (0+255),w,b
  3188  001420  A4D8               	btfss	status,2,c
  3189  001422  D006               	goto	l3576
  3190                           
  3191                           ; BSR set to: 0
  3192  001424  0E00               	movlw	0
  3193  001426  0100               	movlb	0	; () banked
  3194  001428  6F69               	movwf	(main@y+1)& (0+255),b
  3195  00142A  0E00               	movlw	0
  3196  00142C  0100               	movlb	0	; () banked
  3197  00142E  6F68               	movwf	main@y& (0+255),b
  3198  001430                     l3576:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;virtual_2.c: 418: if(y==1)get=adc_get(0);
  3202  001430  0100               	movlb	0	; () banked
  3203  001432  0568               	decf	main@y& (0+255),w,b
  3204  001434  1169               	iorwf	(main@y+1)& (0+255),w,b
  3205  001436  A4D8               	btfss	status,2,c
  3206  001438  D009               	goto	l3580
  3207                           
  3208                           ; BSR set to: 0
  3209  00143A  0E00               	movlw	0
  3210  00143C  EC25  F011         	call	_adc_get
  3211  001440  C012  F040         	movff	?_adc_get,_get
  3212  001444  C013  F041         	movff	?_adc_get+1,_get+1
  3213  001448  6A42               	clrf	_get+2,c
  3214  00144A  6A43               	clrf	_get+3,c
  3215  00144C                     l3580:
  3216                           
  3217                           ;virtual_2.c: 419: if(get<235)r16=0;
  3218  00144C  5043               	movf	_get+3,w,c
  3219  00144E  0A80               	xorlw	128
  3220  001450  0F80               	addlw	128
  3221  001452  E108               	bnz	u3655
  3222  001454  0E00               	movlw	0
  3223  001456  5C42               	subwf	_get+2,w,c
  3224  001458  E105               	bnz	u3655
  3225  00145A  0E00               	movlw	0
  3226  00145C  5C41               	subwf	_get+1,w,c
  3227  00145E  E102               	bnz	u3655
  3228  001460  0EEB               	movlw	235
  3229  001462  5C40               	subwf	_get,w,c
  3230  001464                     u3655:
  3231  001464  B0D8               	btfsc	status,0,c
  3232  001466  D00C               	goto	l3584
  3233  001468  0E00               	movlw	0
  3234  00146A  0100               	movlb	0	; () banked
  3235  00146C  6F7C               	movwf	_r16& (0+255),b
  3236  00146E  0E00               	movlw	0
  3237  001470  0100               	movlb	0	; () banked
  3238  001472  6F7D               	movwf	(_r16+1)& (0+255),b
  3239  001474  0E00               	movlw	0
  3240  001476  0100               	movlb	0	; () banked
  3241  001478  6F7E               	movwf	(_r16+2)& (0+255),b
  3242  00147A  0E00               	movlw	0
  3243  00147C  0100               	movlb	0	; () banked
  3244  00147E  6F7F               	movwf	(_r16+3)& (0+255),b
  3245  001480                     l3584:
  3246                           
  3247                           ;virtual_2.c: 420: if((get>235)&&(get<340))r16=100;
  3248  001480  5043               	movf	_get+3,w,c
  3249  001482  0A80               	xorlw	128
  3250  001484  0F80               	addlw	128
  3251  001486  E108               	bnz	u3665
  3252  001488  0E00               	movlw	0
  3253  00148A  5C42               	subwf	_get+2,w,c
  3254  00148C  E105               	bnz	u3665
  3255  00148E  0E00               	movlw	0
  3256  001490  5C41               	subwf	_get+1,w,c
  3257  001492  E102               	bnz	u3665
  3258  001494  0EEC               	movlw	236
  3259  001496  5C40               	subwf	_get,w,c
  3260  001498                     u3665:
  3261  001498  A0D8               	btfss	status,0,c
  3262  00149A  D01A               	goto	l3590
  3263  00149C  5043               	movf	_get+3,w,c
  3264  00149E  0A80               	xorlw	128
  3265  0014A0  0F80               	addlw	128
  3266  0014A2  E108               	bnz	u3675
  3267  0014A4  0E00               	movlw	0
  3268  0014A6  5C42               	subwf	_get+2,w,c
  3269  0014A8  E105               	bnz	u3675
  3270  0014AA  0E01               	movlw	1
  3271  0014AC  5C41               	subwf	_get+1,w,c
  3272  0014AE  E102               	bnz	u3675
  3273  0014B0  0E54               	movlw	84
  3274  0014B2  5C40               	subwf	_get,w,c
  3275  0014B4                     u3675:
  3276  0014B4  B0D8               	btfsc	status,0,c
  3277  0014B6  D00C               	goto	l3590
  3278  0014B8  0E64               	movlw	100
  3279  0014BA  0100               	movlb	0	; () banked
  3280  0014BC  6F7C               	movwf	_r16& (0+255),b
  3281  0014BE  0E00               	movlw	0
  3282  0014C0  0100               	movlb	0	; () banked
  3283  0014C2  6F7D               	movwf	(_r16+1)& (0+255),b
  3284  0014C4  0E00               	movlw	0
  3285  0014C6  0100               	movlb	0	; () banked
  3286  0014C8  6F7E               	movwf	(_r16+2)& (0+255),b
  3287  0014CA  0E00               	movlw	0
  3288  0014CC  0100               	movlb	0	; () banked
  3289  0014CE  6F7F               	movwf	(_r16+3)& (0+255),b
  3290  0014D0                     l3590:
  3291                           
  3292                           ;virtual_2.c: 421: if((get>340)&&(get<455))r16=200;
  3293  0014D0  5043               	movf	_get+3,w,c
  3294  0014D2  0A80               	xorlw	128
  3295  0014D4  0F80               	addlw	128
  3296  0014D6  E108               	bnz	u3685
  3297  0014D8  0E00               	movlw	0
  3298  0014DA  5C42               	subwf	_get+2,w,c
  3299  0014DC  E105               	bnz	u3685
  3300  0014DE  0E01               	movlw	1
  3301  0014E0  5C41               	subwf	_get+1,w,c
  3302  0014E2  E102               	bnz	u3685
  3303  0014E4  0E55               	movlw	85
  3304  0014E6  5C40               	subwf	_get,w,c
  3305  0014E8                     u3685:
  3306  0014E8  A0D8               	btfss	status,0,c
  3307  0014EA  D01A               	goto	l3596
  3308  0014EC  5043               	movf	_get+3,w,c
  3309  0014EE  0A80               	xorlw	128
  3310  0014F0  0F80               	addlw	128
  3311  0014F2  E108               	bnz	u3695
  3312  0014F4  0E00               	movlw	0
  3313  0014F6  5C42               	subwf	_get+2,w,c
  3314  0014F8  E105               	bnz	u3695
  3315  0014FA  0E01               	movlw	1
  3316  0014FC  5C41               	subwf	_get+1,w,c
  3317  0014FE  E102               	bnz	u3695
  3318  001500  0EC7               	movlw	199
  3319  001502  5C40               	subwf	_get,w,c
  3320  001504                     u3695:
  3321  001504  B0D8               	btfsc	status,0,c
  3322  001506  D00C               	goto	l3596
  3323  001508  0EC8               	movlw	200
  3324  00150A  0100               	movlb	0	; () banked
  3325  00150C  6F7C               	movwf	_r16& (0+255),b
  3326  00150E  0E00               	movlw	0
  3327  001510  0100               	movlb	0	; () banked
  3328  001512  6F7D               	movwf	(_r16+1)& (0+255),b
  3329  001514  0E00               	movlw	0
  3330  001516  0100               	movlb	0	; () banked
  3331  001518  6F7E               	movwf	(_r16+2)& (0+255),b
  3332  00151A  0E00               	movlw	0
  3333  00151C  0100               	movlb	0	; () banked
  3334  00151E  6F7F               	movwf	(_r16+3)& (0+255),b
  3335  001520                     l3596:
  3336                           
  3337                           ;virtual_2.c: 422: if((get>455)&&(get<570))r16=300;
  3338  001520  5043               	movf	_get+3,w,c
  3339  001522  0A80               	xorlw	128
  3340  001524  0F80               	addlw	128
  3341  001526  E108               	bnz	u3705
  3342  001528  0E00               	movlw	0
  3343  00152A  5C42               	subwf	_get+2,w,c
  3344  00152C  E105               	bnz	u3705
  3345  00152E  0E01               	movlw	1
  3346  001530  5C41               	subwf	_get+1,w,c
  3347  001532  E102               	bnz	u3705
  3348  001534  0EC8               	movlw	200
  3349  001536  5C40               	subwf	_get,w,c
  3350  001538                     u3705:
  3351  001538  A0D8               	btfss	status,0,c
  3352  00153A  D01A               	goto	l3602
  3353  00153C  5043               	movf	_get+3,w,c
  3354  00153E  0A80               	xorlw	128
  3355  001540  0F80               	addlw	128
  3356  001542  E108               	bnz	u3715
  3357  001544  0E00               	movlw	0
  3358  001546  5C42               	subwf	_get+2,w,c
  3359  001548  E105               	bnz	u3715
  3360  00154A  0E02               	movlw	2
  3361  00154C  5C41               	subwf	_get+1,w,c
  3362  00154E  E102               	bnz	u3715
  3363  001550  0E3A               	movlw	58
  3364  001552  5C40               	subwf	_get,w,c
  3365  001554                     u3715:
  3366  001554  B0D8               	btfsc	status,0,c
  3367  001556  D00C               	goto	l3602
  3368  001558  0E2C               	movlw	44
  3369  00155A  0100               	movlb	0	; () banked
  3370  00155C  6F7C               	movwf	_r16& (0+255),b
  3371  00155E  0E01               	movlw	1
  3372  001560  0100               	movlb	0	; () banked
  3373  001562  6F7D               	movwf	(_r16+1)& (0+255),b
  3374  001564  0E00               	movlw	0
  3375  001566  0100               	movlb	0	; () banked
  3376  001568  6F7E               	movwf	(_r16+2)& (0+255),b
  3377  00156A  0E00               	movlw	0
  3378  00156C  0100               	movlb	0	; () banked
  3379  00156E  6F7F               	movwf	(_r16+3)& (0+255),b
  3380  001570                     l3602:
  3381                           
  3382                           ;virtual_2.c: 423: if((get>570)&&(get<670))r16=400;
  3383  001570  5043               	movf	_get+3,w,c
  3384  001572  0A80               	xorlw	128
  3385  001574  0F80               	addlw	128
  3386  001576  E108               	bnz	u3725
  3387  001578  0E00               	movlw	0
  3388  00157A  5C42               	subwf	_get+2,w,c
  3389  00157C  E105               	bnz	u3725
  3390  00157E  0E02               	movlw	2
  3391  001580  5C41               	subwf	_get+1,w,c
  3392  001582  E102               	bnz	u3725
  3393  001584  0E3B               	movlw	59
  3394  001586  5C40               	subwf	_get,w,c
  3395  001588                     u3725:
  3396  001588  A0D8               	btfss	status,0,c
  3397  00158A  D01A               	goto	l3608
  3398  00158C  5043               	movf	_get+3,w,c
  3399  00158E  0A80               	xorlw	128
  3400  001590  0F80               	addlw	128
  3401  001592  E108               	bnz	u3735
  3402  001594  0E00               	movlw	0
  3403  001596  5C42               	subwf	_get+2,w,c
  3404  001598  E105               	bnz	u3735
  3405  00159A  0E02               	movlw	2
  3406  00159C  5C41               	subwf	_get+1,w,c
  3407  00159E  E102               	bnz	u3735
  3408  0015A0  0E9E               	movlw	158
  3409  0015A2  5C40               	subwf	_get,w,c
  3410  0015A4                     u3735:
  3411  0015A4  B0D8               	btfsc	status,0,c
  3412  0015A6  D00C               	goto	l3608
  3413  0015A8  0E90               	movlw	144
  3414  0015AA  0100               	movlb	0	; () banked
  3415  0015AC  6F7C               	movwf	_r16& (0+255),b
  3416  0015AE  0E01               	movlw	1
  3417  0015B0  0100               	movlb	0	; () banked
  3418  0015B2  6F7D               	movwf	(_r16+1)& (0+255),b
  3419  0015B4  0E00               	movlw	0
  3420  0015B6  0100               	movlb	0	; () banked
  3421  0015B8  6F7E               	movwf	(_r16+2)& (0+255),b
  3422  0015BA  0E00               	movlw	0
  3423  0015BC  0100               	movlb	0	; () banked
  3424  0015BE  6F7F               	movwf	(_r16+3)& (0+255),b
  3425  0015C0                     l3608:
  3426                           
  3427                           ;virtual_2.c: 424: if((get>670)&&(get<760))r16=500;
  3428  0015C0  5043               	movf	_get+3,w,c
  3429  0015C2  0A80               	xorlw	128
  3430  0015C4  0F80               	addlw	128
  3431  0015C6  E108               	bnz	u3745
  3432  0015C8  0E00               	movlw	0
  3433  0015CA  5C42               	subwf	_get+2,w,c
  3434  0015CC  E105               	bnz	u3745
  3435  0015CE  0E02               	movlw	2
  3436  0015D0  5C41               	subwf	_get+1,w,c
  3437  0015D2  E102               	bnz	u3745
  3438  0015D4  0E9F               	movlw	159
  3439  0015D6  5C40               	subwf	_get,w,c
  3440  0015D8                     u3745:
  3441  0015D8  A0D8               	btfss	status,0,c
  3442  0015DA  D01A               	goto	l3614
  3443  0015DC  5043               	movf	_get+3,w,c
  3444  0015DE  0A80               	xorlw	128
  3445  0015E0  0F80               	addlw	128
  3446  0015E2  E108               	bnz	u3755
  3447  0015E4  0E00               	movlw	0
  3448  0015E6  5C42               	subwf	_get+2,w,c
  3449  0015E8  E105               	bnz	u3755
  3450  0015EA  0E02               	movlw	2
  3451  0015EC  5C41               	subwf	_get+1,w,c
  3452  0015EE  E102               	bnz	u3755
  3453  0015F0  0EF8               	movlw	248
  3454  0015F2  5C40               	subwf	_get,w,c
  3455  0015F4                     u3755:
  3456  0015F4  B0D8               	btfsc	status,0,c
  3457  0015F6  D00C               	goto	l3614
  3458  0015F8  0EF4               	movlw	244
  3459  0015FA  0100               	movlb	0	; () banked
  3460  0015FC  6F7C               	movwf	_r16& (0+255),b
  3461  0015FE  0E01               	movlw	1
  3462  001600  0100               	movlb	0	; () banked
  3463  001602  6F7D               	movwf	(_r16+1)& (0+255),b
  3464  001604  0E00               	movlw	0
  3465  001606  0100               	movlb	0	; () banked
  3466  001608  6F7E               	movwf	(_r16+2)& (0+255),b
  3467  00160A  0E00               	movlw	0
  3468  00160C  0100               	movlb	0	; () banked
  3469  00160E  6F7F               	movwf	(_r16+3)& (0+255),b
  3470  001610                     l3614:
  3471                           
  3472                           ;virtual_2.c: 425: x1=r16/100;x2=r16%100;
  3473  001610  C07C  F012         	movff	_r16,___aldiv@dividend
  3474  001614  C07D  F013         	movff	_r16+1,___aldiv@dividend+1
  3475  001618  C07E  F014         	movff	_r16+2,___aldiv@dividend+2
  3476  00161C  C07F  F015         	movff	_r16+3,___aldiv@dividend+3
  3477  001620  0E64               	movlw	100
  3478  001622  6E16               	movwf	___aldiv@divisor,c
  3479  001624  0E00               	movlw	0
  3480  001626  6E17               	movwf	___aldiv@divisor+1,c
  3481  001628  0E00               	movlw	0
  3482  00162A  6E18               	movwf	___aldiv@divisor+2,c
  3483  00162C  0E00               	movlw	0
  3484  00162E  6E19               	movwf	___aldiv@divisor+3,c
  3485  001630  EC50  F00E         	call	___aldiv	;wreg free
  3486  001634  C012  F060         	movff	?___aldiv,??_main
  3487  001638  C013  F061         	movff	?___aldiv+1,??_main+1
  3488  00163C  C014  F062         	movff	?___aldiv+2,??_main+2
  3489  001640  C015  F063         	movff	?___aldiv+3,??_main+3
  3490  001644  C060  F06E         	movff	??_main,main@x1
  3491  001648  C061  F06F         	movff	??_main+1,main@x1+1
  3492  00164C  C07C  F012         	movff	_r16,___almod@dividend
  3493  001650  C07D  F013         	movff	_r16+1,___almod@dividend+1
  3494  001654  C07E  F014         	movff	_r16+2,___almod@dividend+2
  3495  001658  C07F  F015         	movff	_r16+3,___almod@dividend+3
  3496  00165C  0E64               	movlw	100
  3497  00165E  6E16               	movwf	___almod@divisor,c
  3498  001660  0E00               	movlw	0
  3499  001662  6E17               	movwf	___almod@divisor+1,c
  3500  001664  0E00               	movlw	0
  3501  001666  6E18               	movwf	___almod@divisor+2,c
  3502  001668  0E00               	movlw	0
  3503  00166A  6E19               	movwf	___almod@divisor+3,c
  3504  00166C  EC42  F00F         	call	___almod	;wreg free
  3505  001670  C012  F060         	movff	?___almod,??_main
  3506  001674  C013  F061         	movff	?___almod+1,??_main+1
  3507  001678  C014  F062         	movff	?___almod+2,??_main+2
  3508  00167C  C015  F063         	movff	?___almod+3,??_main+3
  3509  001680  C060  F070         	movff	??_main,main@x2
  3510  001684  C061  F071         	movff	??_main+1,main@x2+1
  3511                           
  3512                           ;virtual_2.c: 426: leddec(x1/10,x1%10,x2/10,x2%10);led_dot(2);
  3513  001688  C06E  F023         	movff	main@x1,___lwdiv@dividend
  3514  00168C  C06F  F024         	movff	main@x1+1,___lwdiv@dividend+1
  3515  001690  0E00               	movlw	0
  3516  001692  6E26               	movwf	___lwdiv@divisor+1,c
  3517  001694  0E0A               	movlw	10
  3518  001696  6E25               	movwf	___lwdiv@divisor,c
  3519  001698  ECA4  F011         	call	___lwdiv	;wreg free
  3520  00169C  C023  F02A         	movff	?___lwdiv,leddec@vh1
  3521  0016A0  C024  F02B         	movff	?___lwdiv+1,leddec@vh1+1
  3522  0016A4  C06E  F012         	movff	main@x1,___lwmod@dividend
  3523  0016A8  C06F  F013         	movff	main@x1+1,___lwmod@dividend+1
  3524  0016AC  0E00               	movlw	0
  3525  0016AE  6E15               	movwf	___lwmod@divisor+1,c
  3526  0016B0  0E0A               	movlw	10
  3527  0016B2  6E14               	movwf	___lwmod@divisor,c
  3528  0016B4  ECCD  F011         	call	___lwmod	;wreg free
  3529  0016B8  C012  F02C         	movff	?___lwmod,leddec@vh2
  3530  0016BC  C013  F02D         	movff	?___lwmod+1,leddec@vh2+1
  3531  0016C0  C070  F023         	movff	main@x2,___lwdiv@dividend
  3532  0016C4  C071  F024         	movff	main@x2+1,___lwdiv@dividend+1
  3533  0016C8  0E00               	movlw	0
  3534  0016CA  6E26               	movwf	___lwdiv@divisor+1,c
  3535  0016CC  0E0A               	movlw	10
  3536  0016CE  6E25               	movwf	___lwdiv@divisor,c
  3537  0016D0  ECA4  F011         	call	___lwdiv	;wreg free
  3538  0016D4  C023  F02E         	movff	?___lwdiv,leddec@vl1
  3539  0016D8  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  3540  0016DC  C070  F012         	movff	main@x2,___lwmod@dividend
  3541  0016E0  C071  F013         	movff	main@x2+1,___lwmod@dividend+1
  3542  0016E4  0E00               	movlw	0
  3543  0016E6  6E15               	movwf	___lwmod@divisor+1,c
  3544  0016E8  0E0A               	movlw	10
  3545  0016EA  6E14               	movwf	___lwmod@divisor,c
  3546  0016EC  ECCD  F011         	call	___lwmod	;wreg free
  3547  0016F0  C012  F030         	movff	?___lwmod,leddec@vl2
  3548  0016F4  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  3549  0016F8  EC01  F012         	call	_leddec	;wreg free
  3550  0016FC  0E02               	movlw	2
  3551  0016FE  EC39  F012         	call	_led_dot
  3552                           
  3553                           ;virtual_2.c: 427: break;
  3554  001702  D192               	goto	l3640
  3555  001704                     l3622:
  3556  001704  EC50  F00D         	call	_fn111	;wreg free
  3557  001708  C01F  F023         	movff	?_fn111,___lwdiv@dividend
  3558  00170C  C020  F024         	movff	?_fn111+1,___lwdiv@dividend+1
  3559  001710  0E00               	movlw	0
  3560  001712  6E26               	movwf	___lwdiv@divisor+1,c
  3561  001714  0E64               	movlw	100
  3562  001716  6E25               	movwf	___lwdiv@divisor,c
  3563  001718  ECA4  F011         	call	___lwdiv	;wreg free
  3564  00171C  C023  F040         	movff	?___lwdiv,_get
  3565  001720  C024  F041         	movff	?___lwdiv+1,_get+1
  3566  001724  6A42               	clrf	_get+2,c
  3567  001726  6A43               	clrf	_get+3,c
  3568  001728  C040  F012         	movff	_get,___aldiv@dividend
  3569  00172C  C041  F013         	movff	_get+1,___aldiv@dividend+1
  3570  001730  C042  F014         	movff	_get+2,___aldiv@dividend+2
  3571  001734  C043  F015         	movff	_get+3,___aldiv@dividend+3
  3572  001738  0E64               	movlw	100
  3573  00173A  6E16               	movwf	___aldiv@divisor,c
  3574  00173C  0E00               	movlw	0
  3575  00173E  6E17               	movwf	___aldiv@divisor+1,c
  3576  001740  0E00               	movlw	0
  3577  001742  6E18               	movwf	___aldiv@divisor+2,c
  3578  001744  0E00               	movlw	0
  3579  001746  6E19               	movwf	___aldiv@divisor+3,c
  3580  001748  EC50  F00E         	call	___aldiv	;wreg free
  3581  00174C  C012  F060         	movff	?___aldiv,??_main
  3582  001750  C013  F061         	movff	?___aldiv+1,??_main+1
  3583  001754  C014  F062         	movff	?___aldiv+2,??_main+2
  3584  001758  C015  F063         	movff	?___aldiv+3,??_main+3
  3585  00175C  C060  F06E         	movff	??_main,main@x1
  3586  001760  C061  F06F         	movff	??_main+1,main@x1+1
  3587  001764  C040  F012         	movff	_get,___almod@dividend
  3588  001768  C041  F013         	movff	_get+1,___almod@dividend+1
  3589  00176C  C042  F014         	movff	_get+2,___almod@dividend+2
  3590  001770  C043  F015         	movff	_get+3,___almod@dividend+3
  3591  001774  0E64               	movlw	100
  3592  001776  6E16               	movwf	___almod@divisor,c
  3593  001778  0E00               	movlw	0
  3594  00177A  6E17               	movwf	___almod@divisor+1,c
  3595  00177C  0E00               	movlw	0
  3596  00177E  6E18               	movwf	___almod@divisor+2,c
  3597  001780  0E00               	movlw	0
  3598  001782  6E19               	movwf	___almod@divisor+3,c
  3599  001784  EC42  F00F         	call	___almod	;wreg free
  3600  001788  C012  F060         	movff	?___almod,??_main
  3601  00178C  C013  F061         	movff	?___almod+1,??_main+1
  3602  001790  C014  F062         	movff	?___almod+2,??_main+2
  3603  001794  C015  F063         	movff	?___almod+3,??_main+3
  3604  001798  C060  F070         	movff	??_main,main@x2
  3605  00179C  C061  F071         	movff	??_main+1,main@x2+1
  3606  0017A0  0E02               	movlw	2
  3607  0017A2  EC39  F012         	call	_led_dot
  3608                           
  3609                           ;virtual_2.c: 431: if(get<10)leddec(0,0,x2/10,x2%10);
  3610  0017A6  5043               	movf	_get+3,w,c
  3611  0017A8  0A80               	xorlw	128
  3612  0017AA  0F80               	addlw	128
  3613  0017AC  E108               	bnz	u3765
  3614  0017AE  0E00               	movlw	0
  3615  0017B0  5C42               	subwf	_get+2,w,c
  3616  0017B2  E105               	bnz	u3765
  3617  0017B4  0E00               	movlw	0
  3618  0017B6  5C41               	subwf	_get+1,w,c
  3619  0017B8  E102               	bnz	u3765
  3620  0017BA  0E0A               	movlw	10
  3621  0017BC  5C40               	subwf	_get,w,c
  3622  0017BE                     u3765:
  3623  0017BE  B0D8               	btfsc	status,0,c
  3624  0017C0  D026               	goto	l3634
  3625  0017C2  0E00               	movlw	0
  3626  0017C4  6E2B               	movwf	leddec@vh1+1,c
  3627  0017C6  0E00               	movlw	0
  3628  0017C8  6E2A               	movwf	leddec@vh1,c
  3629  0017CA  0E00               	movlw	0
  3630  0017CC  6E2D               	movwf	leddec@vh2+1,c
  3631  0017CE  0E00               	movlw	0
  3632  0017D0  6E2C               	movwf	leddec@vh2,c
  3633  0017D2  C070  F023         	movff	main@x2,___lwdiv@dividend
  3634  0017D6  C071  F024         	movff	main@x2+1,___lwdiv@dividend+1
  3635  0017DA  0E00               	movlw	0
  3636  0017DC  6E26               	movwf	___lwdiv@divisor+1,c
  3637  0017DE  0E0A               	movlw	10
  3638  0017E0  6E25               	movwf	___lwdiv@divisor,c
  3639  0017E2  ECA4  F011         	call	___lwdiv	;wreg free
  3640  0017E6  C023  F02E         	movff	?___lwdiv,leddec@vl1
  3641  0017EA  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  3642  0017EE  C070  F012         	movff	main@x2,___lwmod@dividend
  3643  0017F2  C071  F013         	movff	main@x2+1,___lwmod@dividend+1
  3644  0017F6  0E00               	movlw	0
  3645  0017F8  6E15               	movwf	___lwmod@divisor+1,c
  3646  0017FA  0E0A               	movlw	10
  3647  0017FC  6E14               	movwf	___lwmod@divisor,c
  3648  0017FE  ECCD  F011         	call	___lwmod	;wreg free
  3649  001802  C012  F030         	movff	?___lwmod,leddec@vl2
  3650  001806  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  3651  00180A  EC01  F012         	call	_leddec	;wreg free
  3652  00180E                     l3634:
  3653                           
  3654                           ;virtual_2.c: 432: if(get<100)leddec(0,x1%10,x2/10,x2%10);
  3655  00180E  5043               	movf	_get+3,w,c
  3656  001810  0A80               	xorlw	128
  3657  001812  0F80               	addlw	128
  3658  001814  E108               	bnz	u3775
  3659  001816  0E00               	movlw	0
  3660  001818  5C42               	subwf	_get+2,w,c
  3661  00181A  E105               	bnz	u3775
  3662  00181C  0E00               	movlw	0
  3663  00181E  5C41               	subwf	_get+1,w,c
  3664  001820  E102               	bnz	u3775
  3665  001822  0E64               	movlw	100
  3666  001824  5C40               	subwf	_get,w,c
  3667  001826                     u3775:
  3668  001826  B0D8               	btfsc	status,0,c
  3669  001828  D030               	goto	l397
  3670  00182A  0E00               	movlw	0
  3671  00182C  6E2B               	movwf	leddec@vh1+1,c
  3672  00182E  0E00               	movlw	0
  3673  001830  6E2A               	movwf	leddec@vh1,c
  3674  001832  C06E  F012         	movff	main@x1,___lwmod@dividend
  3675  001836  C06F  F013         	movff	main@x1+1,___lwmod@dividend+1
  3676  00183A  0E00               	movlw	0
  3677  00183C  6E15               	movwf	___lwmod@divisor+1,c
  3678  00183E  0E0A               	movlw	10
  3679  001840  6E14               	movwf	___lwmod@divisor,c
  3680  001842  ECCD  F011         	call	___lwmod	;wreg free
  3681  001846  C012  F02C         	movff	?___lwmod,leddec@vh2
  3682  00184A  C013  F02D         	movff	?___lwmod+1,leddec@vh2+1
  3683  00184E  C070  F023         	movff	main@x2,___lwdiv@dividend
  3684  001852  C071  F024         	movff	main@x2+1,___lwdiv@dividend+1
  3685  001856  0E00               	movlw	0
  3686  001858  6E26               	movwf	___lwdiv@divisor+1,c
  3687  00185A  0E0A               	movlw	10
  3688  00185C  6E25               	movwf	___lwdiv@divisor,c
  3689  00185E  ECA4  F011         	call	___lwdiv	;wreg free
  3690  001862  C023  F02E         	movff	?___lwdiv,leddec@vl1
  3691  001866  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  3692  00186A  C070  F012         	movff	main@x2,___lwmod@dividend
  3693  00186E  C071  F013         	movff	main@x2+1,___lwmod@dividend+1
  3694  001872  0E00               	movlw	0
  3695  001874  6E15               	movwf	___lwmod@divisor+1,c
  3696  001876  0E0A               	movlw	10
  3697  001878  6E14               	movwf	___lwmod@divisor,c
  3698  00187A  ECCD  F011         	call	___lwmod	;wreg free
  3699  00187E  C012  F030         	movff	?___lwmod,leddec@vl2
  3700  001882  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  3701  001886  EC01  F012         	call	_leddec	;wreg free
  3702  00188A                     l397:
  3703                           
  3704                           ;virtual_2.c: 433: leddec(x1/10,x1%10,x2/10,x2%10);
  3705  00188A  C06E  F023         	movff	main@x1,___lwdiv@dividend
  3706  00188E  C06F  F024         	movff	main@x1+1,___lwdiv@dividend+1
  3707  001892  0E00               	movlw	0
  3708  001894  6E26               	movwf	___lwdiv@divisor+1,c
  3709  001896  0E0A               	movlw	10
  3710  001898  6E25               	movwf	___lwdiv@divisor,c
  3711  00189A  ECA4  F011         	call	___lwdiv	;wreg free
  3712  00189E  C023  F02A         	movff	?___lwdiv,leddec@vh1
  3713  0018A2  C024  F02B         	movff	?___lwdiv+1,leddec@vh1+1
  3714  0018A6  C06E  F012         	movff	main@x1,___lwmod@dividend
  3715  0018AA  C06F  F013         	movff	main@x1+1,___lwmod@dividend+1
  3716  0018AE  0E00               	movlw	0
  3717  0018B0  6E15               	movwf	___lwmod@divisor+1,c
  3718  0018B2  0E0A               	movlw	10
  3719  0018B4  6E14               	movwf	___lwmod@divisor,c
  3720  0018B6  ECCD  F011         	call	___lwmod	;wreg free
  3721  0018BA  C012  F02C         	movff	?___lwmod,leddec@vh2
  3722  0018BE  C013  F02D         	movff	?___lwmod+1,leddec@vh2+1
  3723  0018C2  C070  F023         	movff	main@x2,___lwdiv@dividend
  3724  0018C6  C071  F024         	movff	main@x2+1,___lwdiv@dividend+1
  3725  0018CA  0E00               	movlw	0
  3726  0018CC  6E26               	movwf	___lwdiv@divisor+1,c
  3727  0018CE  0E0A               	movlw	10
  3728  0018D0  6E25               	movwf	___lwdiv@divisor,c
  3729  0018D2  ECA4  F011         	call	___lwdiv	;wreg free
  3730  0018D6  C023  F02E         	movff	?___lwdiv,leddec@vl1
  3731  0018DA  C024  F02F         	movff	?___lwdiv+1,leddec@vl1+1
  3732  0018DE  C070  F012         	movff	main@x2,___lwmod@dividend
  3733  0018E2  C071  F013         	movff	main@x2+1,___lwmod@dividend+1
  3734  0018E6  0E00               	movlw	0
  3735  0018E8  6E15               	movwf	___lwmod@divisor+1,c
  3736  0018EA  0E0A               	movlw	10
  3737  0018EC  6E14               	movwf	___lwmod@divisor,c
  3738  0018EE  ECCD  F011         	call	___lwmod	;wreg free
  3739  0018F2  C012  F030         	movff	?___lwmod,leddec@vl2
  3740  0018F6  C013  F031         	movff	?___lwmod+1,leddec@vl2+1
  3741  0018FA  EC01  F012         	call	_leddec	;wreg free
  3742                           
  3743                           ;virtual_2.c: 434: delay_ms(250);break;
  3744  0018FE  0E00               	movlw	0
  3745  001900  6E13               	movwf	delay_ms@ms+1,c
  3746  001902  0EFA               	movlw	250
  3747  001904  6E12               	movwf	delay_ms@ms,c
  3748  001906  EC12  F012         	call	_delay_ms	;wreg free
  3749  00190A  D08E               	goto	l3640
  3750  00190C                     l3638:
  3751  00190C  0E01               	movlw	1
  3752  00190E  EC25  F011         	call	_adc_get
  3753  001912  C012  F040         	movff	?_adc_get,_get
  3754  001916  C013  F041         	movff	?_adc_get+1,_get+1
  3755  00191A  6A42               	clrf	_get+2,c
  3756  00191C  6A43               	clrf	_get+3,c
  3757  00191E  C040  F012         	movff	_get,___aldiv@dividend
  3758  001922  C041  F013         	movff	_get+1,___aldiv@dividend+1
  3759  001926  C042  F014         	movff	_get+2,___aldiv@dividend+2
  3760  00192A  C043  F015         	movff	_get+3,___aldiv@dividend+3
  3761  00192E  0E64               	movlw	100
  3762  001930  6E16               	movwf	___aldiv@divisor,c
  3763  001932  0E00               	movlw	0
  3764  001934  6E17               	movwf	___aldiv@divisor+1,c
  3765  001936  0E00               	movlw	0
  3766  001938  6E18               	movwf	___aldiv@divisor+2,c
  3767  00193A  0E00               	movlw	0
  3768  00193C  6E19               	movwf	___aldiv@divisor+3,c
  3769  00193E  EC50  F00E         	call	___aldiv	;wreg free
  3770  001942  C012  F060         	movff	?___aldiv,??_main
  3771  001946  C013  F061         	movff	?___aldiv+1,??_main+1
  3772  00194A  C014  F062         	movff	?___aldiv+2,??_main+2
  3773  00194E  C015  F063         	movff	?___aldiv+3,??_main+3
  3774  001952  C060  F02A         	movff	??_main,led_dec@vh
  3775  001956  C061  F02B         	movff	??_main+1,led_dec@vh+1
  3776  00195A  C040  F012         	movff	_get,___almod@dividend
  3777  00195E  C041  F013         	movff	_get+1,___almod@dividend+1
  3778  001962  C042  F014         	movff	_get+2,___almod@dividend+2
  3779  001966  C043  F015         	movff	_get+3,___almod@dividend+3
  3780  00196A  0E64               	movlw	100
  3781  00196C  6E16               	movwf	___almod@divisor,c
  3782  00196E  0E00               	movlw	0
  3783  001970  6E17               	movwf	___almod@divisor+1,c
  3784  001972  0E00               	movlw	0
  3785  001974  6E18               	movwf	___almod@divisor+2,c
  3786  001976  0E00               	movlw	0
  3787  001978  6E19               	movwf	___almod@divisor+3,c
  3788  00197A  EC42  F00F         	call	___almod	;wreg free
  3789  00197E  C012  F064         	movff	?___almod,??_main+4
  3790  001982  C013  F065         	movff	?___almod+1,??_main+5
  3791  001986  C014  F066         	movff	?___almod+2,??_main+6
  3792  00198A  C015  F067         	movff	?___almod+3,??_main+7
  3793  00198E  C064  F02C         	movff	??_main+4,led_dec@vl
  3794  001992  C065  F02D         	movff	??_main+5,led_dec@vl+1
  3795  001996  EC83  F010         	call	_led_dec	;wreg free
  3796  00199A                     l399:
  3797  00199A  0E02               	movlw	2
  3798  00199C  EC25  F011         	call	_adc_get
  3799  0019A0  C012  F040         	movff	?_adc_get,_get
  3800  0019A4  C013  F041         	movff	?_adc_get+1,_get+1
  3801  0019A8  6A42               	clrf	_get+2,c
  3802  0019AA  6A43               	clrf	_get+3,c
  3803  0019AC  C040  F012         	movff	_get,___aldiv@dividend
  3804  0019B0  C041  F013         	movff	_get+1,___aldiv@dividend+1
  3805  0019B4  C042  F014         	movff	_get+2,___aldiv@dividend+2
  3806  0019B8  C043  F015         	movff	_get+3,___aldiv@dividend+3
  3807  0019BC  0E64               	movlw	100
  3808  0019BE  6E16               	movwf	___aldiv@divisor,c
  3809  0019C0  0E00               	movlw	0
  3810  0019C2  6E17               	movwf	___aldiv@divisor+1,c
  3811  0019C4  0E00               	movlw	0
  3812  0019C6  6E18               	movwf	___aldiv@divisor+2,c
  3813  0019C8  0E00               	movlw	0
  3814  0019CA  6E19               	movwf	___aldiv@divisor+3,c
  3815  0019CC  EC50  F00E         	call	___aldiv	;wreg free
  3816  0019D0  C012  F060         	movff	?___aldiv,??_main
  3817  0019D4  C013  F061         	movff	?___aldiv+1,??_main+1
  3818  0019D8  C014  F062         	movff	?___aldiv+2,??_main+2
  3819  0019DC  C015  F063         	movff	?___aldiv+3,??_main+3
  3820  0019E0  C060  F02A         	movff	??_main,led_dec@vh
  3821  0019E4  C061  F02B         	movff	??_main+1,led_dec@vh+1
  3822  0019E8  C040  F012         	movff	_get,___almod@dividend
  3823  0019EC  C041  F013         	movff	_get+1,___almod@dividend+1
  3824  0019F0  C042  F014         	movff	_get+2,___almod@dividend+2
  3825  0019F4  C043  F015         	movff	_get+3,___almod@dividend+3
  3826  0019F8  0E64               	movlw	100
  3827  0019FA  6E16               	movwf	___almod@divisor,c
  3828  0019FC  0E00               	movlw	0
  3829  0019FE  6E17               	movwf	___almod@divisor+1,c
  3830  001A00  0E00               	movlw	0
  3831  001A02  6E18               	movwf	___almod@divisor+2,c
  3832  001A04  0E00               	movlw	0
  3833  001A06  6E19               	movwf	___almod@divisor+3,c
  3834  001A08  EC42  F00F         	call	___almod	;wreg free
  3835  001A0C  C012  F064         	movff	?___almod,??_main+4
  3836  001A10  C013  F065         	movff	?___almod+1,??_main+5
  3837  001A14  C014  F066         	movff	?___almod+2,??_main+6
  3838  001A18  C015  F067         	movff	?___almod+3,??_main+7
  3839  001A1C  C064  F02C         	movff	??_main+4,led_dec@vl
  3840  001A20  C065  F02D         	movff	??_main+5,led_dec@vl+1
  3841  001A24  EC83  F010         	call	_led_dec	;wreg free
  3842  001A28                     l3640:
  3843  001A28  5081               	movf	3969,w,c	;volatile
  3844  001A2A  0BF0               	andlw	240
  3845  001A2C  0100               	movlb	0	; () banked
  3846  001A2E  6F60               	movwf	??_main& (0+255),b
  3847  001A30  6B61               	clrf	(??_main+1)& (0+255),b
  3848                           
  3849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3850                           ; Switch size 1, requested type "space"
  3851                           ; Number of cases is 1, Range of values is 0 to 0
  3852                           ; switch strategies available:
  3853                           ; Name         Instructions Cycles
  3854                           ; simple_byte            4     3 (average)
  3855                           ;	Chosen strategy is simple_byte
  3856  001A32  0100               	movlb	0	; () banked
  3857  001A34  5161               	movf	(??_main+1)& (0+255),w,b
  3858  001A36  0A00               	xorlw	0	; case 0
  3859  001A38  A4D8               	btfss	status,2,c
  3860  001A3A  D7F6               	goto	l3640
  3861                           
  3862                           ; BSR set to: 0
  3863                           ; Switch size 1, requested type "space"
  3864                           ; Number of cases is 13, Range of values is 0 to 240
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte           40    21 (average)
  3868                           ;	Chosen strategy is simple_byte
  3869  001A3C  0100               	movlb	0	; () banked
  3870  001A3E  5160               	movf	??_main& (0+255),w,b
  3871  001A40  0A00               	xorlw	0	; case 0
  3872  001A42  B4D8               	btfsc	status,2,c
  3873  001A44  EF4B  F000         	goto	l3190
  3874  001A48  0A10               	xorlw	16	; case 16
  3875  001A4A  B4D8               	btfsc	status,2,c
  3876  001A4C  EFF5  F000         	goto	l3210
  3877  001A50  0A30               	xorlw	48	; case 32
  3878  001A52  B4D8               	btfsc	status,2,c
  3879  001A54  EF9F  F001         	goto	l3230
  3880  001A58  0A10               	xorlw	16	; case 48
  3881  001A5A  B4D8               	btfsc	status,2,c
  3882  001A5C  EFBA  F002         	goto	l3272
  3883  001A60  0A70               	xorlw	112	; case 64
  3884  001A62  B4D8               	btfsc	status,2,c
  3885  001A64  EF1B  F004         	goto	l3318
  3886  001A68  0A10               	xorlw	16	; case 80
  3887  001A6A  B4D8               	btfsc	status,2,c
  3888  001A6C  EFB2  F004         	goto	l3364
  3889  001A70  0A30               	xorlw	48	; case 96
  3890  001A72  B4D8               	btfsc	status,2,c
  3891  001A74  EF49  F005         	goto	l3410
  3892  001A78  0A10               	xorlw	16	; case 112
  3893  001A7A  B4D8               	btfsc	status,2,c
  3894  001A7C  EF3C  F006         	goto	l3478
  3895  001A80  0AF0               	xorlw	240	; case 128
  3896  001A82  B4D8               	btfsc	status,2,c
  3897  001A84  D474               	goto	l3562
  3898  001A86  0A10               	xorlw	16	; case 144
  3899  001A88  B4D8               	btfsc	status,2,c
  3900  001A8A  D4C2               	goto	l385
  3901  001A8C  0A50               	xorlw	80	; case 192
  3902  001A8E  B4D8               	btfsc	status,2,c
  3903  001A90  D639               	goto	l3622
  3904  001A92  0A20               	xorlw	32	; case 224
  3905  001A94  B4D8               	btfsc	status,2,c
  3906  001A96  D73A               	goto	l3638
  3907  001A98  0A10               	xorlw	16	; case 240
  3908  001A9A  B4D8               	btfsc	status,2,c
  3909  001A9C  D77E               	goto	l399
  3910  001A9E  D7C4               	goto	l3640
  3911  001AA0                     __end_of_main:
  3912                           	opt stack 0
  3913                           tblptru	equ	0xFF8
  3914                           tblptrh	equ	0xFF7
  3915                           tblptrl	equ	0xFF6
  3916                           tablat	equ	0xFF5
  3917                           intcon	equ	0xFF2
  3918                           intcon2	equ	0xFF1
  3919                           postinc0	equ	0xFEE
  3920                           wreg	equ	0xFE8
  3921                           postdec1	equ	0xFE5
  3922                           fsr1l	equ	0xFE1
  3923                           status	equ	0xFD8
  3924                           
  3925 ;; *************** function _motor2 *****************
  3926 ;; Defined at:
  3927 ;;		line 63 in file "virtual_2.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  x               2   25[COMRAM] int 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;		None               void
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3941 ;;      Params:         2       0       0       0       0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3944 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    3
  3948 ;; This function calls:
  3949 ;;		_Delay100TCYx
  3950 ;;		_Delay1KTCYx
  3951 ;;		___awdiv
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text1
  3958  0022A0                     __ptext1:
  3959                           	opt stack 0
  3960  0022A0                     _motor2:
  3961                           	opt stack 27
  3962                           
  3963                           ;virtual_2.c: 65: if(x<9)x=9;
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;incstack = 0
  3967  0022A0  501B               	movf	motor2@x+1,w,c
  3968  0022A2  0A80               	xorlw	128
  3969  0022A4  6EF3               	movwf	prodl,c
  3970  0022A6  0E80               	movlw	128
  3971  0022A8  5CF3               	subwf	prodl,w,c
  3972  0022AA  0E09               	movlw	9
  3973  0022AC  B4D8               	btfsc	status,2,c
  3974  0022AE  5C1A               	subwf	motor2@x,w,c
  3975  0022B0  B0D8               	btfsc	status,0,c
  3976  0022B2  D004               	goto	l3006
  3977  0022B4  0E00               	movlw	0
  3978  0022B6  6E1B               	movwf	motor2@x+1,c
  3979  0022B8  0E09               	movlw	9
  3980  0022BA  6E1A               	movwf	motor2@x,c
  3981  0022BC                     l3006:
  3982                           
  3983                           ;virtual_2.c: 66: x=x/9;
  3984  0022BC  C01A  F012         	movff	motor2@x,___awdiv@dividend
  3985  0022C0  C01B  F013         	movff	motor2@x+1,___awdiv@dividend+1
  3986  0022C4  0E00               	movlw	0
  3987  0022C6  6E15               	movwf	___awdiv@divisor+1,c
  3988  0022C8  0E09               	movlw	9
  3989  0022CA  6E14               	movwf	___awdiv@divisor,c
  3990  0022CC  ECB0  F00F         	call	___awdiv	;wreg free
  3991  0022D0  C012  F01A         	movff	?___awdiv,motor2@x
  3992  0022D4  C013  F01B         	movff	?___awdiv+1,motor2@x+1
  3993                           
  3994                           ;virtual_2.c: 67: LATC2=1;
  3995  0022D8  848B               	bsf	3979,2,c	;volatile
  3996                           
  3997                           ;virtual_2.c: 68: Delay100TCYx(16/4*13);
  3998  0022DA  0E34               	movlw	52
  3999  0022DC  EC31  F012         	call	_Delay100TCYx
  4000                           
  4001                           ;virtual_2.c: 69: Delay100TCYx(16/4*x);
  4002  0022E0  501A               	movf	motor2@x,w,c
  4003  0022E2  0D04               	mullw	4
  4004  0022E4  50F3               	movf	prodl,w,c
  4005  0022E6  EC31  F012         	call	_Delay100TCYx
  4006                           
  4007                           ;virtual_2.c: 70: LATC2=0;
  4008  0022EA  948B               	bcf	3979,2,c	;volatile
  4009                           
  4010                           ;virtual_2.c: 71: Delay1KTCYx(16/4*20);
  4011  0022EC  0E50               	movlw	80
  4012  0022EE  EC29  F012         	call	_Delay1KTCYx
  4013  0022F2  0012               	return	
  4014  0022F4                     __end_of_motor2:
  4015                           	opt stack 0
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           prodl	equ	0xFF3
  4021                           intcon	equ	0xFF2
  4022                           intcon2	equ	0xFF1
  4023                           postinc0	equ	0xFEE
  4024                           wreg	equ	0xFE8
  4025                           postdec1	equ	0xFE5
  4026                           fsr1l	equ	0xFE1
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function _motor1 *****************
  4030 ;; Defined at:
  4031 ;;		line 51 in file "virtual_2.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  x               2   25[COMRAM] int 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;		None               void
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4045 ;;      Params:         2       0       0       0       0       0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4047 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4048 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4049 ;;Total ram usage:        4 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    3
  4052 ;; This function calls:
  4053 ;;		_Delay100TCYx
  4054 ;;		_Delay1KTCYx
  4055 ;;		___awdiv
  4056 ;; This function is called by:
  4057 ;;		_main
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text2
  4062  002178                     __ptext2:
  4063                           	opt stack 0
  4064  002178                     _motor1:
  4065                           	opt stack 27
  4066                           
  4067                           ;virtual_2.c: 53: x=90-x;
  4068                           
  4069                           ;incstack = 0
  4070  002178  C01A  F01C         	movff	motor1@x,??_motor1
  4071  00217C  C01B  F01D         	movff	motor1@x+1,??_motor1+1
  4072  002180  1E1C               	comf	??_motor1,f,c
  4073  002182  1E1D               	comf	??_motor1+1,f,c
  4074  002184  4A1C               	infsnz	??_motor1,f,c
  4075  002186  2A1D               	incf	??_motor1+1,f,c
  4076  002188  0E5A               	movlw	90
  4077  00218A  241C               	addwf	??_motor1,w,c
  4078  00218C  6E1A               	movwf	motor1@x,c
  4079  00218E  0E00               	movlw	0
  4080  002190  201D               	addwfc	??_motor1+1,w,c
  4081  002192  6E1B               	movwf	motor1@x+1,c
  4082                           
  4083                           ;virtual_2.c: 54: if(x<9)x=9;
  4084  002194  501B               	movf	motor1@x+1,w,c
  4085  002196  0A80               	xorlw	128
  4086  002198  6EF3               	movwf	prodl,c
  4087  00219A  0E80               	movlw	128
  4088  00219C  5CF3               	subwf	prodl,w,c
  4089  00219E  0E09               	movlw	9
  4090  0021A0  B4D8               	btfsc	status,2,c
  4091  0021A2  5C1A               	subwf	motor1@x,w,c
  4092  0021A4  B0D8               	btfsc	status,0,c
  4093  0021A6  D004               	goto	l2990
  4094  0021A8  0E00               	movlw	0
  4095  0021AA  6E1B               	movwf	motor1@x+1,c
  4096  0021AC  0E09               	movlw	9
  4097  0021AE  6E1A               	movwf	motor1@x,c
  4098  0021B0                     l2990:
  4099                           
  4100                           ;virtual_2.c: 55: x=x/9;
  4101  0021B0  C01A  F012         	movff	motor1@x,___awdiv@dividend
  4102  0021B4  C01B  F013         	movff	motor1@x+1,___awdiv@dividend+1
  4103  0021B8  0E00               	movlw	0
  4104  0021BA  6E15               	movwf	___awdiv@divisor+1,c
  4105  0021BC  0E09               	movlw	9
  4106  0021BE  6E14               	movwf	___awdiv@divisor,c
  4107  0021C0  ECB0  F00F         	call	___awdiv	;wreg free
  4108  0021C4  C012  F01A         	movff	?___awdiv,motor1@x
  4109  0021C8  C013  F01B         	movff	?___awdiv+1,motor1@x+1
  4110                           
  4111                           ;virtual_2.c: 56: LATC2=1;
  4112  0021CC  848B               	bsf	3979,2,c	;volatile
  4113                           
  4114                           ;virtual_2.c: 57: Delay100TCYx(16/4*4);
  4115  0021CE  0E10               	movlw	16
  4116  0021D0  EC31  F012         	call	_Delay100TCYx
  4117                           
  4118                           ;virtual_2.c: 58: Delay100TCYx(16/4*x);
  4119  0021D4  501A               	movf	motor1@x,w,c
  4120  0021D6  0D04               	mullw	4
  4121  0021D8  50F3               	movf	prodl,w,c
  4122  0021DA  EC31  F012         	call	_Delay100TCYx
  4123                           
  4124                           ;virtual_2.c: 59: LATC2=0;
  4125  0021DE  948B               	bcf	3979,2,c	;volatile
  4126                           
  4127                           ;virtual_2.c: 60: Delay1KTCYx(16/4*20);
  4128  0021E0  0E50               	movlw	80
  4129  0021E2  EC29  F012         	call	_Delay1KTCYx
  4130  0021E6  0012               	return	
  4131  0021E8                     __end_of_motor1:
  4132                           	opt stack 0
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodl	equ	0xFF3
  4138                           intcon	equ	0xFF2
  4139                           intcon2	equ	0xFF1
  4140                           postinc0	equ	0xFEE
  4141                           wreg	equ	0xFE8
  4142                           postdec1	equ	0xFE5
  4143                           fsr1l	equ	0xFE1
  4144                           status	equ	0xFD8
  4145                           
  4146 ;; *************** function _motor *****************
  4147 ;; Defined at:
  4148 ;;		line 73 in file "virtual_2.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  x               2   25[COMRAM] int 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;		None               void
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4162 ;;      Params:         2       0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4165 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4166 ;;Total ram usage:        2 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    3
  4169 ;; This function calls:
  4170 ;;		_Delay100TCYx
  4171 ;;		_Delay1KTCYx
  4172 ;;		___awdiv
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text3
  4179  0022F4                     __ptext3:
  4180                           	opt stack 0
  4181  0022F4                     _motor:
  4182                           	opt stack 27
  4183                           
  4184                           ;incstack = 0
  4185  0022F4  501B               	movf	motor@x+1,w,c
  4186  0022F6  0A80               	xorlw	128
  4187  0022F8  6EF3               	movwf	prodl,c
  4188  0022FA  0E80               	movlw	128
  4189  0022FC  5CF3               	subwf	prodl,w,c
  4190  0022FE  0E0A               	movlw	10
  4191  002300  B4D8               	btfsc	status,2,c
  4192  002302  5C1A               	subwf	motor@x,w,c
  4193  002304  B0D8               	btfsc	status,0,c
  4194  002306  D004               	goto	l3022
  4195  002308  0E00               	movlw	0
  4196  00230A  6E1B               	movwf	motor@x+1,c
  4197  00230C  0E0A               	movlw	10
  4198  00230E  6E1A               	movwf	motor@x,c
  4199  002310                     l3022:
  4200                           
  4201                           ;virtual_2.c: 75: x/=10;
  4202  002310  C01A  F012         	movff	motor@x,___awdiv@dividend
  4203  002314  C01B  F013         	movff	motor@x+1,___awdiv@dividend+1
  4204  002318  0E00               	movlw	0
  4205  00231A  6E15               	movwf	___awdiv@divisor+1,c
  4206  00231C  0E0A               	movlw	10
  4207  00231E  6E14               	movwf	___awdiv@divisor,c
  4208  002320  ECB0  F00F         	call	___awdiv	;wreg free
  4209  002324  C012  F01A         	movff	?___awdiv,motor@x
  4210  002328  C013  F01B         	movff	?___awdiv+1,motor@x+1
  4211                           
  4212                           ;virtual_2.c: 76: LATC2=1;
  4213  00232C  848B               	bsf	3979,2,c	;volatile
  4214                           
  4215                           ;virtual_2.c: 77: Delay100TCYx(16/4*4);
  4216  00232E  0E10               	movlw	16
  4217  002330  EC31  F012         	call	_Delay100TCYx
  4218                           
  4219                           ;virtual_2.c: 78: Delay100TCYx(16/4*x);
  4220  002334  501A               	movf	motor@x,w,c
  4221  002336  0D04               	mullw	4
  4222  002338  50F3               	movf	prodl,w,c
  4223  00233A  EC31  F012         	call	_Delay100TCYx
  4224                           
  4225                           ;virtual_2.c: 79: LATC2=0;
  4226  00233E  948B               	bcf	3979,2,c	;volatile
  4227                           
  4228                           ;virtual_2.c: 80: Delay1KTCYx(16/4*20);
  4229  002340  0E50               	movlw	80
  4230  002342  EC29  F012         	call	_Delay1KTCYx
  4231  002346  0012               	return	
  4232  002348                     __end_of_motor:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodl	equ	0xFF3
  4239                           intcon	equ	0xFF2
  4240                           intcon2	equ	0xFF1
  4241                           postinc0	equ	0xFEE
  4242                           wreg	equ	0xFE8
  4243                           postdec1	equ	0xFE5
  4244                           fsr1l	equ	0xFE1
  4245                           status	equ	0xFD8
  4246                           
  4247 ;; *************** function ___awdiv *****************
  4248 ;; Defined at:
  4249 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  dividend        2   17[COMRAM] int 
  4252 ;;  divisor         2   19[COMRAM] int 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  quotient        2   23[COMRAM] int 
  4255 ;;  sign            1   22[COMRAM] unsigned char 
  4256 ;;  counter         1   21[COMRAM] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  2   17[COMRAM] int 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, prodl
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4266 ;;      Params:         4       0       0       0       0       0       0       0       0
  4267 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4269 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4270 ;;Total ram usage:        8 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    2
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_motor1
  4277 ;;		_motor2
  4278 ;;		_motor
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text4
  4283  001F60                     __ptext4:
  4284                           	opt stack 0
  4285  001F60                     ___awdiv:
  4286                           	opt stack 27
  4287                           
  4288                           ;incstack = 0
  4289  001F60  0E00               	movlw	0
  4290  001F62  6E17               	movwf	___awdiv@sign,c
  4291  001F64  5015               	movf	___awdiv@divisor+1,w,c
  4292  001F66  0A80               	xorlw	128
  4293  001F68  6EF3               	movwf	prodl,c
  4294  001F6A  0E80               	movlw	128
  4295  001F6C  5CF3               	subwf	prodl,w,c
  4296  001F6E  0E00               	movlw	0
  4297  001F70  B4D8               	btfsc	status,2,c
  4298  001F72  5C14               	subwf	___awdiv@divisor,w,c
  4299  001F74  B0D8               	btfsc	status,0,c
  4300  001F76  D006               	goto	l2864
  4301  001F78  6C14               	negf	___awdiv@divisor,c
  4302  001F7A  1E15               	comf	___awdiv@divisor+1,f,c
  4303  001F7C  B0D8               	btfsc	status,0,c
  4304  001F7E  2A15               	incf	___awdiv@divisor+1,f,c
  4305  001F80  0E01               	movlw	1
  4306  001F82  6E17               	movwf	___awdiv@sign,c
  4307  001F84                     l2864:
  4308  001F84  5013               	movf	___awdiv@dividend+1,w,c
  4309  001F86  0A80               	xorlw	128
  4310  001F88  6EF3               	movwf	prodl,c
  4311  001F8A  0E80               	movlw	128
  4312  001F8C  5CF3               	subwf	prodl,w,c
  4313  001F8E  0E00               	movlw	0
  4314  001F90  B4D8               	btfsc	status,2,c
  4315  001F92  5C12               	subwf	___awdiv@dividend,w,c
  4316  001F94  B0D8               	btfsc	status,0,c
  4317  001F96  D006               	goto	l2870
  4318  001F98  6C12               	negf	___awdiv@dividend,c
  4319  001F9A  1E13               	comf	___awdiv@dividend+1,f,c
  4320  001F9C  B0D8               	btfsc	status,0,c
  4321  001F9E  2A13               	incf	___awdiv@dividend+1,f,c
  4322  001FA0  0E01               	movlw	1
  4323  001FA2  1A17               	xorwf	___awdiv@sign,f,c
  4324  001FA4                     l2870:
  4325  001FA4  0E00               	movlw	0
  4326  001FA6  6E19               	movwf	___awdiv@quotient+1,c
  4327  001FA8  0E00               	movlw	0
  4328  001FAA  6E18               	movwf	___awdiv@quotient,c
  4329  001FAC  5015               	movf	___awdiv@divisor+1,w,c
  4330  001FAE  1014               	iorwf	___awdiv@divisor,w,c
  4331  001FB0  B4D8               	btfsc	status,2,c
  4332  001FB2  D01C               	goto	l2892
  4333  001FB4  0E01               	movlw	1
  4334  001FB6  6E16               	movwf	___awdiv@counter,c
  4335  001FB8  D004               	goto	l2878
  4336  001FBA                     l2876:
  4337  001FBA  90D8               	bcf	status,0,c
  4338  001FBC  3614               	rlcf	___awdiv@divisor,f,c
  4339  001FBE  3615               	rlcf	___awdiv@divisor+1,f,c
  4340  001FC0  2A16               	incf	___awdiv@counter,f,c
  4341  001FC2                     l2878:
  4342  001FC2  AE15               	btfss	___awdiv@divisor+1,7,c
  4343  001FC4  D7FA               	goto	l2876
  4344  001FC6                     l2880:
  4345  001FC6  90D8               	bcf	status,0,c
  4346  001FC8  3618               	rlcf	___awdiv@quotient,f,c
  4347  001FCA  3619               	rlcf	___awdiv@quotient+1,f,c
  4348  001FCC  5014               	movf	___awdiv@divisor,w,c
  4349  001FCE  5C12               	subwf	___awdiv@dividend,w,c
  4350  001FD0  5015               	movf	___awdiv@divisor+1,w,c
  4351  001FD2  5813               	subwfb	___awdiv@dividend+1,w,c
  4352  001FD4  A0D8               	btfss	status,0,c
  4353  001FD6  D005               	goto	l2888
  4354  001FD8  5014               	movf	___awdiv@divisor,w,c
  4355  001FDA  5E12               	subwf	___awdiv@dividend,f,c
  4356  001FDC  5015               	movf	___awdiv@divisor+1,w,c
  4357  001FDE  5A13               	subwfb	___awdiv@dividend+1,f,c
  4358  001FE0  8018               	bsf	___awdiv@quotient,0,c
  4359  001FE2                     l2888:
  4360  001FE2  90D8               	bcf	status,0,c
  4361  001FE4  3215               	rrcf	___awdiv@divisor+1,f,c
  4362  001FE6  3214               	rrcf	___awdiv@divisor,f,c
  4363  001FE8  2E16               	decfsz	___awdiv@counter,f,c
  4364  001FEA  D7ED               	goto	l2880
  4365  001FEC                     l2892:
  4366  001FEC  5017               	movf	___awdiv@sign,w,c
  4367  001FEE  B4D8               	btfsc	status,2,c
  4368  001FF0  D004               	goto	l2896
  4369  001FF2  6C18               	negf	___awdiv@quotient,c
  4370  001FF4  1E19               	comf	___awdiv@quotient+1,f,c
  4371  001FF6  B0D8               	btfsc	status,0,c
  4372  001FF8  2A19               	incf	___awdiv@quotient+1,f,c
  4373  001FFA                     l2896:
  4374  001FFA  C018  F012         	movff	___awdiv@quotient,?___awdiv
  4375  001FFE  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
  4376  002002  0012               	return	
  4377  002004                     __end_of___awdiv:
  4378                           	opt stack 0
  4379                           tblptru	equ	0xFF8
  4380                           tblptrh	equ	0xFF7
  4381                           tblptrl	equ	0xFF6
  4382                           tablat	equ	0xFF5
  4383                           prodl	equ	0xFF3
  4384                           intcon	equ	0xFF2
  4385                           intcon2	equ	0xFF1
  4386                           postinc0	equ	0xFEE
  4387                           wreg	equ	0xFE8
  4388                           postdec1	equ	0xFE5
  4389                           fsr1l	equ	0xFE1
  4390                           status	equ	0xFD8
  4391                           
  4392 ;; *************** function _Delay1KTCYx *****************
  4393 ;; Defined at:
  4394 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  unit            1    wreg     unsigned char 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  unit            1   17[COMRAM] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;		None               void
  4401 ;; Registers used:
  4402 ;;		wreg
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4408 ;;      Params:         0       0       0       0       0       0       0       0       0
  4409 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4411 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4412 ;;Total ram usage:        1 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    2
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_motor1
  4419 ;;		_motor2
  4420 ;;		_motor
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text5
  4425  002452                     __ptext5:
  4426                           	opt stack 0
  4427  002452                     _Delay1KTCYx:
  4428                           	opt stack 27
  4429                           
  4430                           ;incstack = 0
  4431                           ;Delay1KTCYx@unit stored from wreg
  4432  002452  6E12               	movwf	Delay1KTCYx@unit,c
  4433  002454                     l635:
  4434  002454  0EFA               	movlw	250
  4435  002456                     u3787:
  4436  002456  F000               	nop	
  4437  002458  2EE8               	decfsz	wreg,f,c
  4438  00245A  D7FD               	goto	u3787
  4439  00245C  2E12               	decfsz	Delay1KTCYx@unit,f,c
  4440  00245E  D7FA               	goto	l635
  4441  002460  0012               	return	
  4442  002462                     __end_of_Delay1KTCYx:
  4443                           	opt stack 0
  4444                           tblptru	equ	0xFF8
  4445                           tblptrh	equ	0xFF7
  4446                           tblptrl	equ	0xFF6
  4447                           tablat	equ	0xFF5
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           intcon2	equ	0xFF1
  4451                           postinc0	equ	0xFEE
  4452                           wreg	equ	0xFE8
  4453                           postdec1	equ	0xFE5
  4454                           fsr1l	equ	0xFE1
  4455                           status	equ	0xFD8
  4456                           
  4457 ;; *************** function _Delay100TCYx *****************
  4458 ;; Defined at:
  4459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d100tcyx.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  unit            1    wreg     unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  unit            1   17[COMRAM] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;		None               void
  4466 ;; Registers used:
  4467 ;;		wreg
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4473 ;;      Params:         0       0       0       0       0       0       0       0       0
  4474 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4476 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4477 ;;Total ram usage:        1 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    2
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_motor1
  4484 ;;		_motor2
  4485 ;;		_motor
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text6
  4490  002462                     __ptext6:
  4491                           	opt stack 0
  4492  002462                     _Delay100TCYx:
  4493                           	opt stack 27
  4494                           
  4495                           ;incstack = 0
  4496                           ;Delay100TCYx@unit stored from wreg
  4497  002462  6E12               	movwf	Delay100TCYx@unit,c
  4498  002464                     l628:
  4499  002464  0E21               	movlw	33
  4500  002466                     u3797:
  4501  002466  2EE8               	decfsz	wreg,f,c
  4502  002468  D7FE               	goto	u3797
  4503  00246A  F000               	nop	
  4504  00246C  2E12               	decfsz	Delay100TCYx@unit,f,c
  4505  00246E  D7FA               	goto	l628
  4506  002470  0012               	return	
  4507  002472                     __end_of_Delay100TCYx:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           prodl	equ	0xFF3
  4514                           intcon	equ	0xFF2
  4515                           intcon2	equ	0xFF1
  4516                           postinc0	equ	0xFEE
  4517                           wreg	equ	0xFE8
  4518                           postdec1	equ	0xFE5
  4519                           fsr1l	equ	0xFE1
  4520                           status	equ	0xFD8
  4521                           
  4522 ;; *************** function _leddec *****************
  4523 ;; Defined at:
  4524 ;;		line 113 in file "led7.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  vh1             2   41[COMRAM] unsigned int 
  4527 ;;  vh2             2   43[COMRAM] unsigned int 
  4528 ;;  vl1             2   45[COMRAM] unsigned int 
  4529 ;;  vl2             2   47[COMRAM] unsigned int 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;		None               void
  4534 ;; Registers used:
  4535 ;;		None
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         8       0       0       0       0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4544 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4545 ;;Total ram usage:        8 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    2
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_main
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text7
  4556  002402                     __ptext7:
  4557                           	opt stack 0
  4558  002402                     _leddec:
  4559                           	opt stack 28
  4560                           
  4561                           ;led7.c: 115: DD1=vh1;
  4562                           
  4563                           ;incstack = 0
  4564  002402  C02A  F046         	movff	leddec@vh1,_DD1
  4565  002406  C02B  F047         	movff	leddec@vh1+1,_DD1+1
  4566                           
  4567                           ;led7.c: 116: DD2=vh2;
  4568  00240A  C02C  F048         	movff	leddec@vh2,_DD2
  4569  00240E  C02D  F049         	movff	leddec@vh2+1,_DD2+1
  4570                           
  4571                           ;led7.c: 117: DD3=vl1;
  4572  002412  C02E  F092         	movff	leddec@vl1,_DD3
  4573  002416  C02F  F093         	movff	leddec@vl1+1,_DD3+1
  4574                           
  4575                           ;led7.c: 118: DD4=vl2;
  4576  00241A  C030  F094         	movff	leddec@vl2,_DD4
  4577  00241E  C031  F095         	movff	leddec@vl2+1,_DD4+1
  4578  002422  0012               	return	
  4579  002424                     __end_of_leddec:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           prodl	equ	0xFF3
  4586                           intcon	equ	0xFF2
  4587                           intcon2	equ	0xFF1
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           postdec1	equ	0xFE5
  4591                           fsr1l	equ	0xFE1
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _led_dot *****************
  4595 ;; Defined at:
  4596 ;;		line 102 in file "led7.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  tp              1    wreg     unsigned char 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  tp              1   17[COMRAM] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;		None               void
  4603 ;; Registers used:
  4604 ;;		wreg
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0
  4611 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4613 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4614 ;;Total ram usage:        1 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    2
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text8
  4625  002472                     __ptext8:
  4626                           	opt stack 0
  4627  002472                     _led_dot:
  4628                           	opt stack 28
  4629                           
  4630                           ;incstack = 0
  4631                           ;led_dot@tp stored from wreg
  4632  002472  6E12               	movwf	led_dot@tp,c
  4633                           
  4634                           ;led7.c: 104: dot=tp;
  4635  002474  C012  F044         	movff	led_dot@tp,_dot
  4636  002478  6A45               	clrf	_dot+1,c
  4637  00247A  0012               	return	
  4638  00247C                     __end_of_led_dot:
  4639                           	opt stack 0
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           prodl	equ	0xFF3
  4645                           intcon	equ	0xFF2
  4646                           intcon2	equ	0xFF1
  4647                           postinc0	equ	0xFEE
  4648                           wreg	equ	0xFE8
  4649                           postdec1	equ	0xFE5
  4650                           fsr1l	equ	0xFE1
  4651                           status	equ	0xFD8
  4652                           
  4653 ;; *************** function _led_dec *****************
  4654 ;; Defined at:
  4655 ;;		line 106 in file "led7.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  vh              2   41[COMRAM] unsigned int 
  4658 ;;  vl              2   43[COMRAM] unsigned int 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;		None               void
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         4       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        4 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		___lwdiv
  4679 ;;		___lwmod
  4680 ;; This function is called by:
  4681 ;;		_main
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text9
  4686  002106                     __ptext9:
  4687                           	opt stack 0
  4688  002106                     _led_dec:
  4689                           	opt stack 27
  4690                           
  4691                           ;led7.c: 108: DD1=vh/10;
  4692                           
  4693                           ;incstack = 0
  4694  002106  C02A  F023         	movff	led_dec@vh,___lwdiv@dividend
  4695  00210A  C02B  F024         	movff	led_dec@vh+1,___lwdiv@dividend+1
  4696  00210E  0E00               	movlw	0
  4697  002110  6E26               	movwf	___lwdiv@divisor+1,c
  4698  002112  0E0A               	movlw	10
  4699  002114  6E25               	movwf	___lwdiv@divisor,c
  4700  002116  ECA4  F011         	call	___lwdiv	;wreg free
  4701  00211A  C023  F046         	movff	?___lwdiv,_DD1
  4702  00211E  C024  F047         	movff	?___lwdiv+1,_DD1+1
  4703                           
  4704                           ;led7.c: 109: DD2=vh%10;
  4705  002122  C02A  F012         	movff	led_dec@vh,___lwmod@dividend
  4706  002126  C02B  F013         	movff	led_dec@vh+1,___lwmod@dividend+1
  4707  00212A  0E00               	movlw	0
  4708  00212C  6E15               	movwf	___lwmod@divisor+1,c
  4709  00212E  0E0A               	movlw	10
  4710  002130  6E14               	movwf	___lwmod@divisor,c
  4711  002132  ECCD  F011         	call	___lwmod	;wreg free
  4712  002136  C012  F048         	movff	?___lwmod,_DD2
  4713  00213A  C013  F049         	movff	?___lwmod+1,_DD2+1
  4714                           
  4715                           ;led7.c: 110: DD3=vl/10;
  4716  00213E  C02C  F023         	movff	led_dec@vl,___lwdiv@dividend
  4717  002142  C02D  F024         	movff	led_dec@vl+1,___lwdiv@dividend+1
  4718  002146  0E00               	movlw	0
  4719  002148  6E26               	movwf	___lwdiv@divisor+1,c
  4720  00214A  0E0A               	movlw	10
  4721  00214C  6E25               	movwf	___lwdiv@divisor,c
  4722  00214E  ECA4  F011         	call	___lwdiv	;wreg free
  4723  002152  C023  F092         	movff	?___lwdiv,_DD3
  4724  002156  C024  F093         	movff	?___lwdiv+1,_DD3+1
  4725                           
  4726                           ;led7.c: 111: DD4=vl%10;
  4727  00215A  C02C  F012         	movff	led_dec@vl,___lwmod@dividend
  4728  00215E  C02D  F013         	movff	led_dec@vl+1,___lwmod@dividend+1
  4729  002162  0E00               	movlw	0
  4730  002164  6E15               	movwf	___lwmod@divisor+1,c
  4731  002166  0E0A               	movlw	10
  4732  002168  6E14               	movwf	___lwmod@divisor,c
  4733  00216A  ECCD  F011         	call	___lwmod	;wreg free
  4734  00216E  C012  F094         	movff	?___lwmod,_DD4
  4735  002172  C013  F095         	movff	?___lwmod+1,_DD4+1
  4736  002176  0012               	return	
  4737  002178                     __end_of_led_dec:
  4738                           	opt stack 0
  4739                           tblptru	equ	0xFF8
  4740                           tblptrh	equ	0xFF7
  4741                           tblptrl	equ	0xFF6
  4742                           tablat	equ	0xFF5
  4743                           prodl	equ	0xFF3
  4744                           intcon	equ	0xFF2
  4745                           intcon2	equ	0xFF1
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1l	equ	0xFE1
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function ___lwmod *****************
  4753 ;; Defined at:
  4754 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  dividend        2   17[COMRAM] unsigned int 
  4757 ;;  divisor         2   19[COMRAM] unsigned int 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  counter         1   21[COMRAM] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  2   17[COMRAM] unsigned int 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4769 ;;      Params:         4       0       0       0       0       0       0       0       0
  4770 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4772 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4773 ;;Total ram usage:        5 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    2
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_led_dec
  4780 ;;		_main
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text10
  4785  00239A                     __ptext10:
  4786                           	opt stack 0
  4787  00239A                     ___lwmod:
  4788                           	opt stack 27
  4789                           
  4790                           ;incstack = 0
  4791  00239A  5015               	movf	___lwmod@divisor+1,w,c
  4792  00239C  1014               	iorwf	___lwmod@divisor,w,c
  4793  00239E  B4D8               	btfsc	status,2,c
  4794  0023A0  D018               	goto	l941
  4795  0023A2  0E01               	movlw	1
  4796  0023A4  6E16               	movwf	___lwmod@counter,c
  4797  0023A6  D004               	goto	l2950
  4798  0023A8                     l2948:
  4799  0023A8  90D8               	bcf	status,0,c
  4800  0023AA  3614               	rlcf	___lwmod@divisor,f,c
  4801  0023AC  3615               	rlcf	___lwmod@divisor+1,f,c
  4802  0023AE  2A16               	incf	___lwmod@counter,f,c
  4803  0023B0                     l2950:
  4804  0023B0  AE15               	btfss	___lwmod@divisor+1,7,c
  4805  0023B2  D7FA               	goto	l2948
  4806  0023B4                     l2952:
  4807  0023B4  5014               	movf	___lwmod@divisor,w,c
  4808  0023B6  5C12               	subwf	___lwmod@dividend,w,c
  4809  0023B8  5015               	movf	___lwmod@divisor+1,w,c
  4810  0023BA  5813               	subwfb	___lwmod@dividend+1,w,c
  4811  0023BC  A0D8               	btfss	status,0,c
  4812  0023BE  D004               	goto	l2956
  4813  0023C0  5014               	movf	___lwmod@divisor,w,c
  4814  0023C2  5E12               	subwf	___lwmod@dividend,f,c
  4815  0023C4  5015               	movf	___lwmod@divisor+1,w,c
  4816  0023C6  5A13               	subwfb	___lwmod@dividend+1,f,c
  4817  0023C8                     l2956:
  4818  0023C8  90D8               	bcf	status,0,c
  4819  0023CA  3215               	rrcf	___lwmod@divisor+1,f,c
  4820  0023CC  3214               	rrcf	___lwmod@divisor,f,c
  4821  0023CE  2E16               	decfsz	___lwmod@counter,f,c
  4822  0023D0  D7F1               	goto	l2952
  4823  0023D2                     l941:
  4824  0023D2  C012  F012         	movff	___lwmod@dividend,?___lwmod
  4825  0023D6  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
  4826  0023DA  0012               	return	
  4827  0023DC                     __end_of___lwmod:
  4828                           	opt stack 0
  4829                           tblptru	equ	0xFF8
  4830                           tblptrh	equ	0xFF7
  4831                           tblptrl	equ	0xFF6
  4832                           tablat	equ	0xFF5
  4833                           prodl	equ	0xFF3
  4834                           intcon	equ	0xFF2
  4835                           intcon2	equ	0xFF1
  4836                           postinc0	equ	0xFEE
  4837                           wreg	equ	0xFE8
  4838                           postdec1	equ	0xFE5
  4839                           fsr1l	equ	0xFE1
  4840                           status	equ	0xFD8
  4841                           
  4842 ;; *************** function ___lwdiv *****************
  4843 ;; Defined at:
  4844 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  dividend        2   34[COMRAM] unsigned int 
  4847 ;;  divisor         2   36[COMRAM] unsigned int 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  quotient        2   39[COMRAM] unsigned int 
  4850 ;;  counter         1   38[COMRAM] unsigned char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  2   34[COMRAM] unsigned int 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4860 ;;      Params:         4       0       0       0       0       0       0       0       0
  4861 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4863 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4864 ;;Total ram usage:        7 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    2
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_led_dec
  4871 ;;		_main
  4872 ;;		_pwm0
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text11
  4877  002348                     __ptext11:
  4878                           	opt stack 0
  4879  002348                     ___lwdiv:
  4880                           	opt stack 27
  4881                           
  4882                           ;incstack = 0
  4883  002348  0E00               	movlw	0
  4884  00234A  6E29               	movwf	___lwdiv@quotient+1,c
  4885  00234C  0E00               	movlw	0
  4886  00234E  6E28               	movwf	___lwdiv@quotient,c
  4887  002350  5026               	movf	___lwdiv@divisor+1,w,c
  4888  002352  1025               	iorwf	___lwdiv@divisor,w,c
  4889  002354  B4D8               	btfsc	status,2,c
  4890  002356  D01C               	goto	l931
  4891  002358  0E01               	movlw	1
  4892  00235A  6E27               	movwf	___lwdiv@counter,c
  4893  00235C  D004               	goto	l2930
  4894  00235E                     l2928:
  4895  00235E  90D8               	bcf	status,0,c
  4896  002360  3625               	rlcf	___lwdiv@divisor,f,c
  4897  002362  3626               	rlcf	___lwdiv@divisor+1,f,c
  4898  002364  2A27               	incf	___lwdiv@counter,f,c
  4899  002366                     l2930:
  4900  002366  AE26               	btfss	___lwdiv@divisor+1,7,c
  4901  002368  D7FA               	goto	l2928
  4902  00236A                     l2932:
  4903  00236A  90D8               	bcf	status,0,c
  4904  00236C  3628               	rlcf	___lwdiv@quotient,f,c
  4905  00236E  3629               	rlcf	___lwdiv@quotient+1,f,c
  4906  002370  5025               	movf	___lwdiv@divisor,w,c
  4907  002372  5C23               	subwf	___lwdiv@dividend,w,c
  4908  002374  5026               	movf	___lwdiv@divisor+1,w,c
  4909  002376  5824               	subwfb	___lwdiv@dividend+1,w,c
  4910  002378  A0D8               	btfss	status,0,c
  4911  00237A  D005               	goto	l2940
  4912  00237C  5025               	movf	___lwdiv@divisor,w,c
  4913  00237E  5E23               	subwf	___lwdiv@dividend,f,c
  4914  002380  5026               	movf	___lwdiv@divisor+1,w,c
  4915  002382  5A24               	subwfb	___lwdiv@dividend+1,f,c
  4916  002384  8028               	bsf	___lwdiv@quotient,0,c
  4917  002386                     l2940:
  4918  002386  90D8               	bcf	status,0,c
  4919  002388  3226               	rrcf	___lwdiv@divisor+1,f,c
  4920  00238A  3225               	rrcf	___lwdiv@divisor,f,c
  4921  00238C  2E27               	decfsz	___lwdiv@counter,f,c
  4922  00238E  D7ED               	goto	l2932
  4923  002390                     l931:
  4924  002390  C028  F023         	movff	___lwdiv@quotient,?___lwdiv
  4925  002394  C029  F024         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4926  002398  0012               	return	
  4927  00239A                     __end_of___lwdiv:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           intcon2	equ	0xFF1
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           postdec1	equ	0xFE5
  4939                           fsr1l	equ	0xFE1
  4940                           status	equ	0xFD8
  4941                           
  4942 ;; *************** function _fn111 *****************
  4943 ;; Defined at:
  4944 ;;		line 85 in file "virtual_2.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  2   30[COMRAM] unsigned int 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4958 ;;      Params:         2       0       0       0       0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4960 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4961 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4962 ;;Total ram usage:        4 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    3
  4965 ;; This function calls:
  4966 ;;		___lldiv
  4967 ;;		___wmul
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text12
  4974  001AA0                     __ptext12:
  4975                           	opt stack 0
  4976  001AA0                     _fn111:
  4977                           	opt stack 27
  4978                           
  4979                           ;virtual_2.c: 88: T1CON=0xa1;
  4980                           
  4981                           ;incstack = 0
  4982  001AA0  0EA1               	movlw	161
  4983  001AA2  6ECD               	movwf	4045,c	;volatile
  4984                           
  4985                           ;virtual_2.c: 89: HH=LL=t41=t42=t43=0;
  4986  001AA4  0E00               	movlw	0
  4987  001AA6  0100               	movlb	0	; () banked
  4988  001AA8  6F85               	movwf	(_t43+1)& (0+255),b
  4989  001AAA  0E00               	movlw	0
  4990  001AAC  0100               	movlb	0	; () banked
  4991  001AAE  6F84               	movwf	_t43& (0+255),b
  4992  001AB0  C084  F03C         	movff	_t43,_t42
  4993  001AB4  C085  F03D         	movff	_t43+1,_t42+1
  4994  001AB8  C03C  F082         	movff	_t42,_t41
  4995  001ABC  C03D  F083         	movff	_t42+1,_t41+1
  4996  001AC0  C082  F038         	movff	_t41,_LL
  4997  001AC4  C083  F039         	movff	_t41+1,_LL+1
  4998  001AC8  C038  F036         	movff	_LL,_HH
  4999  001ACC  C039  F037         	movff	_LL+1,_HH+1
  5000                           
  5001                           ;virtual_2.c: 90: ADCON1=0x0f;
  5002  001AD0  0E0F               	movlw	15
  5003  001AD2  6EC1               	movwf	4033,c	;volatile
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;virtual_2.c: 91: TRISC1=1;
  5007  001AD4  8294               	bsf	3988,1,c	;volatile
  5008                           
  5009                           ;virtual_2.c: 93: while(RC1==1){i++;if(i>10000000)break;}i=0;
  5010  001AD6  D010               	goto	l271
  5011  001AD8                     l3038:
  5012  001AD8  0E01               	movlw	1
  5013  001ADA  2632               	addwf	_i,f,c
  5014  001ADC  0E00               	movlw	0
  5015  001ADE  2233               	addwfc	_i+1,f,c
  5016  001AE0  2234               	addwfc	_i+2,f,c
  5017  001AE2  2235               	addwfc	_i+3,f,c
  5018  001AE4  0E81               	movlw	129
  5019  001AE6  5C32               	subwf	_i,w,c
  5020  001AE8  0E96               	movlw	150
  5021  001AEA  5833               	subwfb	_i+1,w,c
  5022  001AEC  0E98               	movlw	152
  5023  001AEE  5834               	subwfb	_i+2,w,c
  5024  001AF0  0E00               	movlw	0
  5025  001AF2  5835               	subwfb	_i+3,w,c
  5026  001AF4  B0D8               	btfsc	status,0,c
  5027  001AF6  D002               	goto	l3042
  5028  001AF8                     l271:
  5029  001AF8  B282               	btfsc	3970,1,c	;volatile
  5030  001AFA  D7EE               	goto	l3038
  5031  001AFC                     l3042:
  5032  001AFC  0E00               	movlw	0
  5033  001AFE  6E32               	movwf	_i,c
  5034  001B00  0E00               	movlw	0
  5035  001B02  6E33               	movwf	_i+1,c
  5036  001B04  0E00               	movlw	0
  5037  001B06  6E34               	movwf	_i+2,c
  5038  001B08  0E00               	movlw	0
  5039  001B0A  6E35               	movwf	_i+3,c
  5040                           
  5041                           ;virtual_2.c: 95: while(RC1==0){i++;if(i>10000000)break;}i=0;
  5042  001B0C  D010               	goto	l275
  5043  001B0E                     l3044:
  5044  001B0E  0E01               	movlw	1
  5045  001B10  2632               	addwf	_i,f,c
  5046  001B12  0E00               	movlw	0
  5047  001B14  2233               	addwfc	_i+1,f,c
  5048  001B16  2234               	addwfc	_i+2,f,c
  5049  001B18  2235               	addwfc	_i+3,f,c
  5050  001B1A  0E81               	movlw	129
  5051  001B1C  5C32               	subwf	_i,w,c
  5052  001B1E  0E96               	movlw	150
  5053  001B20  5833               	subwfb	_i+1,w,c
  5054  001B22  0E98               	movlw	152
  5055  001B24  5834               	subwfb	_i+2,w,c
  5056  001B26  0E00               	movlw	0
  5057  001B28  5835               	subwfb	_i+3,w,c
  5058  001B2A  B0D8               	btfsc	status,0,c
  5059  001B2C  D002               	goto	l3048
  5060  001B2E                     l275:
  5061  001B2E  A282               	btfss	3970,1,c	;volatile
  5062  001B30  D7EE               	goto	l3044
  5063  001B32                     l3048:
  5064  001B32  0E00               	movlw	0
  5065  001B34  6E32               	movwf	_i,c
  5066  001B36  0E00               	movlw	0
  5067  001B38  6E33               	movwf	_i+1,c
  5068  001B3A  0E00               	movlw	0
  5069  001B3C  6E34               	movwf	_i+2,c
  5070  001B3E  0E00               	movlw	0
  5071  001B40  6E35               	movwf	_i+3,c
  5072                           
  5073                           ;virtual_2.c: 96: t41=TMR1L;
  5074  001B42  0100               	movlb	0	; () banked
  5075  001B44  CFCE F082          	movff	4046,_t41	;volatile
  5076  001B48  0100               	movlb	0	; () banked
  5077  001B4A  6B83               	clrf	(_t41+1)& (0+255),b
  5078                           
  5079                           ;virtual_2.c: 97: t41+=(unsigned int)TMR1H<<8;
  5080  001B4C  50CF               	movf	4047,w,c	;volatile
  5081  001B4E  0100               	movlb	0	; () banked
  5082  001B50  2783               	addwf	(_t41+1)& (0+255),f,b
  5083                           
  5084                           ;virtual_2.c: 99: while(RC1==1){i++;if(i>10000000)break;}i=0;
  5085  001B52  D010               	goto	l279
  5086  001B54                     l3052:
  5087  001B54  0E01               	movlw	1
  5088  001B56  2632               	addwf	_i,f,c
  5089  001B58  0E00               	movlw	0
  5090  001B5A  2233               	addwfc	_i+1,f,c
  5091  001B5C  2234               	addwfc	_i+2,f,c
  5092  001B5E  2235               	addwfc	_i+3,f,c
  5093  001B60  0E81               	movlw	129
  5094  001B62  5C32               	subwf	_i,w,c
  5095  001B64  0E96               	movlw	150
  5096  001B66  5833               	subwfb	_i+1,w,c
  5097  001B68  0E98               	movlw	152
  5098  001B6A  5834               	subwfb	_i+2,w,c
  5099  001B6C  0E00               	movlw	0
  5100  001B6E  5835               	subwfb	_i+3,w,c
  5101  001B70  B0D8               	btfsc	status,0,c
  5102  001B72  D002               	goto	l3056
  5103  001B74                     l279:
  5104  001B74  B282               	btfsc	3970,1,c	;volatile
  5105  001B76  D7EE               	goto	l3052
  5106  001B78                     l3056:
  5107  001B78  0E00               	movlw	0
  5108  001B7A  6E32               	movwf	_i,c
  5109  001B7C  0E00               	movlw	0
  5110  001B7E  6E33               	movwf	_i+1,c
  5111  001B80  0E00               	movlw	0
  5112  001B82  6E34               	movwf	_i+2,c
  5113  001B84  0E00               	movlw	0
  5114  001B86  6E35               	movwf	_i+3,c
  5115                           
  5116                           ;virtual_2.c: 100: t42=TMR1L;
  5117  001B88  CFCE F03C          	movff	4046,_t42	;volatile
  5118  001B8C  6A3D               	clrf	_t42+1,c
  5119                           
  5120                           ;virtual_2.c: 101: t42+=(unsigned int)TMR1H<<8;
  5121  001B8E  50CF               	movf	4047,w,c	;volatile
  5122  001B90  263D               	addwf	_t42+1,f,c
  5123                           
  5124                           ;virtual_2.c: 103: while(RC1==0){i++;if(i>10000000)break;}i=0;
  5125  001B92  D010               	goto	l283
  5126  001B94                     l3060:
  5127  001B94  0E01               	movlw	1
  5128  001B96  2632               	addwf	_i,f,c
  5129  001B98  0E00               	movlw	0
  5130  001B9A  2233               	addwfc	_i+1,f,c
  5131  001B9C  2234               	addwfc	_i+2,f,c
  5132  001B9E  2235               	addwfc	_i+3,f,c
  5133  001BA0  0E81               	movlw	129
  5134  001BA2  5C32               	subwf	_i,w,c
  5135  001BA4  0E96               	movlw	150
  5136  001BA6  5833               	subwfb	_i+1,w,c
  5137  001BA8  0E98               	movlw	152
  5138  001BAA  5834               	subwfb	_i+2,w,c
  5139  001BAC  0E00               	movlw	0
  5140  001BAE  5835               	subwfb	_i+3,w,c
  5141  001BB0  B0D8               	btfsc	status,0,c
  5142  001BB2  D002               	goto	l3064
  5143  001BB4                     l283:
  5144  001BB4  A282               	btfss	3970,1,c	;volatile
  5145  001BB6  D7EE               	goto	l3060
  5146  001BB8                     l3064:
  5147  001BB8  0E00               	movlw	0
  5148  001BBA  6E32               	movwf	_i,c
  5149  001BBC  0E00               	movlw	0
  5150  001BBE  6E33               	movwf	_i+1,c
  5151  001BC0  0E00               	movlw	0
  5152  001BC2  6E34               	movwf	_i+2,c
  5153  001BC4  0E00               	movlw	0
  5154  001BC6  6E35               	movwf	_i+3,c
  5155                           
  5156                           ;virtual_2.c: 104: t43=TMR1L;
  5157  001BC8  0100               	movlb	0	; () banked
  5158  001BCA  CFCE F084          	movff	4046,_t43	;volatile
  5159  001BCE  0100               	movlb	0	; () banked
  5160  001BD0  6B85               	clrf	(_t43+1)& (0+255),b
  5161                           
  5162                           ;virtual_2.c: 105: t43+=(unsigned int)TMR1H<<8;
  5163  001BD2  50CF               	movf	4047,w,c	;volatile
  5164  001BD4  0100               	movlb	0	; () banked
  5165  001BD6  2785               	addwf	(_t43+1)& (0+255),f,b
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;virtual_2.c: 107: LL=t43-t42;
  5169  001BD8  C03C  F021         	movff	_t42,??_fn111
  5170  001BDC  C03D  F022         	movff	_t42+1,??_fn111+1
  5171  001BE0  1E21               	comf	??_fn111,f,c
  5172  001BE2  1E22               	comf	??_fn111+1,f,c
  5173  001BE4  4A21               	infsnz	??_fn111,f,c
  5174  001BE6  2A22               	incf	??_fn111+1,f,c
  5175  001BE8  0100               	movlb	0	; () banked
  5176  001BEA  5184               	movf	_t43& (0+255),w,b
  5177  001BEC  2421               	addwf	??_fn111,w,c
  5178  001BEE  6E38               	movwf	_LL,c
  5179  001BF0  0100               	movlb	0	; () banked
  5180  001BF2  5185               	movf	(_t43+1)& (0+255),w,b
  5181  001BF4  2022               	addwfc	??_fn111+1,w,c
  5182  001BF6  6E39               	movwf	_LL+1,c
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;virtual_2.c: 108: HH=t42-t41;
  5186  001BF8  0100               	movlb	0	; () banked
  5187  001BFA  C082  F021         	movff	_t41,??_fn111
  5188  001BFE  0100               	movlb	0	; () banked
  5189  001C00  C083  F022         	movff	_t41+1,??_fn111+1
  5190  001C04  1E21               	comf	??_fn111,f,c
  5191  001C06  1E22               	comf	??_fn111+1,f,c
  5192  001C08  4A21               	infsnz	??_fn111,f,c
  5193  001C0A  2A22               	incf	??_fn111+1,f,c
  5194  001C0C  503C               	movf	_t42,w,c
  5195  001C0E  2421               	addwf	??_fn111,w,c
  5196  001C10  6E36               	movwf	_HH,c
  5197  001C12  503D               	movf	_t42+1,w,c
  5198  001C14  2022               	addwfc	??_fn111+1,w,c
  5199  001C16  6E37               	movwf	_HH+1,c
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;virtual_2.c: 109: LL+=HH;
  5203  001C18  5036               	movf	_HH,w,c
  5204  001C1A  2638               	addwf	_LL,f,c
  5205  001C1C  5037               	movf	_HH+1,w,c
  5206  001C1E  2239               	addwfc	_LL+1,f,c
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;virtual_2.c: 110: HH*=100;
  5210  001C20  C036  F012         	movff	_HH,___wmul@multiplier
  5211  001C24  C037  F013         	movff	_HH+1,___wmul@multiplier+1
  5212  001C28  0E00               	movlw	0
  5213  001C2A  6E15               	movwf	___wmul@multiplicand+1,c
  5214  001C2C  0E64               	movlw	100
  5215  001C2E  6E14               	movwf	___wmul@multiplicand,c
  5216  001C30  ECEE  F011         	call	___wmul	;wreg free
  5217  001C34  C012  F036         	movff	?___wmul,_HH
  5218  001C38  C013  F037         	movff	?___wmul+1,_HH+1
  5219                           
  5220                           ;virtual_2.c: 111: HH+=LL/2;
  5221  001C3C  90D8               	bcf	status,0,c
  5222  001C3E  3039               	rrcf	_LL+1,w,c
  5223  001C40  6E22               	movwf	(??_fn111+1)& (0+255),c
  5224  001C42  3038               	rrcf	_LL,w,c
  5225  001C44  6E21               	movwf	??_fn111& (0+255),c
  5226  001C46  5021               	movf	??_fn111,w,c
  5227  001C48  2636               	addwf	_HH,f,c
  5228  001C4A  5022               	movf	??_fn111+1,w,c
  5229  001C4C  2237               	addwfc	_HH+1,f,c
  5230                           
  5231                           ;virtual_2.c: 112: ff=1000000;
  5232  001C4E  0E40               	movlw	64
  5233  001C50  0100               	movlb	0	; () banked
  5234  001C52  6F74               	movwf	_ff& (0+255),b
  5235  001C54  0E42               	movlw	66
  5236  001C56  0100               	movlb	0	; () banked
  5237  001C58  6F75               	movwf	(_ff+1)& (0+255),b
  5238  001C5A  0E0F               	movlw	15
  5239  001C5C  0100               	movlb	0	; () banked
  5240  001C5E  6F76               	movwf	(_ff+2)& (0+255),b
  5241  001C60  0E00               	movlw	0
  5242  001C62  0100               	movlb	0	; () banked
  5243  001C64  6F77               	movwf	(_ff+3)& (0+255),b
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;virtual_2.c: 113: ff/=LL;
  5247  001C66  C074  F012         	movff	_ff,___lldiv@dividend
  5248  001C6A  C075  F013         	movff	_ff+1,___lldiv@dividend+1
  5249  001C6E  C076  F014         	movff	_ff+2,___lldiv@dividend+2
  5250  001C72  C077  F015         	movff	_ff+3,___lldiv@dividend+3
  5251  001C76  C038  F016         	movff	_LL,___lldiv@divisor
  5252  001C7A  C039  F017         	movff	_LL+1,___lldiv@divisor+1
  5253  001C7E  6A18               	clrf	___lldiv@divisor+2,c
  5254  001C80  6A19               	clrf	___lldiv@divisor+3,c
  5255  001C82  EC02  F010         	call	___lldiv	;wreg free
  5256  001C86  C012  F074         	movff	?___lldiv,_ff
  5257  001C8A  C013  F075         	movff	?___lldiv+1,_ff+1
  5258  001C8E  C014  F076         	movff	?___lldiv+2,_ff+2
  5259  001C92  C015  F077         	movff	?___lldiv+3,_ff+3
  5260                           
  5261                           ;virtual_2.c: 114: return ff;
  5262  001C96  C074  F01F         	movff	_ff,?_fn111
  5263  001C9A  C075  F020         	movff	_ff+1,?_fn111+1
  5264  001C9E  0012               	return	
  5265  001CA0                     __end_of_fn111:
  5266                           	opt stack 0
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           prodl	equ	0xFF3
  5272                           intcon	equ	0xFF2
  5273                           intcon2	equ	0xFF1
  5274                           postinc0	equ	0xFEE
  5275                           wreg	equ	0xFE8
  5276                           postdec1	equ	0xFE5
  5277                           fsr1l	equ	0xFE1
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function ___wmul *****************
  5281 ;; Defined at:
  5282 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  multiplier      2   17[COMRAM] unsigned int 
  5285 ;;  multiplicand    2   19[COMRAM] unsigned int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  product         2   21[COMRAM] unsigned int 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  2   17[COMRAM] unsigned int 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0, prodl, prodh
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5297 ;;      Params:         4       0       0       0       0       0       0       0       0
  5298 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5300 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5301 ;;Total ram usage:        6 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    2
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_fn111
  5308 ;;		_pwm0
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text13
  5313  0023DC                     __ptext13:
  5314                           	opt stack 0
  5315  0023DC                     ___wmul:
  5316                           	opt stack 27
  5317                           
  5318                           ;incstack = 0
  5319  0023DC  5012               	movf	___wmul@multiplier,w,c
  5320  0023DE  0214               	mulwf	___wmul@multiplicand,c
  5321  0023E0  CFF3 F016          	movff	prodl,___wmul@product
  5322  0023E4  CFF4 F017          	movff	prodh,___wmul@product+1
  5323  0023E8  5012               	movf	___wmul@multiplier,w,c
  5324  0023EA  0215               	mulwf	___wmul@multiplicand+1,c
  5325  0023EC  50F3               	movf	prodl,w,c
  5326  0023EE  2617               	addwf	___wmul@product+1,f,c
  5327  0023F0  5013               	movf	___wmul@multiplier+1,w,c
  5328  0023F2  0214               	mulwf	___wmul@multiplicand,c
  5329  0023F4  50F3               	movf	prodl,w,c
  5330  0023F6  2617               	addwf	___wmul@product+1,f,c
  5331  0023F8  C016  F012         	movff	___wmul@product,?___wmul
  5332  0023FC  C017  F013         	movff	___wmul@product+1,?___wmul+1
  5333  002400  0012               	return	
  5334  002402                     __end_of___wmul:
  5335                           	opt stack 0
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           intcon	equ	0xFF2
  5343                           intcon2	equ	0xFF1
  5344                           postinc0	equ	0xFEE
  5345                           wreg	equ	0xFE8
  5346                           postdec1	equ	0xFE5
  5347                           fsr1l	equ	0xFE1
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function ___lldiv *****************
  5351 ;; Defined at:
  5352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  dividend        4   17[COMRAM] unsigned long 
  5355 ;;  divisor         4   21[COMRAM] unsigned long 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  quotient        4   25[COMRAM] unsigned long 
  5358 ;;  counter         1   29[COMRAM] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  4   17[COMRAM] unsigned long 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5368 ;;      Params:         8       0       0       0       0       0       0       0       0
  5369 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5371 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5372 ;;Total ram usage:       13 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    2
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_fn111
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text14
  5383  002004                     __ptext14:
  5384                           	opt stack 0
  5385  002004                     ___lldiv:
  5386                           	opt stack 27
  5387                           
  5388                           ;incstack = 0
  5389  002004  0E00               	movlw	0
  5390  002006  6E1A               	movwf	___lldiv@quotient,c
  5391  002008  0E00               	movlw	0
  5392  00200A  6E1B               	movwf	___lldiv@quotient+1,c
  5393  00200C  0E00               	movlw	0
  5394  00200E  6E1C               	movwf	___lldiv@quotient+2,c
  5395  002010  0E00               	movlw	0
  5396  002012  6E1D               	movwf	___lldiv@quotient+3,c
  5397  002014  5019               	movf	___lldiv@divisor+3,w,c
  5398  002016  1016               	iorwf	___lldiv@divisor,w,c
  5399  002018  1017               	iorwf	___lldiv@divisor+1,w,c
  5400  00201A  1018               	iorwf	___lldiv@divisor+2,w,c
  5401  00201C  B4D8               	btfsc	status,2,c
  5402  00201E  D02A               	goto	l868
  5403  002020  0E01               	movlw	1
  5404  002022  6E1E               	movwf	___lldiv@counter,c
  5405  002024  D006               	goto	l2908
  5406  002026                     l2906:
  5407  002026  90D8               	bcf	status,0,c
  5408  002028  3616               	rlcf	___lldiv@divisor,f,c
  5409  00202A  3617               	rlcf	___lldiv@divisor+1,f,c
  5410  00202C  3618               	rlcf	___lldiv@divisor+2,f,c
  5411  00202E  3619               	rlcf	___lldiv@divisor+3,f,c
  5412  002030  2A1E               	incf	___lldiv@counter,f,c
  5413  002032                     l2908:
  5414  002032  AE19               	btfss	___lldiv@divisor+3,7,c
  5415  002034  D7F8               	goto	l2906
  5416  002036                     l2910:
  5417  002036  90D8               	bcf	status,0,c
  5418  002038  361A               	rlcf	___lldiv@quotient,f,c
  5419  00203A  361B               	rlcf	___lldiv@quotient+1,f,c
  5420  00203C  361C               	rlcf	___lldiv@quotient+2,f,c
  5421  00203E  361D               	rlcf	___lldiv@quotient+3,f,c
  5422  002040  5016               	movf	___lldiv@divisor,w,c
  5423  002042  5C12               	subwf	___lldiv@dividend,w,c
  5424  002044  5017               	movf	___lldiv@divisor+1,w,c
  5425  002046  5813               	subwfb	___lldiv@dividend+1,w,c
  5426  002048  5018               	movf	___lldiv@divisor+2,w,c
  5427  00204A  5814               	subwfb	___lldiv@dividend+2,w,c
  5428  00204C  5019               	movf	___lldiv@divisor+3,w,c
  5429  00204E  5815               	subwfb	___lldiv@dividend+3,w,c
  5430  002050  A0D8               	btfss	status,0,c
  5431  002052  D009               	goto	l2918
  5432  002054  5016               	movf	___lldiv@divisor,w,c
  5433  002056  5E12               	subwf	___lldiv@dividend,f,c
  5434  002058  5017               	movf	___lldiv@divisor+1,w,c
  5435  00205A  5A13               	subwfb	___lldiv@dividend+1,f,c
  5436  00205C  5018               	movf	___lldiv@divisor+2,w,c
  5437  00205E  5A14               	subwfb	___lldiv@dividend+2,f,c
  5438  002060  5019               	movf	___lldiv@divisor+3,w,c
  5439  002062  5A15               	subwfb	___lldiv@dividend+3,f,c
  5440  002064  801A               	bsf	___lldiv@quotient,0,c
  5441  002066                     l2918:
  5442  002066  90D8               	bcf	status,0,c
  5443  002068  3219               	rrcf	___lldiv@divisor+3,f,c
  5444  00206A  3218               	rrcf	___lldiv@divisor+2,f,c
  5445  00206C  3217               	rrcf	___lldiv@divisor+1,f,c
  5446  00206E  3216               	rrcf	___lldiv@divisor,f,c
  5447  002070  2E1E               	decfsz	___lldiv@counter,f,c
  5448  002072  D7E1               	goto	l2910
  5449  002074                     l868:
  5450  002074  C01A  F012         	movff	___lldiv@quotient,?___lldiv
  5451  002078  C01B  F013         	movff	___lldiv@quotient+1,?___lldiv+1
  5452  00207C  C01C  F014         	movff	___lldiv@quotient+2,?___lldiv+2
  5453  002080  C01D  F015         	movff	___lldiv@quotient+3,?___lldiv+3
  5454  002084  0012               	return	
  5455  002086                     __end_of___lldiv:
  5456                           	opt stack 0
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           intcon	equ	0xFF2
  5464                           intcon2	equ	0xFF1
  5465                           postinc0	equ	0xFEE
  5466                           wreg	equ	0xFE8
  5467                           postdec1	equ	0xFE5
  5468                           fsr1l	equ	0xFE1
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _delay_ms *****************
  5472 ;; Defined at:
  5473 ;;		line 45 in file "virtual_2.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  ms              2   17[COMRAM] unsigned int 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5487 ;;      Params:         2       0       0       0       0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5490 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5491 ;;Total ram usage:        2 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    2
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text15
  5502  002424                     __ptext15:
  5503                           	opt stack 0
  5504  002424                     _delay_ms:
  5505                           	opt stack 28
  5506                           
  5507                           ;virtual_2.c: 47: ms>>=1;ms+=tick;
  5508                           
  5509                           ;incstack = 0
  5510  002424  90D8               	bcf	status,0,c
  5511  002426  3213               	rrcf	delay_ms@ms+1,f,c
  5512  002428  3212               	rrcf	delay_ms@ms,f,c
  5513  00242A  503E               	movf	_tick,w,c	;volatile
  5514  00242C  2612               	addwf	delay_ms@ms,f,c
  5515  00242E  503F               	movf	_tick+1,w,c	;volatile
  5516  002430  2213               	addwfc	delay_ms@ms+1,f,c
  5517  002432                     l2982:
  5518  002432  503F               	movf	_tick+1,w,c	;volatile
  5519  002434  1813               	xorwf	delay_ms@ms+1,w,c
  5520  002436  E102               	bnz	u2735
  5521  002438  503E               	movf	_tick,w,c	;volatile
  5522  00243A  1812               	xorwf	delay_ms@ms,w,c
  5523  00243C                     u2735:
  5524  00243C  B4D8               	btfsc	status,2,c
  5525  00243E  0012               	return	
  5526  002440  D7F8               	goto	l2982
  5527  002442                     __end_of_delay_ms:
  5528                           	opt stack 0
  5529                           tblptru	equ	0xFF8
  5530                           tblptrh	equ	0xFF7
  5531                           tblptrl	equ	0xFF6
  5532                           tablat	equ	0xFF5
  5533                           prodh	equ	0xFF4
  5534                           prodl	equ	0xFF3
  5535                           intcon	equ	0xFF2
  5536                           intcon2	equ	0xFF1
  5537                           postinc0	equ	0xFEE
  5538                           wreg	equ	0xFE8
  5539                           postdec1	equ	0xFE5
  5540                           fsr1l	equ	0xFE1
  5541                           status	equ	0xFD8
  5542                           
  5543 ;; *************** function _adc_get *****************
  5544 ;; Defined at:
  5545 ;;		line 5 in file "adc.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  n               1    wreg     unsigned char 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  n               1   19[COMRAM] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  2   17[COMRAM] unsigned int 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5559 ;;      Params:         2       0       0       0       0       0       0       0       0
  5560 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5562 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5563 ;;Total ram usage:        3 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    2
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_main
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text16
  5574  00224A                     __ptext16:
  5575                           	opt stack 0
  5576  00224A                     _adc_get:
  5577                           	opt stack 28
  5578                           
  5579                           ;incstack = 0
  5580                           ;adc_get@n stored from wreg
  5581  00224A  6E14               	movwf	adc_get@n,c
  5582                           
  5583                           ;adc.c: 7: ADCON1=0x0c;ADCON2=0xa5;
  5584  00224C  0E0C               	movlw	12
  5585  00224E  6EC1               	movwf	4033,c	;volatile
  5586  002250  0EA5               	movlw	165
  5587  002252  6EC0               	movwf	4032,c	;volatile
  5588                           
  5589                           ;adc.c: 8: switch(n)
  5590  002254  D013               	goto	l2970
  5591  002256                     l2962:
  5592  002256  0E0C               	movlw	12
  5593  002258  6EC1               	movwf	4033,c	;volatile
  5594  00225A  0EA5               	movlw	165
  5595  00225C  6EC0               	movwf	4032,c	;volatile
  5596  00225E  0E01               	movlw	1
  5597  002260  D00B               	goto	L2
  5598  002262                     l2964:
  5599  002262  0E0C               	movlw	12
  5600  002264  6EC1               	movwf	4033,c	;volatile
  5601  002266  0EA5               	movlw	165
  5602  002268  6EC0               	movwf	4032,c	;volatile
  5603  00226A  0E05               	movlw	5
  5604  00226C  D005               	goto	L2
  5605  00226E                     l2966:
  5606  00226E  0E0C               	movlw	12
  5607  002270  6EC1               	movwf	4033,c	;volatile
  5608  002272  0EA5               	movlw	165
  5609  002274  6EC0               	movwf	4032,c	;volatile
  5610  002276  0E09               	movlw	9
  5611  002278                     L2:
  5612  002278  6EC2               	movwf	4034,c	;volatile
  5613  00227A  D00A               	goto	l15
  5614  00227C                     l2970:
  5615  00227C  5014               	movf	adc_get@n,w,c
  5616                           
  5617                           ; Switch size 1, requested type "space"
  5618                           ; Number of cases is 3, Range of values is 0 to 2
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte           10     6 (average)
  5622                           ;	Chosen strategy is simple_byte
  5623  00227E  0A00               	xorlw	0	; case 0
  5624  002280  B4D8               	btfsc	status,2,c
  5625  002282  D7E9               	goto	l2962
  5626  002284  0A01               	xorlw	1	; case 1
  5627  002286  B4D8               	btfsc	status,2,c
  5628  002288  D7EC               	goto	l2964
  5629  00228A  0A03               	xorlw	3	; case 2
  5630  00228C  B4D8               	btfsc	status,2,c
  5631  00228E  D7EF               	goto	l2966
  5632  002290                     l15:
  5633                           
  5634                           ;adc.c: 28: GO=1;
  5635  002290  82C2               	bsf	4034,1,c	;volatile
  5636  002292                     l18:
  5637  002292  B2C2               	btfsc	4034,1,c	;volatile
  5638  002294  D7FE               	goto	l18
  5639                           
  5640                           ;adc.c: 30: return ADRES;
  5641  002296  CFC3 F012          	movff	4035,?_adc_get	;volatile
  5642  00229A  CFC4 F013          	movff	4036,?_adc_get+1	;volatile
  5643  00229E  0012               	return	
  5644  0022A0                     __end_of_adc_get:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           intcon	equ	0xFF2
  5653                           intcon2	equ	0xFF1
  5654                           postinc0	equ	0xFEE
  5655                           wreg	equ	0xFE8
  5656                           postdec1	equ	0xFE5
  5657                           fsr1l	equ	0xFE1
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function ___almod *****************
  5661 ;; Defined at:
  5662 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\almod.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  dividend        4   17[COMRAM] long 
  5665 ;;  divisor         4   21[COMRAM] long 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  sign            1   26[COMRAM] unsigned char 
  5668 ;;  counter         1   25[COMRAM] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  4   17[COMRAM] long 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5678 ;;      Params:         8       0       0       0       0       0       0       0       0
  5679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5681 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5682 ;;Total ram usage:       10 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    2
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text17
  5693  001E84                     __ptext17:
  5694                           	opt stack 0
  5695  001E84                     ___almod:
  5696                           	opt stack 28
  5697                           
  5698                           ;incstack = 0
  5699  001E84  0E00               	movlw	0
  5700  001E86  6E1B               	movwf	___almod@sign,c
  5701  001E88  5015               	movf	___almod@dividend+3,w,c
  5702  001E8A  0A80               	xorlw	128
  5703  001E8C  0F80               	addlw	128
  5704  001E8E  E108               	bnz	u2915
  5705  001E90  0E00               	movlw	0
  5706  001E92  5C14               	subwf	___almod@dividend+2,w,c
  5707  001E94  E105               	bnz	u2915
  5708  001E96  0E00               	movlw	0
  5709  001E98  5C13               	subwf	___almod@dividend+1,w,c
  5710  001E9A  E102               	bnz	u2915
  5711  001E9C  0E00               	movlw	0
  5712  001E9E  5C12               	subwf	___almod@dividend,w,c
  5713  001EA0                     u2915:
  5714  001EA0  B0D8               	btfsc	status,0,c
  5715  001EA2  D00A               	goto	l3138
  5716  001EA4  1E15               	comf	___almod@dividend+3,f,c
  5717  001EA6  1E14               	comf	___almod@dividend+2,f,c
  5718  001EA8  1E13               	comf	___almod@dividend+1,f,c
  5719  001EAA  6C12               	negf	___almod@dividend,c
  5720  001EAC  0E00               	movlw	0
  5721  001EAE  2213               	addwfc	___almod@dividend+1,f,c
  5722  001EB0  2214               	addwfc	___almod@dividend+2,f,c
  5723  001EB2  2215               	addwfc	___almod@dividend+3,f,c
  5724  001EB4  0E01               	movlw	1
  5725  001EB6  6E1B               	movwf	___almod@sign,c
  5726  001EB8                     l3138:
  5727  001EB8  5019               	movf	___almod@divisor+3,w,c
  5728  001EBA  0A80               	xorlw	128
  5729  001EBC  0F80               	addlw	128
  5730  001EBE  E108               	bnz	u2925
  5731  001EC0  0E00               	movlw	0
  5732  001EC2  5C18               	subwf	___almod@divisor+2,w,c
  5733  001EC4  E105               	bnz	u2925
  5734  001EC6  0E00               	movlw	0
  5735  001EC8  5C17               	subwf	___almod@divisor+1,w,c
  5736  001ECA  E102               	bnz	u2925
  5737  001ECC  0E00               	movlw	0
  5738  001ECE  5C16               	subwf	___almod@divisor,w,c
  5739  001ED0                     u2925:
  5740  001ED0  B0D8               	btfsc	status,0,c
  5741  001ED2  D008               	goto	l3142
  5742  001ED4  1E19               	comf	___almod@divisor+3,f,c
  5743  001ED6  1E18               	comf	___almod@divisor+2,f,c
  5744  001ED8  1E17               	comf	___almod@divisor+1,f,c
  5745  001EDA  6C16               	negf	___almod@divisor,c
  5746  001EDC  0E00               	movlw	0
  5747  001EDE  2217               	addwfc	___almod@divisor+1,f,c
  5748  001EE0  2218               	addwfc	___almod@divisor+2,f,c
  5749  001EE2  2219               	addwfc	___almod@divisor+3,f,c
  5750  001EE4                     l3142:
  5751  001EE4  5019               	movf	___almod@divisor+3,w,c
  5752  001EE6  1016               	iorwf	___almod@divisor,w,c
  5753  001EE8  1017               	iorwf	___almod@divisor+1,w,c
  5754  001EEA  1018               	iorwf	___almod@divisor+2,w,c
  5755  001EEC  B4D8               	btfsc	status,2,c
  5756  001EEE  D024               	goto	l3158
  5757  001EF0  0E01               	movlw	1
  5758  001EF2  6E1A               	movwf	___almod@counter,c
  5759  001EF4  D006               	goto	l3148
  5760  001EF6                     l3146:
  5761  001EF6  90D8               	bcf	status,0,c
  5762  001EF8  3616               	rlcf	___almod@divisor,f,c
  5763  001EFA  3617               	rlcf	___almod@divisor+1,f,c
  5764  001EFC  3618               	rlcf	___almod@divisor+2,f,c
  5765  001EFE  3619               	rlcf	___almod@divisor+3,f,c
  5766  001F00  2A1A               	incf	___almod@counter,f,c
  5767  001F02                     l3148:
  5768  001F02  AE19               	btfss	___almod@divisor+3,7,c
  5769  001F04  D7F8               	goto	l3146
  5770  001F06                     l3150:
  5771  001F06  5016               	movf	___almod@divisor,w,c
  5772  001F08  5C12               	subwf	___almod@dividend,w,c
  5773  001F0A  5017               	movf	___almod@divisor+1,w,c
  5774  001F0C  5813               	subwfb	___almod@dividend+1,w,c
  5775  001F0E  5018               	movf	___almod@divisor+2,w,c
  5776  001F10  5814               	subwfb	___almod@dividend+2,w,c
  5777  001F12  5019               	movf	___almod@divisor+3,w,c
  5778  001F14  5815               	subwfb	___almod@dividend+3,w,c
  5779  001F16  A0D8               	btfss	status,0,c
  5780  001F18  D008               	goto	l3154
  5781  001F1A  5016               	movf	___almod@divisor,w,c
  5782  001F1C  5E12               	subwf	___almod@dividend,f,c
  5783  001F1E  5017               	movf	___almod@divisor+1,w,c
  5784  001F20  5A13               	subwfb	___almod@dividend+1,f,c
  5785  001F22  5018               	movf	___almod@divisor+2,w,c
  5786  001F24  5A14               	subwfb	___almod@dividend+2,f,c
  5787  001F26  5019               	movf	___almod@divisor+3,w,c
  5788  001F28  5A15               	subwfb	___almod@dividend+3,f,c
  5789  001F2A                     l3154:
  5790  001F2A  90D8               	bcf	status,0,c
  5791  001F2C  3219               	rrcf	___almod@divisor+3,f,c
  5792  001F2E  3218               	rrcf	___almod@divisor+2,f,c
  5793  001F30  3217               	rrcf	___almod@divisor+1,f,c
  5794  001F32  3216               	rrcf	___almod@divisor,f,c
  5795  001F34  2E1A               	decfsz	___almod@counter,f,c
  5796  001F36  D7E7               	goto	l3150
  5797  001F38                     l3158:
  5798  001F38  501B               	movf	___almod@sign,w,c
  5799  001F3A  B4D8               	btfsc	status,2,c
  5800  001F3C  D008               	goto	l3162
  5801  001F3E  1E15               	comf	___almod@dividend+3,f,c
  5802  001F40  1E14               	comf	___almod@dividend+2,f,c
  5803  001F42  1E13               	comf	___almod@dividend+1,f,c
  5804  001F44  6C12               	negf	___almod@dividend,c
  5805  001F46  0E00               	movlw	0
  5806  001F48  2213               	addwfc	___almod@dividend+1,f,c
  5807  001F4A  2214               	addwfc	___almod@dividend+2,f,c
  5808  001F4C  2215               	addwfc	___almod@dividend+3,f,c
  5809  001F4E                     l3162:
  5810  001F4E  C012  F012         	movff	___almod@dividend,?___almod
  5811  001F52  C013  F013         	movff	___almod@dividend+1,?___almod+1
  5812  001F56  C014  F014         	movff	___almod@dividend+2,?___almod+2
  5813  001F5A  C015  F015         	movff	___almod@dividend+3,?___almod+3
  5814  001F5E  0012               	return	
  5815  001F60                     __end_of___almod:
  5816                           	opt stack 0
  5817                           tblptru	equ	0xFF8
  5818                           tblptrh	equ	0xFF7
  5819                           tblptrl	equ	0xFF6
  5820                           tablat	equ	0xFF5
  5821                           prodh	equ	0xFF4
  5822                           prodl	equ	0xFF3
  5823                           intcon	equ	0xFF2
  5824                           intcon2	equ	0xFF1
  5825                           postinc0	equ	0xFEE
  5826                           wreg	equ	0xFE8
  5827                           postdec1	equ	0xFE5
  5828                           fsr1l	equ	0xFE1
  5829                           status	equ	0xFD8
  5830                           
  5831 ;; *************** function ___aldiv *****************
  5832 ;; Defined at:
  5833 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  dividend        4   17[COMRAM] long 
  5836 ;;  divisor         4   21[COMRAM] long 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  quotient        4   27[COMRAM] long 
  5839 ;;  sign            1   26[COMRAM] unsigned char 
  5840 ;;  counter         1   25[COMRAM] unsigned char 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  4   17[COMRAM] long 
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5850 ;;      Params:         8       0       0       0       0       0       0       0       0
  5851 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5853 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5854 ;;Total ram usage:       14 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    2
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_main
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text18
  5865  001CA0                     __ptext18:
  5866                           	opt stack 0
  5867  001CA0                     ___aldiv:
  5868                           	opt stack 28
  5869                           
  5870                           ;incstack = 0
  5871  001CA0  0E00               	movlw	0
  5872  001CA2  6E1B               	movwf	___aldiv@sign,c
  5873  001CA4  5019               	movf	___aldiv@divisor+3,w,c
  5874  001CA6  0A80               	xorlw	128
  5875  001CA8  0F80               	addlw	128
  5876  001CAA  E108               	bnz	u2855
  5877  001CAC  0E00               	movlw	0
  5878  001CAE  5C18               	subwf	___aldiv@divisor+2,w,c
  5879  001CB0  E105               	bnz	u2855
  5880  001CB2  0E00               	movlw	0
  5881  001CB4  5C17               	subwf	___aldiv@divisor+1,w,c
  5882  001CB6  E102               	bnz	u2855
  5883  001CB8  0E00               	movlw	0
  5884  001CBA  5C16               	subwf	___aldiv@divisor,w,c
  5885  001CBC                     u2855:
  5886  001CBC  B0D8               	btfsc	status,0,c
  5887  001CBE  D00A               	goto	l3094
  5888  001CC0  1E19               	comf	___aldiv@divisor+3,f,c
  5889  001CC2  1E18               	comf	___aldiv@divisor+2,f,c
  5890  001CC4  1E17               	comf	___aldiv@divisor+1,f,c
  5891  001CC6  6C16               	negf	___aldiv@divisor,c
  5892  001CC8  0E00               	movlw	0
  5893  001CCA  2217               	addwfc	___aldiv@divisor+1,f,c
  5894  001CCC  2218               	addwfc	___aldiv@divisor+2,f,c
  5895  001CCE  2219               	addwfc	___aldiv@divisor+3,f,c
  5896  001CD0  0E01               	movlw	1
  5897  001CD2  6E1B               	movwf	___aldiv@sign,c
  5898  001CD4                     l3094:
  5899  001CD4  5015               	movf	___aldiv@dividend+3,w,c
  5900  001CD6  0A80               	xorlw	128
  5901  001CD8  0F80               	addlw	128
  5902  001CDA  E108               	bnz	u2865
  5903  001CDC  0E00               	movlw	0
  5904  001CDE  5C14               	subwf	___aldiv@dividend+2,w,c
  5905  001CE0  E105               	bnz	u2865
  5906  001CE2  0E00               	movlw	0
  5907  001CE4  5C13               	subwf	___aldiv@dividend+1,w,c
  5908  001CE6  E102               	bnz	u2865
  5909  001CE8  0E00               	movlw	0
  5910  001CEA  5C12               	subwf	___aldiv@dividend,w,c
  5911  001CEC                     u2865:
  5912  001CEC  B0D8               	btfsc	status,0,c
  5913  001CEE  D00A               	goto	l3100
  5914  001CF0  1E15               	comf	___aldiv@dividend+3,f,c
  5915  001CF2  1E14               	comf	___aldiv@dividend+2,f,c
  5916  001CF4  1E13               	comf	___aldiv@dividend+1,f,c
  5917  001CF6  6C12               	negf	___aldiv@dividend,c
  5918  001CF8  0E00               	movlw	0
  5919  001CFA  2213               	addwfc	___aldiv@dividend+1,f,c
  5920  001CFC  2214               	addwfc	___aldiv@dividend+2,f,c
  5921  001CFE  2215               	addwfc	___aldiv@dividend+3,f,c
  5922  001D00  0E01               	movlw	1
  5923  001D02  1A1B               	xorwf	___aldiv@sign,f,c
  5924  001D04                     l3100:
  5925  001D04  0E00               	movlw	0
  5926  001D06  6E1C               	movwf	___aldiv@quotient,c
  5927  001D08  0E00               	movlw	0
  5928  001D0A  6E1D               	movwf	___aldiv@quotient+1,c
  5929  001D0C  0E00               	movlw	0
  5930  001D0E  6E1E               	movwf	___aldiv@quotient+2,c
  5931  001D10  0E00               	movlw	0
  5932  001D12  6E1F               	movwf	___aldiv@quotient+3,c
  5933  001D14  5019               	movf	___aldiv@divisor+3,w,c
  5934  001D16  1016               	iorwf	___aldiv@divisor,w,c
  5935  001D18  1017               	iorwf	___aldiv@divisor+1,w,c
  5936  001D1A  1018               	iorwf	___aldiv@divisor+2,w,c
  5937  001D1C  B4D8               	btfsc	status,2,c
  5938  001D1E  D02A               	goto	l3122
  5939  001D20  0E01               	movlw	1
  5940  001D22  6E1A               	movwf	___aldiv@counter,c
  5941  001D24  D006               	goto	l3108
  5942  001D26                     l3106:
  5943  001D26  90D8               	bcf	status,0,c
  5944  001D28  3616               	rlcf	___aldiv@divisor,f,c
  5945  001D2A  3617               	rlcf	___aldiv@divisor+1,f,c
  5946  001D2C  3618               	rlcf	___aldiv@divisor+2,f,c
  5947  001D2E  3619               	rlcf	___aldiv@divisor+3,f,c
  5948  001D30  2A1A               	incf	___aldiv@counter,f,c
  5949  001D32                     l3108:
  5950  001D32  AE19               	btfss	___aldiv@divisor+3,7,c
  5951  001D34  D7F8               	goto	l3106
  5952  001D36                     l3110:
  5953  001D36  90D8               	bcf	status,0,c
  5954  001D38  361C               	rlcf	___aldiv@quotient,f,c
  5955  001D3A  361D               	rlcf	___aldiv@quotient+1,f,c
  5956  001D3C  361E               	rlcf	___aldiv@quotient+2,f,c
  5957  001D3E  361F               	rlcf	___aldiv@quotient+3,f,c
  5958  001D40  5016               	movf	___aldiv@divisor,w,c
  5959  001D42  5C12               	subwf	___aldiv@dividend,w,c
  5960  001D44  5017               	movf	___aldiv@divisor+1,w,c
  5961  001D46  5813               	subwfb	___aldiv@dividend+1,w,c
  5962  001D48  5018               	movf	___aldiv@divisor+2,w,c
  5963  001D4A  5814               	subwfb	___aldiv@dividend+2,w,c
  5964  001D4C  5019               	movf	___aldiv@divisor+3,w,c
  5965  001D4E  5815               	subwfb	___aldiv@dividend+3,w,c
  5966  001D50  A0D8               	btfss	status,0,c
  5967  001D52  D009               	goto	l3118
  5968  001D54  5016               	movf	___aldiv@divisor,w,c
  5969  001D56  5E12               	subwf	___aldiv@dividend,f,c
  5970  001D58  5017               	movf	___aldiv@divisor+1,w,c
  5971  001D5A  5A13               	subwfb	___aldiv@dividend+1,f,c
  5972  001D5C  5018               	movf	___aldiv@divisor+2,w,c
  5973  001D5E  5A14               	subwfb	___aldiv@dividend+2,f,c
  5974  001D60  5019               	movf	___aldiv@divisor+3,w,c
  5975  001D62  5A15               	subwfb	___aldiv@dividend+3,f,c
  5976  001D64  801C               	bsf	___aldiv@quotient,0,c
  5977  001D66                     l3118:
  5978  001D66  90D8               	bcf	status,0,c
  5979  001D68  3219               	rrcf	___aldiv@divisor+3,f,c
  5980  001D6A  3218               	rrcf	___aldiv@divisor+2,f,c
  5981  001D6C  3217               	rrcf	___aldiv@divisor+1,f,c
  5982  001D6E  3216               	rrcf	___aldiv@divisor,f,c
  5983  001D70  2E1A               	decfsz	___aldiv@counter,f,c
  5984  001D72  D7E1               	goto	l3110
  5985  001D74                     l3122:
  5986  001D74  501B               	movf	___aldiv@sign,w,c
  5987  001D76  B4D8               	btfsc	status,2,c
  5988  001D78  D008               	goto	l3126
  5989  001D7A  1E1F               	comf	___aldiv@quotient+3,f,c
  5990  001D7C  1E1E               	comf	___aldiv@quotient+2,f,c
  5991  001D7E  1E1D               	comf	___aldiv@quotient+1,f,c
  5992  001D80  6C1C               	negf	___aldiv@quotient,c
  5993  001D82  0E00               	movlw	0
  5994  001D84  221D               	addwfc	___aldiv@quotient+1,f,c
  5995  001D86  221E               	addwfc	___aldiv@quotient+2,f,c
  5996  001D88  221F               	addwfc	___aldiv@quotient+3,f,c
  5997  001D8A                     l3126:
  5998  001D8A  C01C  F012         	movff	___aldiv@quotient,?___aldiv
  5999  001D8E  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
  6000  001D92  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
  6001  001D96  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
  6002  001D9A  0012               	return	
  6003  001D9C                     __end_of___aldiv:
  6004                           	opt stack 0
  6005                           tblptru	equ	0xFF8
  6006                           tblptrh	equ	0xFF7
  6007                           tblptrl	equ	0xFF6
  6008                           tablat	equ	0xFF5
  6009                           prodh	equ	0xFF4
  6010                           prodl	equ	0xFF3
  6011                           intcon	equ	0xFF2
  6012                           intcon2	equ	0xFF1
  6013                           postinc0	equ	0xFEE
  6014                           wreg	equ	0xFE8
  6015                           postdec1	equ	0xFE5
  6016                           fsr1l	equ	0xFE1
  6017                           status	equ	0xFD8
  6018                           
  6019 ;; *************** function _hisr *****************
  6020 ;; Defined at:
  6021 ;;		line 37 in file "virtual_2.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;		None
  6026 ;; Return value:  Size  Location     Type
  6027 ;;		None               void
  6028 ;; Registers used:
  6029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6035 ;;      Params:         0       0       0       0       0       0       0       0       0
  6036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6037 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6038 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6039 ;;Total ram usage:       14 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    1
  6042 ;; This function calls:
  6043 ;;		_led_scan
  6044 ;; This function is called by:
  6045 ;;		Interrupt level 2
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	intcode
  6050  000008                     __pintcode:
  6051                           	opt stack 0
  6052  000008                     _hisr:
  6053                           	opt stack 27
  6054                           
  6055                           ;incstack = 0
  6056  000008  CFFA F004          	movff	pclath,??_hisr
  6057  00000C  CFFB F005          	movff	pclatu,??_hisr+1
  6058  000010  CFE9 F006          	movff	fsr0l,??_hisr+2
  6059  000014  ED43  F010         	call	int_func,f	;refresh shadow registers
  6060                           pclatu	equ	0xFFB
  6061                           pclath	equ	0xFFA
  6062                           tblptru	equ	0xFF8
  6063                           tblptrh	equ	0xFF7
  6064                           tblptrl	equ	0xFF6
  6065                           tablat	equ	0xFF5
  6066                           prodh	equ	0xFF4
  6067                           prodl	equ	0xFF3
  6068                           intcon	equ	0xFF2
  6069                           intcon2	equ	0xFF1
  6070                           postinc0	equ	0xFEE
  6071                           fsr0l	equ	0xFE9
  6072                           wreg	equ	0xFE8
  6073                           postdec1	equ	0xFE5
  6074                           fsr1l	equ	0xFE1
  6075                           status	equ	0xFD8
  6076                           
  6077                           	psect	intcode_body
  6078  002086                     __pintcode_body:
  6079                           	opt stack 27
  6080  002086                     int_func:
  6081                           	opt stack 27
  6082  002086  0006               	pop		; remove dummy address from shadow register refresh
  6083  002088  CFEA F007          	movff	fsr0h,??_hisr+3
  6084  00208C  CFE1 F008          	movff	fsr1l,??_hisr+4
  6085  002090  CFE2 F009          	movff	fsr1h,??_hisr+5
  6086  002094  CFD9 F00A          	movff	fsr2l,??_hisr+6
  6087  002098  CFDA F00B          	movff	fsr2h,??_hisr+7
  6088  00209C  CFF3 F00C          	movff	prodl,??_hisr+8
  6089  0020A0  CFF4 F00D          	movff	prodh,??_hisr+9
  6090  0020A4  CFF6 F00E          	movff	tblptrl,??_hisr+10
  6091  0020A8  CFF7 F00F          	movff	tblptrh,??_hisr+11
  6092  0020AC  CFF8 F010          	movff	tblptru,??_hisr+12
  6093  0020B0  CFF5 F011          	movff	tablat,??_hisr+13
  6094                           
  6095                           ;virtual_2.c: 39: TMR0IF=0;
  6096  0020B4  94F2               	bcf	intcon,2,c	;volatile
  6097                           
  6098                           ;virtual_2.c: 40: TMR0H=(65536-8000)>>8;
  6099  0020B6  0EE0               	movlw	224
  6100  0020B8  6ED7               	movwf	4055,c	;volatile
  6101                           
  6102                           ;virtual_2.c: 41: TMR0L=(65536-8000);
  6103  0020BA  0EC0               	movlw	192
  6104  0020BC  6ED6               	movwf	4054,c	;volatile
  6105                           
  6106                           ;virtual_2.c: 42: led_scan();
  6107  0020BE  ECCE  F00E         	call	_led_scan	;wreg free
  6108                           
  6109                           ;virtual_2.c: 43: tick++;t2++;
  6110  0020C2  4A3E               	infsnz	_tick,f,c	;volatile
  6111  0020C4  2A3F               	incf	_tick+1,f,c	;volatile
  6112  0020C6  0100               	movlb	0	; () banked
  6113  0020C8  4B80               	infsnz	_t2& (0+255),f,b	;volatile
  6114  0020CA  2B81               	incf	(_t2+1)& (0+255),f,b	;volatile
  6115                           
  6116                           ; BSR set to: 0
  6117  0020CC  C011  FFF5         	movff	??_hisr+13,tablat
  6118  0020D0  C010  FFF8         	movff	??_hisr+12,tblptru
  6119  0020D4  C00F  FFF7         	movff	??_hisr+11,tblptrh
  6120  0020D8  C00E  FFF6         	movff	??_hisr+10,tblptrl
  6121  0020DC  C00D  FFF4         	movff	??_hisr+9,prodh
  6122  0020E0  C00C  FFF3         	movff	??_hisr+8,prodl
  6123  0020E4  C00B  FFDA         	movff	??_hisr+7,fsr2h
  6124  0020E8  C00A  FFD9         	movff	??_hisr+6,fsr2l
  6125  0020EC  C009  FFE2         	movff	??_hisr+5,fsr1h
  6126  0020F0  C008  FFE1         	movff	??_hisr+4,fsr1l
  6127  0020F4  C007  FFEA         	movff	??_hisr+3,fsr0h
  6128  0020F8  C006  FFE9         	movff	??_hisr+2,fsr0l
  6129  0020FC  C005  FFFB         	movff	??_hisr+1,pclatu
  6130  002100  C004  FFFA         	movff	??_hisr,pclath
  6131  002104  0011               	retfie		f
  6132  002106                     __end_of_hisr:
  6133                           	opt stack 0
  6134                           pclatu	equ	0xFFB
  6135                           pclath	equ	0xFFA
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           intcon	equ	0xFF2
  6143                           intcon2	equ	0xFF1
  6144                           postinc0	equ	0xFEE
  6145                           fsr0h	equ	0xFEA
  6146                           fsr0l	equ	0xFE9
  6147                           wreg	equ	0xFE8
  6148                           postdec1	equ	0xFE5
  6149                           fsr1h	equ	0xFE2
  6150                           fsr1l	equ	0xFE1
  6151                           fsr2h	equ	0xFDA
  6152                           fsr2l	equ	0xFD9
  6153                           status	equ	0xFD8
  6154                           
  6155 ;; *************** function _led_scan *****************
  6156 ;; Defined at:
  6157 ;;		line 20 in file "led7.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;		None
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  dd              1    2[COMRAM] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;		None               void
  6164 ;; Registers used:
  6165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6171 ;;      Params:         0       0       0       0       0       0       0       0       0
  6172 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6173 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6174 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6175 ;;Total ram usage:        3 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_hisr
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text20
  6185  001D9C                     __ptext20:
  6186                           	opt stack 0
  6187  001D9C                     _led_scan:
  6188                           	opt stack 27
  6189                           
  6190                           ;led7.c: 22: char dd=0;
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;incstack = 0
  6194  001D9C  0E00               	movlw	0
  6195  001D9E  6E03               	movwf	led_scan@dd,c
  6196                           
  6197                           ;led7.c: 23: LATB3=1;LATB2=1;LATB1=1;LATB0=1;
  6198  001DA0  868A               	bsf	3978,3,c	;volatile
  6199  001DA2  848A               	bsf	3978,2,c	;volatile
  6200  001DA4  828A               	bsf	3978,1,c	;volatile
  6201  001DA6  808A               	bsf	3978,0,c	;volatile
  6202                           
  6203                           ;led7.c: 24: switch(a)
  6204  001DA8  D03E               	goto	i2l2098
  6205  001DAA                     i2l89:
  6206  001DAA  968A               	bcf	3978,3,c	;volatile
  6207  001DAC  0100               	movlb	0	; () banked
  6208  001DAE  0E86               	movlw	low _led
  6209  001DB0  2446               	addwf	_DD1,w,c
  6210  001DB2  6ED9               	movwf	fsr2l,c
  6211  001DB4  0100               	movlb	0	; () banked
  6212  001DB6  0E00               	movlw	high _led
  6213  001DB8  2047               	addwfc	_DD1+1,w,c
  6214  001DBA  6EDA               	movwf	fsr2h,c
  6215  001DBC  50DF               	movf	indf2,w,c
  6216  001DBE  6E8C               	movwf	3980,c	;volatile
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;led7.c: 27: if(dot&8){dd=1;}
  6220  001DC0  A644               	btfss	_dot,3,c
  6221  001DC2  D046               	goto	i2l2100
  6222  001DC4  D02D               	goto	i2u148_40
  6223  001DC6                     i2l92:
  6224  001DC6  948A               	bcf	3978,2,c	;volatile
  6225  001DC8  0100               	movlb	0	; () banked
  6226  001DCA  0E86               	movlw	low _led
  6227  001DCC  2448               	addwf	_DD2,w,c
  6228  001DCE  6ED9               	movwf	fsr2l,c
  6229  001DD0  0100               	movlb	0	; () banked
  6230  001DD2  0E00               	movlw	high _led
  6231  001DD4  2049               	addwfc	_DD2+1,w,c
  6232  001DD6  6EDA               	movwf	fsr2h,c
  6233  001DD8  50DF               	movf	indf2,w,c
  6234  001DDA  6E8C               	movwf	3980,c	;volatile
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;led7.c: 30: if(dot&4){dd=1;}
  6238  001DDC  A444               	btfss	_dot,2,c
  6239  001DDE  D038               	goto	i2l2100
  6240  001DE0  D01F               	goto	i2u148_40
  6241  001DE2                     i2l94:
  6242  001DE2  928A               	bcf	3978,1,c	;volatile
  6243  001DE4  0100               	movlb	0	; () banked
  6244  001DE6  0E86               	movlw	low _led
  6245  001DE8  0100               	movlb	0	; () banked
  6246  001DEA  2592               	addwf	_DD3& (0+255),w,b
  6247  001DEC  6ED9               	movwf	fsr2l,c
  6248  001DEE  0100               	movlb	0	; () banked
  6249  001DF0  0E00               	movlw	high _led
  6250  001DF2  0100               	movlb	0	; () banked
  6251  001DF4  2193               	addwfc	(_DD3+1)& (0+255),w,b
  6252  001DF6  6EDA               	movwf	fsr2h,c
  6253  001DF8  50DF               	movf	indf2,w,c
  6254  001DFA  6E8C               	movwf	3980,c	;volatile
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;led7.c: 33: if(dot&2){dd=1;}
  6258  001DFC  A244               	btfss	_dot,1,c
  6259  001DFE  D028               	goto	i2l2100
  6260  001E00  D00F               	goto	i2u148_40
  6261  001E02                     i2l96:
  6262  001E02  908A               	bcf	3978,0,c	;volatile
  6263  001E04  0100               	movlb	0	; () banked
  6264  001E06  0E86               	movlw	low _led
  6265  001E08  0100               	movlb	0	; () banked
  6266  001E0A  2594               	addwf	_DD4& (0+255),w,b
  6267  001E0C  6ED9               	movwf	fsr2l,c
  6268  001E0E  0100               	movlb	0	; () banked
  6269  001E10  0E00               	movlw	high _led
  6270  001E12  0100               	movlb	0	; () banked
  6271  001E14  2195               	addwfc	(_DD4+1)& (0+255),w,b
  6272  001E16  6EDA               	movwf	fsr2h,c
  6273  001E18  50DF               	movf	indf2,w,c
  6274  001E1A  6E8C               	movwf	3980,c	;volatile
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;led7.c: 36: if(dot&1){dd=1;}
  6278  001E1C  A044               	btfss	_dot,0,c
  6279  001E1E  D018               	goto	i2l2100
  6280  001E20                     i2u148_40:
  6281                           
  6282                           ; BSR set to: 0
  6283  001E20  0E01               	movlw	1
  6284  001E22  6E03               	movwf	led_scan@dd,c
  6285  001E24  D015               	goto	i2l2100
  6286  001E26                     i2l2098:
  6287  001E26  C03A  F001         	movff	_a,??_led_scan
  6288  001E2A  C03B  F002         	movff	_a+1,??_led_scan+1
  6289                           
  6290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6291                           ; Switch size 1, requested type "space"
  6292                           ; Number of cases is 1, Range of values is 0 to 0
  6293                           ; switch strategies available:
  6294                           ; Name         Instructions Cycles
  6295                           ; simple_byte            4     3 (average)
  6296                           ;	Chosen strategy is simple_byte
  6297  001E2E  5002               	movf	??_led_scan+1,w,c
  6298  001E30  0A00               	xorlw	0	; case 0
  6299  001E32  A4D8               	btfss	status,2,c
  6300  001E34  D00D               	goto	i2l2100
  6301                           
  6302                           ; Switch size 1, requested type "space"
  6303                           ; Number of cases is 4, Range of values is 0 to 3
  6304                           ; switch strategies available:
  6305                           ; Name         Instructions Cycles
  6306                           ; simple_byte           13     7 (average)
  6307                           ;	Chosen strategy is simple_byte
  6308  001E36  5001               	movf	??_led_scan,w,c
  6309  001E38  0A00               	xorlw	0	; case 0
  6310  001E3A  B4D8               	btfsc	status,2,c
  6311  001E3C  D7B6               	goto	i2l89
  6312  001E3E  0A01               	xorlw	1	; case 1
  6313  001E40  B4D8               	btfsc	status,2,c
  6314  001E42  D7C1               	goto	i2l92
  6315  001E44  0A03               	xorlw	3	; case 2
  6316  001E46  B4D8               	btfsc	status,2,c
  6317  001E48  D7CC               	goto	i2l94
  6318  001E4A  0A01               	xorlw	1	; case 3
  6319  001E4C  B4D8               	btfsc	status,2,c
  6320  001E4E  D7D9               	goto	i2l96
  6321  001E50                     i2l2100:
  6322                           
  6323                           ;led7.c: 39: if(dd==1)LATD7=0;
  6324  001E50  0403               	decf	led_scan@dd,w,c
  6325  001E52  B4D8               	btfsc	status,2,c
  6326  001E54  9E8C               	bcf	3980,7,c	;volatile
  6327                           
  6328                           ;led7.c: 40: if(light!=18){a++;}else{a=18;}
  6329  001E56  504A               	movf	_light,w,c
  6330  001E58  0A12               	xorlw	18
  6331  001E5A  104B               	iorwf	_light+1,w,c
  6332  001E5C  B4D8               	btfsc	status,2,c
  6333  001E5E  D003               	goto	i2l2108
  6334  001E60  4A3A               	infsnz	_a,f,c
  6335  001E62  2A3B               	incf	_a+1,f,c
  6336  001E64  D004               	goto	i2l2110
  6337  001E66                     i2l2108:
  6338  001E66  0E00               	movlw	0
  6339  001E68  6E3B               	movwf	_a+1,c
  6340  001E6A  0E12               	movlw	18
  6341  001E6C  6E3A               	movwf	_a,c
  6342  001E6E                     i2l2110:
  6343                           
  6344                           ;led7.c: 42: if(a>light)a=0;
  6345  001E6E  503A               	movf	_a,w,c
  6346  001E70  5C4A               	subwf	_light,w,c
  6347  001E72  503B               	movf	_a+1,w,c
  6348  001E74  584B               	subwfb	_light+1,w,c
  6349  001E76  B0D8               	btfsc	status,0,c
  6350  001E78  D004               	goto	i2l102
  6351  001E7A  0E00               	movlw	0
  6352  001E7C  6E3B               	movwf	_a+1,c
  6353  001E7E  0E00               	movlw	0
  6354  001E80  6E3A               	movwf	_a,c
  6355  001E82                     i2l102:
  6356  001E82  0012               	return	
  6357  001E84                     __end_of_led_scan:
  6358                           	opt stack 0
  6359  0000                     pclatu	equ	0xFFB
  6360                           pclath	equ	0xFFA
  6361                           tblptru	equ	0xFF8
  6362                           tblptrh	equ	0xFF7
  6363                           tblptrl	equ	0xFF6
  6364                           tablat	equ	0xFF5
  6365                           prodh	equ	0xFF4
  6366                           prodl	equ	0xFF3
  6367                           intcon	equ	0xFF2
  6368                           intcon2	equ	0xFF1
  6369                           postinc0	equ	0xFEE
  6370                           fsr0h	equ	0xFEA
  6371                           fsr0l	equ	0xFE9
  6372                           wreg	equ	0xFE8
  6373                           postdec1	equ	0xFE5
  6374                           fsr1h	equ	0xFE2
  6375                           fsr1l	equ	0xFE1
  6376                           indf2	equ	0xFDF
  6377                           fsr2h	equ	0xFDA
  6378                           fsr2l	equ	0xFD9
  6379                           status	equ	0xFD8
  6380                           pclatu	equ	0xFFB
  6381                           pclath	equ	0xFFA
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           intcon2	equ	0xFF1
  6390                           postinc0	equ	0xFEE
  6391                           fsr0h	equ	0xFEA
  6392                           fsr0l	equ	0xFE9
  6393                           wreg	equ	0xFE8
  6394                           postdec1	equ	0xFE5
  6395                           fsr1h	equ	0xFE2
  6396                           fsr1l	equ	0xFE1
  6397                           indf2	equ	0xFDF
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402                           	psect	rparam
  6403  0000                     pclatu	equ	0xFFB
  6404                           pclath	equ	0xFFA
  6405                           tblptru	equ	0xFF8
  6406                           tblptrh	equ	0xFF7
  6407                           tblptrl	equ	0xFF6
  6408                           tablat	equ	0xFF5
  6409                           prodh	equ	0xFF4
  6410                           prodl	equ	0xFF3
  6411                           intcon	equ	0xFF2
  6412                           intcon2	equ	0xFF1
  6413                           postinc0	equ	0xFEE
  6414                           fsr0h	equ	0xFEA
  6415                           fsr0l	equ	0xFE9
  6416                           wreg	equ	0xFE8
  6417                           postdec1	equ	0xFE5
  6418                           fsr1h	equ	0xFE2
  6419                           fsr1l	equ	0xFE1
  6420                           indf2	equ	0xFDF
  6421                           fsr2h	equ	0xFDA
  6422                           fsr2l	equ	0xFD9
  6423                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         32
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      75
    BANK0           160     20      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_leddec
    _motor2->___awdiv
    _motor1->___awdiv
    _motor->___awdiv
    _leddec->___lwdiv
    _led_dec->___lwdiv
    ___lwdiv->_fn111
    _fn111->___lldiv

Critical Paths under _hisr in COMRAM

    _hisr->_led_scan

Critical Paths under _main in BANK0

    None.

Critical Paths under _hisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hisr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   36077
                                              0 BANK0     20    20      0
                            ___aldiv
                            ___almod
                            ___lwdiv
                            ___lwmod
                            _adc_get
                           _delay_ms
                              _fn111
                            _led_dec
                            _led_dot
                             _leddec
                              _motor
                             _motor1
                             _motor2
 ---------------------------------------------------------------------------------
 (1) _motor2                                               2     0      2    1191
                                             25 COMRAM     2     0      2
                       _Delay100TCYx
                        _Delay1KTCYx
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _motor1                                               4     2      2    1225
                                             25 COMRAM     4     2      2
                       _Delay100TCYx
                        _Delay1KTCYx
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _motor                                                2     0      2    1386
                                             25 COMRAM     2     0      2
                       _Delay100TCYx
                        _Delay1KTCYx
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     835
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay100TCYx                                         1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leddec                                               8     0      8    6884
                                             41 COMRAM     8     0      8
                            ___aldiv (ARG)
                            ___almod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _led_dot                                              1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _led_dec                                              4     0      4    9177
                                             41 COMRAM     4     0      4
                            ___aldiv (ARG)
                            ___almod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    3352
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    3491
                                             34 COMRAM     7     3      4
                              _fn111 (ARG)
 ---------------------------------------------------------------------------------
 (1) _fn111                                                4     2      2     863
                                             30 COMRAM     4     2      2
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     492
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     371
                                             17 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1662
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_get                                              3     1      2      31
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8    1603
                                             17 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8    1615
                                             17 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _hisr                                                14    14      0      27
                                              3 COMRAM    14    14      0
                           _led_scan
 ---------------------------------------------------------------------------------
 (4) _led_scan                                             3     3      0      27
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___almod
   ___lwdiv
     _fn111 (ARG)
       ___lldiv
       ___wmul
   ___lwmod
   _adc_get
   _delay_ms
   _fn111
     ___lldiv
     ___wmul
   _led_dec
     ___aldiv (ARG)
     ___almod (ARG)
     ___lwdiv (ARG)
       _fn111 (ARG)
         ___lldiv
         ___wmul
     ___lwmod (ARG)
   _led_dot
   _leddec
     ___aldiv (ARG)
     ___almod (ARG)
     ___lwdiv (ARG)
       _fn111 (ARG)
         ___lldiv
         ___wmul
     ___lwmod (ARG)
   _motor
     _Delay100TCYx
     _Delay1KTCYx
     ___awdiv
   _motor1
     _Delay100TCYx
     _Delay1KTCYx
     ___awdiv
   _motor2
     _Delay100TCYx
     _Delay1KTCYx
     ___awdiv

 _hisr (ROOT)
   _led_scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      36       5       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81      20        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Nov 14 15:40:50 2017

                      _a 003A                        _i 0032                       l15 2290  
                     l18 2292                       _HH 0036                       _GO 007E11  
                     _LL 0038             ___awdiv@sign 0017                       _t2 0080  
                     _ff 0074      ___wmul@multiplicand 0014                      l300 0236  
                    _DD1 0046                      _DD2 0048                      l307 03BC  
                    _DD3 0092                      _DD4 0094                      l317 05F2  
                    l271 1AF8                      l283 1BB4                      l275 1B2E  
                    l364 0E80                      l374 110C                      l366 0E8C  
                    l294 00E2                      l279 1B74                      l376 1118  
                    l385 1410                      l635 2454                      l628 2464  
                    l397 188A                      l399 199A                      l931 2390  
                    l941 23D2                      l868 2074                      _RA3 007C03  
                    _RC1 007C11                      _PR2 000FCB                      _r16 007C  
                    _t41 0082                      _t42 003C                      _t43 0084  
                    _get 0040                      _led 0086                      _dot 0044  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l3100 1D04                     l3110 1D36  
                   l3022 2310                     l3006 22BC                     l3106 1D26  
                   l3122 1D74                     l3042 1AFC                     l3210 01EA  
                   l3202 010E                     l3108 1D32                     l3060 1B94  
                   l3052 1B54                     l3044 1B0E                     l3126 1D8A  
                   l3118 1D66                     l3150 1F06                     l3142 1EE4  
                   l3038 1AD8                     l3230 033E                     l3222 0262  
                   l3064 1BB8                     l3056 1B78                     l3048 1B32  
                   l3312 07EE                     l3304 070C                     l3240 0380  
                   l3208 01DA                     l3162 1F4E                     l3154 1F2A  
                   l3146 1EF6                     l3138 1EB8                     l3410 0A92  
                   l3250 03D8                     l3218 0226                     l3148 1F02  
                   l3340 089E                     l3228 032E                     l3094 1CD4  
                   l3158 1F38                     l3510 0D7A                     l3406 0A6E  
                   l3318 0836                     l3262 04AC                     l3254 03F4  
                   l3246 03AE                     l3238 0372                     l3190 0096  
                   l3504 0D42                     l3352 08F0                     l3360 0940  
                   l3280 05A8                     l3272 0574                     l3602 1570  
                   l3514 0DE8                     l3442 0B42                     l3434 0B10  
                   l3282 05B6                     l3258 0450                     l3524 0F34  
                   l3364 0964                     l3348 08D0                     l3292 060E  
                   l3268 04F0                     l2910 2036                     l3622 1704  
                   l3614 1610                     l3534 1006                     l3462 0BE4  
                   l3446 0B62                     l3454 0BB2                     l3198 00D2  
                   l3608 15C0                     l3560 1360                     l3552 125A  
                   l3528 0FCE                     l3296 062A                     l3288 05E4  
                   l3640 1A28                     l2906 2026                     l2930 2366  
                   l3634 180E                     l3562 136E                     l3538 1074  
                   l3466 0C04                     l3474 0C54                     l3394 09FE  
                   l3386 09CC                     l2908 2032                     l2940 2386  
                   l2932 236A                     l3580 144C                     l3556 12C8  
                   l3548 11C0                     l2918 2066                     l2950 23B0  
                   l2870 1FA4                     l3638 190C                     l3590 14D0  
                   l3478 0C78                     l3398 0A1E                     l2928 235E  
                   l2952 23B4                     l2880 1FC6                     l2864 1F84  
                   l3584 1480                     l3576 1430                     l2962 2256  
                   l2970 227C                     l2964 2262                     l2956 23C8  
                   l2948 23A8                     l2876 1FBA                     l2892 1FEC  
                   l3596 1520                     l2966 226E                     l2982 2432  
                   l2878 1FC2                     l2990 21B0                     l2896 1FFA  
                   l2888 1FE2                     _GIEH 007F97                     _GIEL 007F96  
                   u3015 024E                     _LATD 000F8C                     u3025 0306  
                   u3315 0A54                     u3245 0926                     u3415 0C3A  
                   _IPEN 007E87                     u3505 0EC2                     u2735 243C  
                   u3705 1538                     u3385 0B98                     u2915 1EA0  
                   u3715 1554                     u2925 1ED0                     u3725 1588  
                   u2855 1CBC                     u3735 15A4                     u3655 1464  
                   u3575 114E                     u2865 1CEC                     u3745 15D8  
                   u3665 1498                     u3755 15F4                     u3675 14B4  
                   u3765 17BE                     u3685 14E8                     u3775 1826  
                   u3695 1504                     u2985 00FA                     u3787 2456  
                   u2995 01B2                     u3797 2466                     i2l92 1DC6  
                   i2l94 1DE2                     i2l96 1E02                     i2l89 1DAA  
                   _r100 0078                     _main 001C                     _hisr 0008  
                   _tick 003E                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0018  
            _Delay1KTCYx 2452          __end_of___aldiv 1D9C          __end_of___almod 1F60  
                  ?_main 0001                    ?_hisr 0001          __end_of___awdiv 2004  
                  _ADRES 000FC3    __size_of_Delay100TCYx 0010          __end_of___lldiv 2086  
                  _T0CON 000FD5          ___awdiv@divisor 0014                    _T1CON 000FCD  
                  _T2CON 000FCA                    _LATB0 007C50          __end_of_adc_get 22A0  
                  _LATB1 007C51                    _LATB2 007C52                    _LATC1 007C59  
                  _LATB3 007C53                    _LATC2 007C5A                    _LATB4 007C54  
                  _LATB5 007C55                    _LATD7 007C67          __end_of___lwdiv 239A  
                  i2l102 1E82          __end_of___lwmod 23DC          ___awdiv@counter 0016  
                  _TMR0H 000FD7                    _TMR1H 000FCF                    _TMR0L 000FD6  
                  _TMR1L 000FCE                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _fn111 1AA0          __end_of_led_dec 2178          __end_of_led_dot 247C  
                  _light 004A                    _motor 22F4                    main@i 0072  
                  main@y 0068                    tablat 000FF5                    status 000FD8  
        __initialization 21E8             _Delay100TCYx 2462             __end_of_main 1AA0  
           __end_of_hisr 2106                   ??_main 0060                   ??_hisr 0004  
          __activetblptr 000002                   ?_fn111 001F                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         ___awdiv@dividend 0012                   ?_motor 001A  
                 i2l2100 1E50                   i2l2110 1E6E                   i2l2108 1E66  
                 i2l2098 1E26                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0IP 007F8A                   _TRISA3 007C93                   _TRISC1 007CA1  
                 _TRISC2 007CA2                   _TRISB4 007C9C                   _TRISB5 007C9D  
       __end_of_delay_ms 2442           __CFG_XINST$OFF 000000         __end_of_led_scan 1E84  
              ??___aldiv 001A                ??___almod 001A                   ___wmul 23DC  
              ??___awdiv 0016                ??___lldiv 001A                ??_adc_get 0014  
              ??___lwdiv 0027                ??___lwmod 0016                   _leddec 2402  
                 clear_0 21EE                   clear_1 21FA         ___awdiv@quotient 0018  
                 _motor1 2178                   _motor2 22A0                   main@x1 006E  
                 main@x2 0070                ??_led_dec 002E                ??_led_dot 0012  
           __pdataCOMRAM 0046                   motor@x 001A                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 2240          __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0001  
          __end_of_fn111 1CA0             __pidataBANK0 2442            __end_of_motor 2348  
                ??_fn111 0021                  ??_motor 001C               __pbssBANK0 0074  
             __pnvCOMRAM 0040                  ?___wmul 0012                  ?_leddec 002A  
                _CCP1CON 000FBD                  _CCP2CON 000FBA             ?_Delay1KTCYx 0001  
                ?_motor1 001A                  ?_motor2 001A                ?_delay_ms 0012  
              ?_led_scan 0001                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 1CA0                  ___almod 1E84                  ___awdiv 1F60  
                ___lldiv 2004          __size_of___wmul 0026                  _adc_get 224A  
                ___lwdiv 2348                  ___lwmod 239A          __size_of_leddec 0022  
                __pcinit 21E8                  __ramtop 0800          __size_of_motor1 0070  
        __size_of_motor2 0054                  __ptext0 001C                  __ptext1 22A0  
                __ptext2 2178                  __ptext3 22F4                  __ptext4 1F60  
                __ptext5 2452                  __ptext6 2462                  __ptext7 2402  
                __ptext8 2472                  __ptext9 2106                  _led_dec 2106  
                _led_dot 2472         ___aldiv@dividend 0012               ??_delay_ms 0014  
                main@x1y 006A                  main@x2y 006C           __pintcode_body 2086  
             ??_led_scan 0001               delay_ms@ms 0012     end_of_initialization 2240  
          __Lmediumconst 0000                  int_func 2086          ___lldiv@divisor 0016  
                motor1@x 001A                  motor2@x 001A          ___lldiv@counter 001E  
       ___aldiv@quotient 001C                  postdec1 000FE5                  postinc0 000FEE  
             led_scan@dd 0003         Delay100TCYx@unit 0012           __end_of___wmul 2402  
          __pidataCOMRAM 247C           __end_of_leddec 2424     __size_of_Delay1KTCYx 0010  
         __end_of_motor1 21E8           __end_of_motor2 22F4      start_initialization 21E8  
               ??___wmul 0016                 ??_leddec 0032              __pdataBANK0 0086  
               ??_motor1 001C                 ??_motor2 001C              __pbssCOMRAM 0032  
          __pcstackBANK0 0060        __size_of_delay_ms 001E          Delay1KTCYx@unit 0012  
      __size_of_led_scan 00E8         ___lwdiv@dividend 0023            ?_Delay100TCYx 0001  
              __pintcode 0008                 ?___aldiv 0012                 ?___almod 0012  
               ?___awdiv 0012                 ?___lldiv 0012                 ?_adc_get 0012  
               ?___lwdiv 0023                 ?___lwmod 0012         ___almod@dividend 0012  
               ?_led_dec 002A                 ?_led_dot 0001           __size_of_fn111 0200  
       ___lwdiv@quotient 0028           __size_of_motor 0054          ___aldiv@divisor 0016  
        ___aldiv@counter 001A           ___wmul@product 0016                 i2u148_40 1E20  
         ??_Delay100TCYx 0012        ___wmul@multiplier 0012                led_dec@vh 002A  
              led_dec@vl 002C                leddec@vh1 002A                leddec@vh2 002C  
              leddec@vl1 002E                leddec@vl2 0030                led_dot@tp 0012  
              copy_data0 2214                copy_data1 2234                 __Hrparam 0000  
               __Lrparam 0000         __size_of___aldiv 00FC         __size_of___almod 00DC  
       __size_of___awdiv 00A4         __size_of___lldiv 0082         __size_of_adc_get 0056  
       __size_of___lwdiv 0052         __size_of___lwmod 0042         __size_of_led_dec 0072  
       __size_of_led_dot 000A                 adc_get@n 0014                 _delay_ms 2424  
        ___lwdiv@divisor 0025          ___lwdiv@counter 0027                 __ptext10 239A  
               __ptext11 2348                 __ptext20 1D9C                 __ptext12 1AA0  
               __ptext13 23DC                 __ptext14 2004                 __ptext15 2424  
               __ptext16 224A                 __ptext17 1E84                 __ptext18 1CA0  
        ___almod@divisor 0016                 _led_scan 1D9C          ___almod@counter 001A  
          __size_of_main 1A84            __size_of_hisr 20FE            ??_Delay1KTCYx 0012  
  __CFG_CPUDIV$OSC1_PLL2 000000     __end_of_Delay100TCYx 2472                 intlevel2 0000  
       ___lwmod@dividend 0012         ___lldiv@dividend 0012         ___lldiv@quotient 001A  
        ___lwmod@divisor 0014      __end_of_Delay1KTCYx 2462          ___lwmod@counter 0016  
           ___aldiv@sign 001B             ___almod@sign 001B  
