

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 25 10:55:26 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	idataCOMRAM
    28  0008DC                     __pidataCOMRAM:
    29                           	opt stack 0
    30                           
    31                           ;initializer for _led
    32  0008DC  C0                 	db	192
    33  0008DD  F9                 	db	249
    34  0008DE  A4                 	db	164
    35  0008DF  B0                 	db	176
    36  0008E0  99                 	db	153
    37  0008E1  92                 	db	146
    38  0008E2  82                 	db	130
    39  0008E3  D8                 	db	216
    40  0008E4  80                 	db	128
    41  0008E5  90                 	db	144
    42                           
    43                           ;initializer for _DD1
    44  0008E6  01                 	db	1
    45                           
    46                           ;initializer for _DD2
    47  0008E7  02                 	db	2
    48                           
    49                           ;initializer for _DD3
    50  0008E8  03                 	db	3
    51                           
    52                           ;initializer for _DD4
    53  0008E9  04                 	db	4
    54                           
    55                           ;initializer for _light
    56  0008EA  03                 	db	3
    57  0000                     _ADRES	set	4035
    58  0000                     _ADCON0	set	4034
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _CCP1CON	set	4029
    62  0000                     _CCP2CON	set	4026
    63  0000                     _CCPR1L	set	4030
    64  0000                     _CCPR2L	set	4027
    65  0000                     _LATD	set	3980
    66  0000                     _PR2	set	4043
    67  0000                     _T0CON	set	4053
    68  0000                     _T2CON	set	4042
    69  0000                     _TMR0H	set	4055
    70  0000                     _TMR0L	set	4054
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISE	set	3990
    74  0000                     _GIEH	set	32663
    75  0000                     _GIEL	set	32662
    76  0000                     _GO	set	32273
    77  0000                     _IPEN	set	32391
    78  0000                     _LATB0	set	31824
    79  0000                     _LATB1	set	31825
    80  0000                     _LATB2	set	31826
    81  0000                     _LATB3	set	31827
    82  0000                     _LATC1	set	31833
    83  0000                     _LATC2	set	31834
    84  0000                     _LATD7	set	31847
    85  0000                     _LATE0	set	31848
    86  0000                     _LATE1	set	31849
    87  0000                     _LATE2	set	31850
    88  0000                     _RA2	set	31746
    89  0000                     _RB4	set	31756
    90  0000                     _RB5	set	31757
    91  0000                     _RB6	set	31758
    92  0000                     _RB7	set	31759
    93  0000                     _TMR0IE	set	32661
    94  0000                     _TMR0IF	set	32658
    95  0000                     _TMR0IP	set	32650
    96  0000                     _TRISA2	set	31890
    97  0000                     _TRISB4	set	31900
    98  0000                     _TRISB5	set	31901
    99  0000                     _TRISC1	set	31905
   100  0000                     _TRISC2	set	31906
   101  0000                     _TRISE0	set	31920
   102  0000                     _TRISE1	set	31921
   103  0000                     _TRISE2	set	31922
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  000828                     __pcinit:
   109                           	opt stack 0
   110  000828                     start_initialization:
   111                           	opt stack 0
   112  000828                     __initialization:
   113                           	opt stack 0
   114                           
   115                           ; Clear objects allocated to COMRAM (11 bytes)
   116  000828  EE00  F041         	lfsr	0,__pbssCOMRAM
   117  00082C  0E0B               	movlw	11
   118  00082E                     clear_0:
   119  00082E  6AEE               	clrf	postinc0,c
   120  000830  06E8               	decf	wreg,f,c
   121  000832  E1FD               	bnz	clear_0
   122                           
   123                           ; Initialize objects allocated to COMRAM (15 bytes)
   124                           ; load TBLPTR registers with __pidataCOMRAM
   125  000834  0EDC               	movlw	low __pidataCOMRAM
   126  000836  6EF6               	movwf	tblptrl,c
   127  000838  0E08               	movlw	high __pidataCOMRAM
   128  00083A  6EF7               	movwf	tblptrh,c
   129  00083C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   130  00083E  6EF8               	movwf	tblptru,c
   131  000840  EE00  F032         	lfsr	0,__pdataCOMRAM
   132  000844  EE10 F00F          	lfsr	1,15
   133  000848                     copy_data0:
   134  000848  0009               	tblrd		*+
   135  00084A  CFF5 FFEE          	movff	tablat,postinc0
   136  00084E  50E5               	movf	postdec1,w,c
   137  000850  50E1               	movf	fsr1l,w,c
   138  000852  E1FA               	bnz	copy_data0
   139  000854                     end_of_initialization:
   140                           	opt stack 0
   141  000854                     __end_of__initialization:
   142                           	opt stack 0
   143  000854  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144  000856  6EF8               	movwf	tblptru,c
   145  000858  0100               	movlb	0
   146  00085A  EF0E  F000         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           postinc0	equ	0xFEE
   152                           wreg	equ	0xFE8
   153                           postdec1	equ	0xFE5
   154                           fsr1l	equ	0xFE1
   155                           
   156                           	psect	bssCOMRAM
   157  000041                     __pbssCOMRAM:
   158                           	opt stack 0
   159  000041                     _a:
   160                           	opt stack 0
   161  000041                     	ds	2
   162  000043                     _r100:
   163                           	opt stack 0
   164  000043                     	ds	2
   165  000045                     _r16:
   166                           	opt stack 0
   167  000045                     	ds	2
   168  000047                     _t2:
   169                           	opt stack 0
   170  000047                     	ds	2
   171  000049                     _tick:
   172                           	opt stack 0
   173  000049                     	ds	2
   174  00004B                     _dot:
   175                           	opt stack 0
   176  00004B                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           tblptrh	equ	0xFF7
   179                           tblptrl	equ	0xFF6
   180                           tablat	equ	0xFF5
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           postdec1	equ	0xFE5
   184                           fsr1l	equ	0xFE1
   185                           
   186                           	psect	dataCOMRAM
   187  000032                     __pdataCOMRAM:
   188                           	opt stack 0
   189  000032                     _led:
   190                           	opt stack 0
   191  000032                     	ds	10
   192  00003C                     _DD1:
   193                           	opt stack 0
   194  00003C                     	ds	1
   195  00003D                     _DD2:
   196                           	opt stack 0
   197  00003D                     	ds	1
   198  00003E                     _DD3:
   199                           	opt stack 0
   200  00003E                     	ds	1
   201  00003F                     _DD4:
   202                           	opt stack 0
   203  00003F                     	ds	1
   204  000040                     _light:
   205                           	opt stack 0
   206  000040                     	ds	1
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           postdec1	equ	0xFE5
   214                           fsr1l	equ	0xFE1
   215                           
   216                           	psect	cstackCOMRAM
   217  000001                     __pcstackCOMRAM:
   218                           	opt stack 0
   219  000001                     ??_led_scan:
   220  000001                     
   221                           ; 0 bytes @ 0x0
   222  000001                     	ds	3
   223  000004                     led_scan@dd:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0x3
   227  000004                     	ds	1
   228  000005                     ??_hisr:
   229                           
   230                           ; 0 bytes @ 0x4
   231  000005                     	ds	14
   232  000013                     ?_adc_get:
   233                           	opt stack 0
   234  000013                     ?___wmul:
   235                           	opt stack 0
   236  000013                     ?___lwmod:
   237                           	opt stack 0
   238  000013                     ledon@n:
   239                           	opt stack 0
   240  000013                     ledoff@n:
   241                           	opt stack 0
   242  000013                     led_dot@tp:
   243                           	opt stack 0
   244  000013                     ___wmul@multiplier:
   245                           	opt stack 0
   246  000013                     ___lwmod@dividend:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x12
   250  000013                     	ds	2
   251  000015                     adc_get@n:
   252                           	opt stack 0
   253  000015                     ___wmul@multiplicand:
   254                           	opt stack 0
   255  000015                     ___lwmod@divisor:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x14
   259  000015                     	ds	2
   260  000017                     ___lwmod@counter:
   261                           	opt stack 0
   262  000017                     ___wmul@product:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x16
   266  000017                     	ds	2
   267  000019                     ?___lwdiv:
   268                           	opt stack 0
   269  000019                     ___lwdiv@dividend:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x18
   273  000019                     	ds	2
   274  00001B                     ___lwdiv@divisor:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x1A
   278  00001B                     	ds	2
   279  00001D                     ___lwdiv@quotient:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x1C
   283  00001D                     	ds	2
   284  00001F                     ___lwdiv@counter:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x1E
   288  00001F                     	ds	1
   289  000020                     led_dec@vh:
   290                           	opt stack 0
   291  000020                     pwm0@n:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x1F
   295  000020                     	ds	2
   296  000022                     led_dec@vl:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x21
   300  000022                     	ds	2
   301  000024                     _main$661:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x23
   305  000024                     	ds	2
   306  000026                     main@x2:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x25
   310  000026                     	ds	2
   311  000028                     main@x4:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x27
   315  000028                     	ds	2
   316  00002A                     main@x1:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x29
   320  00002A                     	ds	2
   321  00002C                     main@x3:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x2B
   325  00002C                     	ds	2
   326  00002E                     _main$659:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x2D
   330  00002E                     	ds	2
   331  000030                     _main$660:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x2F
   335  000030                     	ds	2
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 49 in file "vitual_1.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;  x3              2   43[COMRAM] unsigned int 
   355 ;;  x1              2   41[COMRAM] unsigned int 
   356 ;;  x4              2   39[COMRAM] unsigned int 
   357 ;;  x2              2   37[COMRAM] unsigned int 
   358 ;;  temp            2    0        unsigned int 
   359 ;;  x               2    0        unsigned int 
   360 ;; Return value:  Size  Location     Type
   361 ;;		None               void
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:        14       0       0       0       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0       0       0
   372 ;;      Totals:        14       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:       14 bytes
   374 ;; Hardware stack levels required when called:    4
   375 ;; This function calls:
   376 ;;		___lwdiv
   377 ;;		___lwmod
   378 ;;		_adc_get
   379 ;;		_led_dec
   380 ;;		_led_dot
   381 ;;		_ledoff
   382 ;;		_ledon
   383 ;;		_pwm0
   384 ;;		_pwm0off
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text0
   391  00001C                     __ptext0:
   392                           	opt stack 0
   393  00001C                     _main:
   394                           	opt stack 27
   395                           
   396                           ;vitual_1.c: 51: unsigned int x,temp,x1,x2,x3,x4;
   397                           ;vitual_1.c: 52: TRISB=0XF0;
   398                           
   399                           ;incstack = 0
   400  00001C  0EF0               	movlw	240
   401  00001E  6E93               	movwf	3987,c	;volatile
   402                           
   403                           ;vitual_1.c: 53: TRISD=0;
   404  000020  0E00               	movlw	0
   405  000022  6E95               	movwf	3989,c	;volatile
   406                           
   407                           ;vitual_1.c: 54: TRISE=0;
   408  000024  0E00               	movlw	0
   409  000026  6E96               	movwf	3990,c	;volatile
   410                           
   411                           ;vitual_1.c: 55: TRISA2=1;
   412  000028  8492               	bsf	3986,2,c	;volatile
   413                           
   414                           ;vitual_1.c: 57: ADCON1=0x0F;
   415  00002A  0E0F               	movlw	15
   416  00002C  6EC1               	movwf	4033,c	;volatile
   417                           
   418                           ;vitual_1.c: 59: T0CON=0x88;
   419  00002E  0E88               	movlw	136
   420  000030  6ED5               	movwf	4053,c	;volatile
   421                           
   422                           ;vitual_1.c: 60: TMR0H=(65536-20000)>>8;
   423  000032  0EB1               	movlw	177
   424  000034  6ED7               	movwf	4055,c	;volatile
   425                           
   426                           ;vitual_1.c: 61: TMR0L=(65536-20000);
   427  000036  0EE0               	movlw	224
   428  000038  6ED6               	movwf	4054,c	;volatile
   429                           
   430                           ;vitual_1.c: 63: IPEN=1;
   431  00003A  8ED0               	bsf	4048,7,c	;volatile
   432                           
   433                           ;vitual_1.c: 64: TMR0IE=1;
   434  00003C  8AF2               	bsf	intcon,5,c	;volatile
   435                           
   436                           ;vitual_1.c: 65: TMR0IF=0;
   437  00003E  94F2               	bcf	intcon,2,c	;volatile
   438                           
   439                           ;vitual_1.c: 66: TMR0IP=1;
   440  000040  84F1               	bsf	intcon2,2,c	;volatile
   441                           
   442                           ;vitual_1.c: 67: GIEL=1;
   443  000042  8CF2               	bsf	intcon,6,c	;volatile
   444                           
   445                           ;vitual_1.c: 68: GIEH=1;
   446  000044  8EF2               	bsf	intcon,7,c	;volatile
   447                           
   448                           ;vitual_1.c: 70: ledoff(1);ledoff(2);ledoff(3);
   449  000046  0E01               	movlw	1
   450  000048  EC45  F004         	call	_ledoff
   451  00004C  0E02               	movlw	2
   452  00004E  EC45  F004         	call	_ledoff
   453  000052  0E03               	movlw	3
   454  000054  EC45  F004         	call	_ledoff
   455                           
   456                           ;vitual_1.c: 71: x1=550;x2=700;x3=670;x4=800;
   457  000058  0E02               	movlw	2
   458  00005A  6E2B               	movwf	main@x1+1,c
   459  00005C  0E26               	movlw	38
   460  00005E  6E2A               	movwf	main@x1,c
   461  000060  0E02               	movlw	2
   462  000062  6E27               	movwf	main@x2+1,c
   463  000064  0EBC               	movlw	188
   464  000066  6E26               	movwf	main@x2,c
   465  000068  0E02               	movlw	2
   466  00006A  6E2D               	movwf	main@x3+1,c
   467  00006C  0E9E               	movlw	158
   468  00006E  6E2C               	movwf	main@x3,c
   469  000070  0E03               	movlw	3
   470  000072  6E29               	movwf	main@x4+1,c
   471  000074  0E20               	movlw	32
   472  000076  6E28               	movwf	main@x4,c
   473  000078                     l1354:
   474                           
   475                           ;vitual_1.c: 73: {
   476                           ;vitual_1.c: 74: if(RB7==0)
   477  000078  BE81               	btfsc	3969,7,c	;volatile
   478  00007A  D08D               	goto	l1402
   479                           
   480                           ;vitual_1.c: 75: {
   481                           ;vitual_1.c: 76: led_dot(0);
   482  00007C  0E00               	movlw	0
   483  00007E  EC7B  F004         	call	_led_dot
   484                           
   485                           ;vitual_1.c: 77: r16=adc_get(0);
   486  000082  0E00               	movlw	0
   487  000084  ECB3  F003         	call	_adc_get
   488  000088  C013  F045         	movff	?_adc_get,_r16
   489  00008C  C014  F046         	movff	?_adc_get+1,_r16+1
   490                           
   491                           ;vitual_1.c: 78: led_dec(r16/100,r16%100);
   492  000090  C045  F019         	movff	_r16,___lwdiv@dividend
   493  000094  C046  F01A         	movff	_r16+1,___lwdiv@dividend+1
   494  000098  0E00               	movlw	0
   495  00009A  6E1C               	movwf	___lwdiv@divisor+1,c
   496  00009C  0E64               	movlw	100
   497  00009E  6E1B               	movwf	___lwdiv@divisor,c
   498  0000A0  EC8A  F003         	call	___lwdiv	;wreg free
   499  0000A4  C019  F02E         	movff	?___lwdiv,_main$659
   500  0000A8  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   501                           
   502                           ;vitual_1.c: 78: led_dec(r16/100,r16%100);
   503  0000AC  C045  F013         	movff	_r16,___lwmod@dividend
   504  0000B0  C046  F014         	movff	_r16+1,___lwmod@dividend+1
   505  0000B4  0E00               	movlw	0
   506  0000B6  6E16               	movwf	___lwmod@divisor+1,c
   507  0000B8  0E64               	movlw	100
   508  0000BA  6E15               	movwf	___lwmod@divisor,c
   509  0000BC  ECD5  F003         	call	___lwmod	;wreg free
   510  0000C0  C013  F030         	movff	?___lwmod,_main$660
   511  0000C4  C014  F031         	movff	?___lwmod+1,_main$660+1
   512                           
   513                           ;vitual_1.c: 78: led_dec(r16/100,r16%100);
   514  0000C8  C02E  F020         	movff	_main$659,led_dec@vh
   515  0000CC  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   516  0000D0  C030  F022         	movff	_main$660,led_dec@vl
   517  0000D4  C031  F023         	movff	_main$660+1,led_dec@vl+1
   518  0000D8  EC59  F003         	call	_led_dec	;wreg free
   519                           
   520                           ;vitual_1.c: 80: if(r16<x1)
   521  0000DC  502A               	movf	main@x1,w,c
   522  0000DE  5C45               	subwf	_r16,w,c
   523  0000E0  502B               	movf	main@x1+1,w,c
   524  0000E2  5846               	subwfb	_r16+1,w,c
   525  0000E4  B0D8               	btfsc	status,0,c
   526  0000E6  D00B               	goto	l1376
   527                           
   528                           ;vitual_1.c: 81: {
   529                           ;vitual_1.c: 82: pwm0off();ledon(1);ledoff(2);ledoff(3);
   530  0000E8  EC76  F004         	call	_pwm0off	;wreg free
   531  0000EC  0E01               	movlw	1
   532  0000EE  EC2F  F004         	call	_ledon
   533  0000F2  0E02               	movlw	2
   534  0000F4  EC45  F004         	call	_ledoff
   535  0000F8  0E03               	movlw	3
   536  0000FA  EC45  F004         	call	_ledoff
   537  0000FE                     l1376:
   538                           
   539                           ;vitual_1.c: 83: }
   540                           ;vitual_1.c: 85: if((r16>x1)&&(r16<x3))
   541  0000FE  5045               	movf	_r16,w,c
   542  000100  5C2A               	subwf	main@x1,w,c
   543  000102  5046               	movf	_r16+1,w,c
   544  000104  582B               	subwfb	main@x1+1,w,c
   545  000106  B0D8               	btfsc	status,0,c
   546  000108  D023               	goto	l1390
   547  00010A  502C               	movf	main@x3,w,c
   548  00010C  5C45               	subwf	_r16,w,c
   549  00010E  502D               	movf	main@x3+1,w,c
   550  000110  5846               	subwfb	_r16+1,w,c
   551  000112  B0D8               	btfsc	status,0,c
   552  000114  D01D               	goto	l1390
   553                           
   554                           ;vitual_1.c: 86: {
   555                           ;vitual_1.c: 87: pwm0(x2/10);ledoff(1);ledon(2);ledoff(3);
   556  000116  C026  F019         	movff	main@x2,___lwdiv@dividend
   557  00011A  C027  F01A         	movff	main@x2+1,___lwdiv@dividend+1
   558  00011E  0E00               	movlw	0
   559  000120  6E1C               	movwf	___lwdiv@divisor+1,c
   560  000122  0E0A               	movlw	10
   561  000124  6E1B               	movwf	___lwdiv@divisor,c
   562  000126  EC8A  F003         	call	___lwdiv	;wreg free
   563  00012A  C019  F024         	movff	?___lwdiv,_main$661
   564  00012E  C01A  F025         	movff	?___lwdiv+1,_main$661+1
   565                           
   566                           ;vitual_1.c: 86: {
   567                           ;vitual_1.c: 87: pwm0(x2/10);ledoff(1);ledon(2);ledoff(3);
   568  000132  C024  F020         	movff	_main$661,pwm0@n
   569  000136  C025  F021         	movff	_main$661+1,pwm0@n+1
   570  00013A  ECF6  F003         	call	_pwm0	;wreg free
   571  00013E  0E01               	movlw	1
   572  000140  EC45  F004         	call	_ledoff
   573  000144  0E02               	movlw	2
   574  000146  EC2F  F004         	call	_ledon
   575  00014A  0E03               	movlw	3
   576  00014C  EC45  F004         	call	_ledoff
   577  000150                     l1390:
   578                           
   579                           ;vitual_1.c: 88: }
   580                           ;vitual_1.c: 90: if(r16>x3)
   581  000150  5045               	movf	_r16,w,c
   582  000152  5C2C               	subwf	main@x3,w,c
   583  000154  5046               	movf	_r16+1,w,c
   584  000156  582D               	subwfb	main@x3+1,w,c
   585  000158  B0D8               	btfsc	status,0,c
   586  00015A  D01D               	goto	l1402
   587                           
   588                           ;vitual_1.c: 91: {
   589                           ;vitual_1.c: 92: pwm0(x4/10);ledoff(1);ledoff(2);ledon(3);
   590  00015C  C028  F019         	movff	main@x4,___lwdiv@dividend
   591  000160  C029  F01A         	movff	main@x4+1,___lwdiv@dividend+1
   592  000164  0E00               	movlw	0
   593  000166  6E1C               	movwf	___lwdiv@divisor+1,c
   594  000168  0E0A               	movlw	10
   595  00016A  6E1B               	movwf	___lwdiv@divisor,c
   596  00016C  EC8A  F003         	call	___lwdiv	;wreg free
   597  000170  C019  F024         	movff	?___lwdiv,_main$661
   598  000174  C01A  F025         	movff	?___lwdiv+1,_main$661+1
   599                           
   600                           ;vitual_1.c: 91: {
   601                           ;vitual_1.c: 92: pwm0(x4/10);ledoff(1);ledoff(2);ledon(3);
   602  000178  C024  F020         	movff	_main$661,pwm0@n
   603  00017C  C025  F021         	movff	_main$661+1,pwm0@n+1
   604  000180  ECF6  F003         	call	_pwm0	;wreg free
   605  000184  0E01               	movlw	1
   606  000186  EC45  F004         	call	_ledoff
   607  00018A  0E02               	movlw	2
   608  00018C  EC45  F004         	call	_ledoff
   609  000190  0E03               	movlw	3
   610  000192  EC2F  F004         	call	_ledon
   611  000196                     l1402:
   612                           
   613                           ;vitual_1.c: 93: }
   614                           ;vitual_1.c: 94: }
   615                           ;vitual_1.c: 96: if((RB7==1)&&(RB6==0))
   616  000196  BE81               	btfsc	3969,7,c	;volatile
   617  000198  BC81               	btfsc	3969,6,c	;volatile
   618  00019A  D0BB               	goto	l1442
   619                           
   620                           ;vitual_1.c: 97: {
   621                           ;vitual_1.c: 98: ledoff(1);ledoff(2);ledoff(3);pwm0off();
   622  00019C  0E01               	movlw	1
   623  00019E  EC45  F004         	call	_ledoff
   624  0001A2  0E02               	movlw	2
   625  0001A4  EC45  F004         	call	_ledoff
   626  0001A8  0E03               	movlw	3
   627  0001AA  EC45  F004         	call	_ledoff
   628  0001AE  EC76  F004         	call	_pwm0off	;wreg free
   629                           
   630                           ;vitual_1.c: 99: if((RB5==0)&&(RB4==0))
   631  0001B2  AA81               	btfss	3969,5,c	;volatile
   632  0001B4  B881               	btfsc	3969,4,c	;volatile
   633  0001B6  D029               	goto	l1418
   634                           
   635                           ;vitual_1.c: 100: {
   636                           ;vitual_1.c: 101: led_dec(x1/100,x1%100);led_dot(0);
   637  0001B8  C02A  F019         	movff	main@x1,___lwdiv@dividend
   638  0001BC  C02B  F01A         	movff	main@x1+1,___lwdiv@dividend+1
   639  0001C0  0E00               	movlw	0
   640  0001C2  6E1C               	movwf	___lwdiv@divisor+1,c
   641  0001C4  0E64               	movlw	100
   642  0001C6  6E1B               	movwf	___lwdiv@divisor,c
   643  0001C8  EC8A  F003         	call	___lwdiv	;wreg free
   644  0001CC  C019  F02E         	movff	?___lwdiv,_main$659
   645  0001D0  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   646                           
   647                           ;vitual_1.c: 100: {
   648                           ;vitual_1.c: 101: led_dec(x1/100,x1%100);led_dot(0);
   649  0001D4  C02A  F013         	movff	main@x1,___lwmod@dividend
   650  0001D8  C02B  F014         	movff	main@x1+1,___lwmod@dividend+1
   651  0001DC  0E00               	movlw	0
   652  0001DE  6E16               	movwf	___lwmod@divisor+1,c
   653  0001E0  0E64               	movlw	100
   654  0001E2  6E15               	movwf	___lwmod@divisor,c
   655  0001E4  ECD5  F003         	call	___lwmod	;wreg free
   656  0001E8  C013  F030         	movff	?___lwmod,_main$660
   657  0001EC  C014  F031         	movff	?___lwmod+1,_main$660+1
   658                           
   659                           ;vitual_1.c: 100: {
   660                           ;vitual_1.c: 101: led_dec(x1/100,x1%100);led_dot(0);
   661  0001F0  C02E  F020         	movff	_main$659,led_dec@vh
   662  0001F4  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   663  0001F8  C030  F022         	movff	_main$660,led_dec@vl
   664  0001FC  C031  F023         	movff	_main$660+1,led_dec@vl+1
   665  000200  EC59  F003         	call	_led_dec	;wreg free
   666  000204  0E00               	movlw	0
   667  000206  EC7B  F004         	call	_led_dot
   668  00020A                     l1418:
   669                           
   670                           ;vitual_1.c: 102: }
   671                           ;vitual_1.c: 103: if((RB5==0)&&(RB4==1))
   672  00020A  AA81               	btfss	3969,5,c	;volatile
   673  00020C  A881               	btfss	3969,4,c	;volatile
   674  00020E  D029               	goto	l1426
   675                           
   676                           ;vitual_1.c: 104: {
   677                           ;vitual_1.c: 105: led_dec(x2/100,x2%100);led_dot(2);
   678  000210  C026  F019         	movff	main@x2,___lwdiv@dividend
   679  000214  C027  F01A         	movff	main@x2+1,___lwdiv@dividend+1
   680  000218  0E00               	movlw	0
   681  00021A  6E1C               	movwf	___lwdiv@divisor+1,c
   682  00021C  0E64               	movlw	100
   683  00021E  6E1B               	movwf	___lwdiv@divisor,c
   684  000220  EC8A  F003         	call	___lwdiv	;wreg free
   685  000224  C019  F02E         	movff	?___lwdiv,_main$659
   686  000228  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   687                           
   688                           ;vitual_1.c: 104: {
   689                           ;vitual_1.c: 105: led_dec(x2/100,x2%100);led_dot(2);
   690  00022C  C026  F013         	movff	main@x2,___lwmod@dividend
   691  000230  C027  F014         	movff	main@x2+1,___lwmod@dividend+1
   692  000234  0E00               	movlw	0
   693  000236  6E16               	movwf	___lwmod@divisor+1,c
   694  000238  0E64               	movlw	100
   695  00023A  6E15               	movwf	___lwmod@divisor,c
   696  00023C  ECD5  F003         	call	___lwmod	;wreg free
   697  000240  C013  F030         	movff	?___lwmod,_main$660
   698  000244  C014  F031         	movff	?___lwmod+1,_main$660+1
   699                           
   700                           ;vitual_1.c: 104: {
   701                           ;vitual_1.c: 105: led_dec(x2/100,x2%100);led_dot(2);
   702  000248  C02E  F020         	movff	_main$659,led_dec@vh
   703  00024C  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   704  000250  C030  F022         	movff	_main$660,led_dec@vl
   705  000254  C031  F023         	movff	_main$660+1,led_dec@vl+1
   706  000258  EC59  F003         	call	_led_dec	;wreg free
   707  00025C  0E02               	movlw	2
   708  00025E  EC7B  F004         	call	_led_dot
   709  000262                     l1426:
   710                           
   711                           ;vitual_1.c: 106: }
   712                           ;vitual_1.c: 107: if((RB5==1)&&(RB4==0))
   713  000262  BA81               	btfsc	3969,5,c	;volatile
   714  000264  B881               	btfsc	3969,4,c	;volatile
   715  000266  D029               	goto	l1434
   716                           
   717                           ;vitual_1.c: 108: {
   718                           ;vitual_1.c: 109: led_dec(x3/100,x3%100);led_dot(0);
   719  000268  C02C  F019         	movff	main@x3,___lwdiv@dividend
   720  00026C  C02D  F01A         	movff	main@x3+1,___lwdiv@dividend+1
   721  000270  0E00               	movlw	0
   722  000272  6E1C               	movwf	___lwdiv@divisor+1,c
   723  000274  0E64               	movlw	100
   724  000276  6E1B               	movwf	___lwdiv@divisor,c
   725  000278  EC8A  F003         	call	___lwdiv	;wreg free
   726  00027C  C019  F02E         	movff	?___lwdiv,_main$659
   727  000280  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   728                           
   729                           ;vitual_1.c: 108: {
   730                           ;vitual_1.c: 109: led_dec(x3/100,x3%100);led_dot(0);
   731  000284  C02C  F013         	movff	main@x3,___lwmod@dividend
   732  000288  C02D  F014         	movff	main@x3+1,___lwmod@dividend+1
   733  00028C  0E00               	movlw	0
   734  00028E  6E16               	movwf	___lwmod@divisor+1,c
   735  000290  0E64               	movlw	100
   736  000292  6E15               	movwf	___lwmod@divisor,c
   737  000294  ECD5  F003         	call	___lwmod	;wreg free
   738  000298  C013  F030         	movff	?___lwmod,_main$660
   739  00029C  C014  F031         	movff	?___lwmod+1,_main$660+1
   740                           
   741                           ;vitual_1.c: 108: {
   742                           ;vitual_1.c: 109: led_dec(x3/100,x3%100);led_dot(0);
   743  0002A0  C02E  F020         	movff	_main$659,led_dec@vh
   744  0002A4  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   745  0002A8  C030  F022         	movff	_main$660,led_dec@vl
   746  0002AC  C031  F023         	movff	_main$660+1,led_dec@vl+1
   747  0002B0  EC59  F003         	call	_led_dec	;wreg free
   748  0002B4  0E00               	movlw	0
   749  0002B6  EC7B  F004         	call	_led_dot
   750  0002BA                     l1434:
   751                           
   752                           ;vitual_1.c: 110: }
   753                           ;vitual_1.c: 111: if((RB5==1)&&(RB4==1))
   754  0002BA  BA81               	btfsc	3969,5,c	;volatile
   755  0002BC  A881               	btfss	3969,4,c	;volatile
   756  0002BE  D029               	goto	l1442
   757                           
   758                           ;vitual_1.c: 112: {
   759                           ;vitual_1.c: 113: led_dec(x4/100,x4%100);led_dot(2);
   760  0002C0  C028  F019         	movff	main@x4,___lwdiv@dividend
   761  0002C4  C029  F01A         	movff	main@x4+1,___lwdiv@dividend+1
   762  0002C8  0E00               	movlw	0
   763  0002CA  6E1C               	movwf	___lwdiv@divisor+1,c
   764  0002CC  0E64               	movlw	100
   765  0002CE  6E1B               	movwf	___lwdiv@divisor,c
   766  0002D0  EC8A  F003         	call	___lwdiv	;wreg free
   767  0002D4  C019  F02E         	movff	?___lwdiv,_main$659
   768  0002D8  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   769                           
   770                           ;vitual_1.c: 112: {
   771                           ;vitual_1.c: 113: led_dec(x4/100,x4%100);led_dot(2);
   772  0002DC  C028  F013         	movff	main@x4,___lwmod@dividend
   773  0002E0  C029  F014         	movff	main@x4+1,___lwmod@dividend+1
   774  0002E4  0E00               	movlw	0
   775  0002E6  6E16               	movwf	___lwmod@divisor+1,c
   776  0002E8  0E64               	movlw	100
   777  0002EA  6E15               	movwf	___lwmod@divisor,c
   778  0002EC  ECD5  F003         	call	___lwmod	;wreg free
   779  0002F0  C013  F030         	movff	?___lwmod,_main$660
   780  0002F4  C014  F031         	movff	?___lwmod+1,_main$660+1
   781                           
   782                           ;vitual_1.c: 112: {
   783                           ;vitual_1.c: 113: led_dec(x4/100,x4%100);led_dot(2);
   784  0002F8  C02E  F020         	movff	_main$659,led_dec@vh
   785  0002FC  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   786  000300  C030  F022         	movff	_main$660,led_dec@vl
   787  000304  C031  F023         	movff	_main$660+1,led_dec@vl+1
   788  000308  EC59  F003         	call	_led_dec	;wreg free
   789  00030C  0E02               	movlw	2
   790  00030E  EC7B  F004         	call	_led_dot
   791  000312                     l1442:
   792                           
   793                           ;vitual_1.c: 114: }
   794                           ;vitual_1.c: 115: }
   795                           ;vitual_1.c: 117: if((RB7==1)&&(RB6==1))
   796  000312  BE81               	btfsc	3969,7,c	;volatile
   797  000314  AC81               	btfss	3969,6,c	;volatile
   798  000316  D6B0               	goto	l1354
   799                           
   800                           ;vitual_1.c: 118: {
   801                           ;vitual_1.c: 119: ledon(1);ledon(2);ledon(3);pwm0off();
   802  000318  0E01               	movlw	1
   803  00031A  EC2F  F004         	call	_ledon
   804  00031E  0E02               	movlw	2
   805  000320  EC2F  F004         	call	_ledon
   806  000324  0E03               	movlw	3
   807  000326  EC2F  F004         	call	_ledon
   808  00032A  EC76  F004         	call	_pwm0off	;wreg free
   809                           
   810                           ;vitual_1.c: 121: if((RB5==0)&&(RB4==0))
   811  00032E  AA81               	btfss	3969,5,c	;volatile
   812  000330  B881               	btfsc	3969,4,c	;volatile
   813  000332  D040               	goto	l85
   814                           
   815                           ;vitual_1.c: 122: {
   816                           ;vitual_1.c: 123: r16=adc_get(1);if(r16>1000)r16=1000;led_dec(r16/100,r16%100);led_dot(0
      +                          );
   817  000334  0E01               	movlw	1
   818  000336  ECB3  F003         	call	_adc_get
   819  00033A  C013  F045         	movff	?_adc_get,_r16
   820  00033E  C014  F046         	movff	?_adc_get+1,_r16+1
   821  000342  0EE9               	movlw	233
   822  000344  5C45               	subwf	_r16,w,c
   823  000346  0E03               	movlw	3
   824  000348  5846               	subwfb	_r16+1,w,c
   825  00034A  A0D8               	btfss	status,0,c
   826  00034C  D004               	goto	l1460
   827  00034E  0E03               	movlw	3
   828  000350  6E46               	movwf	_r16+1,c
   829  000352  0EE8               	movlw	232
   830  000354  6E45               	movwf	_r16,c
   831  000356                     l1460:
   832  000356  C045  F019         	movff	_r16,___lwdiv@dividend
   833  00035A  C046  F01A         	movff	_r16+1,___lwdiv@dividend+1
   834  00035E  0E00               	movlw	0
   835  000360  6E1C               	movwf	___lwdiv@divisor+1,c
   836  000362  0E64               	movlw	100
   837  000364  6E1B               	movwf	___lwdiv@divisor,c
   838  000366  EC8A  F003         	call	___lwdiv	;wreg free
   839  00036A  C019  F02E         	movff	?___lwdiv,_main$659
   840  00036E  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   841  000372  C045  F013         	movff	_r16,___lwmod@dividend
   842  000376  C046  F014         	movff	_r16+1,___lwmod@dividend+1
   843  00037A  0E00               	movlw	0
   844  00037C  6E16               	movwf	___lwmod@divisor+1,c
   845  00037E  0E64               	movlw	100
   846  000380  6E15               	movwf	___lwmod@divisor,c
   847  000382  ECD5  F003         	call	___lwmod	;wreg free
   848  000386  C013  F030         	movff	?___lwmod,_main$660
   849  00038A  C014  F031         	movff	?___lwmod+1,_main$660+1
   850  00038E  C02E  F020         	movff	_main$659,led_dec@vh
   851  000392  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   852  000396  C030  F022         	movff	_main$660,led_dec@vl
   853  00039A  C031  F023         	movff	_main$660+1,led_dec@vl+1
   854  00039E  EC59  F003         	call	_led_dec	;wreg free
   855  0003A2  0E00               	movlw	0
   856  0003A4  EC7B  F004         	call	_led_dot
   857                           
   858                           ;vitual_1.c: 124: if(RA2==1)x1=r16;
   859  0003A8  A480               	btfss	3968,2,c	;volatile
   860  0003AA  D004               	goto	l85
   861  0003AC  C045  F02A         	movff	_r16,main@x1
   862  0003B0  C046  F02B         	movff	_r16+1,main@x1+1
   863  0003B4                     l85:
   864                           
   865                           ;vitual_1.c: 125: }
   866                           ;vitual_1.c: 126: if((RB5==0)&&(RB4==1))
   867  0003B4  AA81               	btfss	3969,5,c	;volatile
   868  0003B6  A881               	btfss	3969,4,c	;volatile
   869  0003B8  D040               	goto	l88
   870                           
   871                           ;vitual_1.c: 127: {
   872                           ;vitual_1.c: 128: r16=adc_get(1);if(r16>1000)r16=1000;led_dec(r16/100,r16%100);led_dot(2
      +                          );
   873  0003BA  0E01               	movlw	1
   874  0003BC  ECB3  F003         	call	_adc_get
   875  0003C0  C013  F045         	movff	?_adc_get,_r16
   876  0003C4  C014  F046         	movff	?_adc_get+1,_r16+1
   877  0003C8  0EE9               	movlw	233
   878  0003CA  5C45               	subwf	_r16,w,c
   879  0003CC  0E03               	movlw	3
   880  0003CE  5846               	subwfb	_r16+1,w,c
   881  0003D0  A0D8               	btfss	status,0,c
   882  0003D2  D004               	goto	l1480
   883  0003D4  0E03               	movlw	3
   884  0003D6  6E46               	movwf	_r16+1,c
   885  0003D8  0EE8               	movlw	232
   886  0003DA  6E45               	movwf	_r16,c
   887  0003DC                     l1480:
   888  0003DC  C045  F019         	movff	_r16,___lwdiv@dividend
   889  0003E0  C046  F01A         	movff	_r16+1,___lwdiv@dividend+1
   890  0003E4  0E00               	movlw	0
   891  0003E6  6E1C               	movwf	___lwdiv@divisor+1,c
   892  0003E8  0E64               	movlw	100
   893  0003EA  6E1B               	movwf	___lwdiv@divisor,c
   894  0003EC  EC8A  F003         	call	___lwdiv	;wreg free
   895  0003F0  C019  F02E         	movff	?___lwdiv,_main$659
   896  0003F4  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   897  0003F8  C045  F013         	movff	_r16,___lwmod@dividend
   898  0003FC  C046  F014         	movff	_r16+1,___lwmod@dividend+1
   899  000400  0E00               	movlw	0
   900  000402  6E16               	movwf	___lwmod@divisor+1,c
   901  000404  0E64               	movlw	100
   902  000406  6E15               	movwf	___lwmod@divisor,c
   903  000408  ECD5  F003         	call	___lwmod	;wreg free
   904  00040C  C013  F030         	movff	?___lwmod,_main$660
   905  000410  C014  F031         	movff	?___lwmod+1,_main$660+1
   906  000414  C02E  F020         	movff	_main$659,led_dec@vh
   907  000418  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   908  00041C  C030  F022         	movff	_main$660,led_dec@vl
   909  000420  C031  F023         	movff	_main$660+1,led_dec@vl+1
   910  000424  EC59  F003         	call	_led_dec	;wreg free
   911  000428  0E02               	movlw	2
   912  00042A  EC7B  F004         	call	_led_dot
   913                           
   914                           ;vitual_1.c: 129: if(RA2==1)x2=r16;
   915  00042E  A480               	btfss	3968,2,c	;volatile
   916  000430  D004               	goto	l88
   917  000432  C045  F026         	movff	_r16,main@x2
   918  000436  C046  F027         	movff	_r16+1,main@x2+1
   919  00043A                     l88:
   920                           
   921                           ;vitual_1.c: 130: }
   922                           ;vitual_1.c: 131: if((RB5==1)&&(RB4==0))
   923  00043A  BA81               	btfsc	3969,5,c	;volatile
   924  00043C  B881               	btfsc	3969,4,c	;volatile
   925  00043E  D040               	goto	l91
   926                           
   927                           ;vitual_1.c: 132: {
   928                           ;vitual_1.c: 133: r16=adc_get(1);if(r16>1000)r16=1000;led_dec(r16/100,r16%100);led_dot(0
      +                          );
   929  000440  0E01               	movlw	1
   930  000442  ECB3  F003         	call	_adc_get
   931  000446  C013  F045         	movff	?_adc_get,_r16
   932  00044A  C014  F046         	movff	?_adc_get+1,_r16+1
   933  00044E  0EE9               	movlw	233
   934  000450  5C45               	subwf	_r16,w,c
   935  000452  0E03               	movlw	3
   936  000454  5846               	subwfb	_r16+1,w,c
   937  000456  A0D8               	btfss	status,0,c
   938  000458  D004               	goto	l1500
   939  00045A  0E03               	movlw	3
   940  00045C  6E46               	movwf	_r16+1,c
   941  00045E  0EE8               	movlw	232
   942  000460  6E45               	movwf	_r16,c
   943  000462                     l1500:
   944  000462  C045  F019         	movff	_r16,___lwdiv@dividend
   945  000466  C046  F01A         	movff	_r16+1,___lwdiv@dividend+1
   946  00046A  0E00               	movlw	0
   947  00046C  6E1C               	movwf	___lwdiv@divisor+1,c
   948  00046E  0E64               	movlw	100
   949  000470  6E1B               	movwf	___lwdiv@divisor,c
   950  000472  EC8A  F003         	call	___lwdiv	;wreg free
   951  000476  C019  F02E         	movff	?___lwdiv,_main$659
   952  00047A  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
   953  00047E  C045  F013         	movff	_r16,___lwmod@dividend
   954  000482  C046  F014         	movff	_r16+1,___lwmod@dividend+1
   955  000486  0E00               	movlw	0
   956  000488  6E16               	movwf	___lwmod@divisor+1,c
   957  00048A  0E64               	movlw	100
   958  00048C  6E15               	movwf	___lwmod@divisor,c
   959  00048E  ECD5  F003         	call	___lwmod	;wreg free
   960  000492  C013  F030         	movff	?___lwmod,_main$660
   961  000496  C014  F031         	movff	?___lwmod+1,_main$660+1
   962  00049A  C02E  F020         	movff	_main$659,led_dec@vh
   963  00049E  C02F  F021         	movff	_main$659+1,led_dec@vh+1
   964  0004A2  C030  F022         	movff	_main$660,led_dec@vl
   965  0004A6  C031  F023         	movff	_main$660+1,led_dec@vl+1
   966  0004AA  EC59  F003         	call	_led_dec	;wreg free
   967  0004AE  0E00               	movlw	0
   968  0004B0  EC7B  F004         	call	_led_dot
   969                           
   970                           ;vitual_1.c: 134: if(RA2==1)x3=r16;
   971  0004B4  A480               	btfss	3968,2,c	;volatile
   972  0004B6  D004               	goto	l91
   973  0004B8  C045  F02C         	movff	_r16,main@x3
   974  0004BC  C046  F02D         	movff	_r16+1,main@x3+1
   975  0004C0                     l91:
   976                           
   977                           ;vitual_1.c: 135: }
   978                           ;vitual_1.c: 136: if((RB5==1)&&(RB4==1))
   979  0004C0  BA81               	btfsc	3969,5,c	;volatile
   980  0004C2  A881               	btfss	3969,4,c	;volatile
   981  0004C4  D5D9               	goto	l1354
   982                           
   983                           ;vitual_1.c: 137: {
   984                           ;vitual_1.c: 138: r16=adc_get(1);if(r16>1000)r16=1000;led_dec(r16/100,r16%100);led_dot(2
      +                          );
   985  0004C6  0E01               	movlw	1
   986  0004C8  ECB3  F003         	call	_adc_get
   987  0004CC  C013  F045         	movff	?_adc_get,_r16
   988  0004D0  C014  F046         	movff	?_adc_get+1,_r16+1
   989  0004D4  0EE9               	movlw	233
   990  0004D6  5C45               	subwf	_r16,w,c
   991  0004D8  0E03               	movlw	3
   992  0004DA  5846               	subwfb	_r16+1,w,c
   993  0004DC  A0D8               	btfss	status,0,c
   994  0004DE  D004               	goto	l1520
   995  0004E0  0E03               	movlw	3
   996  0004E2  6E46               	movwf	_r16+1,c
   997  0004E4  0EE8               	movlw	232
   998  0004E6  6E45               	movwf	_r16,c
   999  0004E8                     l1520:
  1000  0004E8  C045  F019         	movff	_r16,___lwdiv@dividend
  1001  0004EC  C046  F01A         	movff	_r16+1,___lwdiv@dividend+1
  1002  0004F0  0E00               	movlw	0
  1003  0004F2  6E1C               	movwf	___lwdiv@divisor+1,c
  1004  0004F4  0E64               	movlw	100
  1005  0004F6  6E1B               	movwf	___lwdiv@divisor,c
  1006  0004F8  EC8A  F003         	call	___lwdiv	;wreg free
  1007  0004FC  C019  F02E         	movff	?___lwdiv,_main$659
  1008  000500  C01A  F02F         	movff	?___lwdiv+1,_main$659+1
  1009  000504  C045  F013         	movff	_r16,___lwmod@dividend
  1010  000508  C046  F014         	movff	_r16+1,___lwmod@dividend+1
  1011  00050C  0E00               	movlw	0
  1012  00050E  6E16               	movwf	___lwmod@divisor+1,c
  1013  000510  0E64               	movlw	100
  1014  000512  6E15               	movwf	___lwmod@divisor,c
  1015  000514  ECD5  F003         	call	___lwmod	;wreg free
  1016  000518  C013  F030         	movff	?___lwmod,_main$660
  1017  00051C  C014  F031         	movff	?___lwmod+1,_main$660+1
  1018  000520  C02E  F020         	movff	_main$659,led_dec@vh
  1019  000524  C02F  F021         	movff	_main$659+1,led_dec@vh+1
  1020  000528  C030  F022         	movff	_main$660,led_dec@vl
  1021  00052C  C031  F023         	movff	_main$660+1,led_dec@vl+1
  1022  000530  EC59  F003         	call	_led_dec	;wreg free
  1023  000534  0E02               	movlw	2
  1024  000536  EC7B  F004         	call	_led_dot
  1025                           
  1026                           ;vitual_1.c: 139: if(RA2==1)x4=r16;
  1027  00053A  A480               	btfss	3968,2,c	;volatile
  1028  00053C  D59D               	goto	l1354
  1029  00053E  C045  F028         	movff	_r16,main@x4
  1030  000542  C046  F029         	movff	_r16+1,main@x4+1
  1031  000546  D598               	goto	l1354
  1032  000548                     __end_of_main:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           intcon	equ	0xFF2
  1039                           intcon2	equ	0xFF1
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           postdec1	equ	0xFE5
  1043                           fsr1l	equ	0xFE1
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _pwm0off *****************
  1047 ;; Defined at:
  1048 ;;		line 27 in file "pwm.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;		None               void
  1055 ;; Registers used:
  1056 ;;		wreg, status,2
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    2
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text1
  1077  0008EC                     __ptext1:
  1078                           	opt stack 0
  1079  0008EC                     _pwm0off:
  1080                           	opt stack 28
  1081                           
  1082                           ;pwm.c: 29: TRISC2=1;
  1083                           
  1084                           ;incstack = 0
  1085  0008EC  8494               	bsf	3988,2,c	;volatile
  1086                           
  1087                           ;pwm.c: 30: LATC2=0;
  1088  0008EE  948B               	bcf	3979,2,c	;volatile
  1089                           
  1090                           ;pwm.c: 31: CCP1CON=0;
  1091  0008F0  0E00               	movlw	0
  1092  0008F2  6EBD               	movwf	4029,c	;volatile
  1093  0008F4  0012               	return	
  1094  0008F6                     __end_of_pwm0off:
  1095                           	opt stack 0
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           intcon	equ	0xFF2
  1101                           intcon2	equ	0xFF1
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           fsr1l	equ	0xFE1
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _pwm0 *****************
  1109 ;; Defined at:
  1110 ;;		line 9 in file "pwm.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  n               2   31[COMRAM] unsigned int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1124 ;;      Params:         2       0       0       0       0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    3
  1131 ;; This function calls:
  1132 ;;		___lwdiv
  1133 ;;		___wmul
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text2
  1140  0007EC                     __ptext2:
  1141                           	opt stack 0
  1142  0007EC                     _pwm0:
  1143                           	opt stack 27
  1144                           
  1145                           ;pwm.c: 11: TRISC2=0;
  1146                           
  1147                           ;incstack = 0
  1148  0007EC  9494               	bcf	3988,2,c	;volatile
  1149                           
  1150                           ;pwm.c: 12: T2CON=0x07;
  1151  0007EE  0E07               	movlw	7
  1152  0007F0  6ECA               	movwf	4042,c	;volatile
  1153                           
  1154                           ;pwm.c: 13: CCP1CON=0x0c;
  1155  0007F2  0E0C               	movlw	12
  1156  0007F4  6EBD               	movwf	4029,c	;volatile
  1157                           
  1158                           ;pwm.c: 14: CCPR1L=42*n/100;
  1159  0007F6  C020  F013         	movff	pwm0@n,___wmul@multiplier
  1160  0007FA  C021  F014         	movff	pwm0@n+1,___wmul@multiplier+1
  1161  0007FE  0E00               	movlw	0
  1162  000800  6E16               	movwf	___wmul@multiplicand+1,c
  1163  000802  0E2A               	movlw	42
  1164  000804  6E15               	movwf	___wmul@multiplicand,c
  1165  000806  EC5B  F004         	call	___wmul	;wreg free
  1166  00080A  C013  F019         	movff	?___wmul,___lwdiv@dividend
  1167  00080E  C014  F01A         	movff	?___wmul+1,___lwdiv@dividend+1
  1168  000812  0E00               	movlw	0
  1169  000814  6E1C               	movwf	___lwdiv@divisor+1,c
  1170  000816  0E64               	movlw	100
  1171  000818  6E1B               	movwf	___lwdiv@divisor,c
  1172  00081A  EC8A  F003         	call	___lwdiv	;wreg free
  1173  00081E  5019               	movf	?___lwdiv,w,c
  1174  000820  6EBE               	movwf	4030,c	;volatile
  1175                           
  1176                           ;pwm.c: 15: PR2=42-1;
  1177  000822  0E29               	movlw	41
  1178  000824  6ECB               	movwf	4043,c	;volatile
  1179  000826  0012               	return	
  1180  000828                     __end_of_pwm0:
  1181                           	opt stack 0
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           intcon	equ	0xFF2
  1187                           intcon2	equ	0xFF1
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function ___wmul *****************
  1195 ;; Defined at:
  1196 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  multiplier      2   18[COMRAM] unsigned int 
  1199 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  product         2   22[COMRAM] unsigned int 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2   18[COMRAM] unsigned int 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, prodl, prodh
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1211 ;;      Params:         4       0       0       0       0       0       0       0       0
  1212 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1214 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1215 ;;Total ram usage:        6 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    2
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_pwm0
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text3
  1226  0008B6                     __ptext3:
  1227                           	opt stack 0
  1228  0008B6                     ___wmul:
  1229                           	opt stack 27
  1230                           
  1231                           ;incstack = 0
  1232  0008B6  5013               	movf	___wmul@multiplier,w,c
  1233  0008B8  0215               	mulwf	___wmul@multiplicand,c
  1234  0008BA  CFF3 F017          	movff	prodl,___wmul@product
  1235  0008BE  CFF4 F018          	movff	prodh,___wmul@product+1
  1236  0008C2  5013               	movf	___wmul@multiplier,w,c
  1237  0008C4  0216               	mulwf	___wmul@multiplicand+1,c
  1238  0008C6  50F3               	movf	prodl,w,c
  1239  0008C8  2618               	addwf	___wmul@product+1,f,c
  1240  0008CA  5014               	movf	___wmul@multiplier+1,w,c
  1241  0008CC  0215               	mulwf	___wmul@multiplicand,c
  1242  0008CE  50F3               	movf	prodl,w,c
  1243  0008D0  2618               	addwf	___wmul@product+1,f,c
  1244  0008D2  C017  F013         	movff	___wmul@product,?___wmul
  1245  0008D6  C018  F014         	movff	___wmul@product+1,?___wmul+1
  1246  0008DA  0012               	return	
  1247  0008DC                     __end_of___wmul:
  1248                           	opt stack 0
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           prodh	equ	0xFF4
  1254                           prodl	equ	0xFF3
  1255                           intcon	equ	0xFF2
  1256                           intcon2	equ	0xFF1
  1257                           postinc0	equ	0xFEE
  1258                           wreg	equ	0xFE8
  1259                           postdec1	equ	0xFE5
  1260                           fsr1l	equ	0xFE1
  1261                           status	equ	0xFD8
  1262                           
  1263 ;; *************** function _ledon *****************
  1264 ;; Defined at:
  1265 ;;		line 11 in file "led.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  n               1    wreg     unsigned char 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  n               1   18[COMRAM] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;		None               void
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0
  1280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1282 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1283 ;;Total ram usage:        1 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    2
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text4
  1294  00085E                     __ptext4:
  1295                           	opt stack 0
  1296  00085E                     _ledon:
  1297                           	opt stack 28
  1298                           
  1299                           ;incstack = 0
  1300                           ;ledon@n stored from wreg
  1301  00085E  6E13               	movwf	ledon@n,c
  1302  000860  9096               	bcf	3990,0,c	;volatile
  1303  000862  9296               	bcf	3990,1,c	;volatile
  1304  000864  9496               	bcf	3990,2,c	;volatile
  1305                           
  1306                           ;led.c: 13: switch(n)
  1307  000866  D006               	goto	l1314
  1308  000868                     l141:
  1309  000868  848D               	bsf	3981,2,c	;volatile
  1310  00086A  D00E               	goto	l145
  1311  00086C                     l143:
  1312  00086C  828D               	bsf	3981,1,c	;volatile
  1313  00086E  D00C               	goto	l145
  1314  000870                     l144:
  1315  000870  808D               	bsf	3981,0,c	;volatile
  1316  000872  D00A               	goto	l145
  1317  000874                     l1314:
  1318  000874  5013               	movf	ledon@n,w,c
  1319                           
  1320                           ; Switch size 1, requested type "space"
  1321                           ; Number of cases is 3, Range of values is 1 to 3
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte           10     6 (average)
  1325                           ;	Chosen strategy is simple_byte
  1326  000876  0A01               	xorlw	1	; case 1
  1327  000878  B4D8               	btfsc	status,2,c
  1328  00087A  D7F6               	goto	l141
  1329  00087C  0A03               	xorlw	3	; case 2
  1330  00087E  B4D8               	btfsc	status,2,c
  1331  000880  D7F5               	goto	l143
  1332  000882  0A01               	xorlw	1	; case 3
  1333  000884  B4D8               	btfsc	status,2,c
  1334  000886  D7F4               	goto	l144
  1335  000888                     l145:
  1336  000888  0012               	return	
  1337  00088A                     __end_of_ledon:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           prodh	equ	0xFF4
  1344                           prodl	equ	0xFF3
  1345                           intcon	equ	0xFF2
  1346                           intcon2	equ	0xFF1
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           postdec1	equ	0xFE5
  1350                           fsr1l	equ	0xFE1
  1351                           status	equ	0xFD8
  1352                           
  1353 ;; *************** function _ledoff *****************
  1354 ;; Defined at:
  1355 ;;		line 20 in file "led.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  n               1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  n               1   18[COMRAM] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1369 ;;      Params:         0       0       0       0       0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1372 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1373 ;;Total ram usage:        1 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    2
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text5
  1384  00088A                     __ptext5:
  1385                           	opt stack 0
  1386  00088A                     _ledoff:
  1387                           	opt stack 28
  1388                           
  1389                           ;incstack = 0
  1390                           ;ledoff@n stored from wreg
  1391  00088A  6E13               	movwf	ledoff@n,c
  1392                           
  1393                           ;led.c: 22: TRISE0=0;TRISE1=0;TRISE2=0;
  1394  00088C  9096               	bcf	3990,0,c	;volatile
  1395  00088E  9296               	bcf	3990,1,c	;volatile
  1396  000890  9496               	bcf	3990,2,c	;volatile
  1397                           
  1398                           ;led.c: 23: switch(n)
  1399  000892  D006               	goto	l1290
  1400  000894                     l149:
  1401  000894  948D               	bcf	3981,2,c	;volatile
  1402  000896  D00E               	goto	l153
  1403  000898                     l151:
  1404  000898  928D               	bcf	3981,1,c	;volatile
  1405  00089A  D00C               	goto	l153
  1406  00089C                     l152:
  1407  00089C  908D               	bcf	3981,0,c	;volatile
  1408  00089E  D00A               	goto	l153
  1409  0008A0                     l1290:
  1410  0008A0  5013               	movf	ledoff@n,w,c
  1411                           
  1412                           ; Switch size 1, requested type "space"
  1413                           ; Number of cases is 3, Range of values is 1 to 3
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte           10     6 (average)
  1417                           ;	Chosen strategy is simple_byte
  1418  0008A2  0A01               	xorlw	1	; case 1
  1419  0008A4  B4D8               	btfsc	status,2,c
  1420  0008A6  D7F6               	goto	l149
  1421  0008A8  0A03               	xorlw	3	; case 2
  1422  0008AA  B4D8               	btfsc	status,2,c
  1423  0008AC  D7F5               	goto	l151
  1424  0008AE  0A01               	xorlw	1	; case 3
  1425  0008B0  B4D8               	btfsc	status,2,c
  1426  0008B2  D7F4               	goto	l152
  1427  0008B4                     l153:
  1428  0008B4  0012               	return	
  1429  0008B6                     __end_of_ledoff:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodh	equ	0xFF4
  1436                           prodl	equ	0xFF3
  1437                           intcon	equ	0xFF2
  1438                           intcon2	equ	0xFF1
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           postdec1	equ	0xFE5
  1442                           fsr1l	equ	0xFE1
  1443                           status	equ	0xFD8
  1444                           
  1445 ;; *************** function _led_dot *****************
  1446 ;; Defined at:
  1447 ;;		line 101 in file "led7.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  tp              1    wreg     unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  tp              1   18[COMRAM] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;		None               void
  1454 ;; Registers used:
  1455 ;;		wreg
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0
  1462 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1464 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1465 ;;Total ram usage:        1 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    2
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text6
  1476  0008F6                     __ptext6:
  1477                           	opt stack 0
  1478  0008F6                     _led_dot:
  1479                           	opt stack 28
  1480                           
  1481                           ;incstack = 0
  1482                           ;led_dot@tp stored from wreg
  1483  0008F6  6E13               	movwf	led_dot@tp,c
  1484                           
  1485                           ;led7.c: 103: dot=tp;
  1486  0008F8  C013  F04B         	movff	led_dot@tp,_dot
  1487  0008FC  0012               	return	
  1488  0008FE                     __end_of_led_dot:
  1489                           	opt stack 0
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           prodh	equ	0xFF4
  1495                           prodl	equ	0xFF3
  1496                           intcon	equ	0xFF2
  1497                           intcon2	equ	0xFF1
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           postdec1	equ	0xFE5
  1501                           fsr1l	equ	0xFE1
  1502                           status	equ	0xFD8
  1503                           
  1504 ;; *************** function _led_dec *****************
  1505 ;; Defined at:
  1506 ;;		line 105 in file "led7.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  vh              2   31[COMRAM] unsigned int 
  1509 ;;  vl              2   33[COMRAM] unsigned int 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;		None               void
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1521 ;;      Params:         4       0       0       0       0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1524 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1525 ;;Total ram usage:        4 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    3
  1528 ;; This function calls:
  1529 ;;		___lwdiv
  1530 ;;		___lwmod
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text7
  1537  0006B2                     __ptext7:
  1538                           	opt stack 0
  1539  0006B2                     _led_dec:
  1540                           	opt stack 27
  1541                           
  1542                           ;led7.c: 107: DD1=vh/10;
  1543                           
  1544                           ;incstack = 0
  1545  0006B2  C020  F019         	movff	led_dec@vh,___lwdiv@dividend
  1546  0006B6  C021  F01A         	movff	led_dec@vh+1,___lwdiv@dividend+1
  1547  0006BA  0E00               	movlw	0
  1548  0006BC  6E1C               	movwf	___lwdiv@divisor+1,c
  1549  0006BE  0E0A               	movlw	10
  1550  0006C0  6E1B               	movwf	___lwdiv@divisor,c
  1551  0006C2  EC8A  F003         	call	___lwdiv	;wreg free
  1552  0006C6  5019               	movf	?___lwdiv,w,c
  1553  0006C8  6E3C               	movwf	_DD1,c
  1554                           
  1555                           ;led7.c: 108: DD2=vh%10;
  1556  0006CA  C020  F013         	movff	led_dec@vh,___lwmod@dividend
  1557  0006CE  C021  F014         	movff	led_dec@vh+1,___lwmod@dividend+1
  1558  0006D2  0E00               	movlw	0
  1559  0006D4  6E16               	movwf	___lwmod@divisor+1,c
  1560  0006D6  0E0A               	movlw	10
  1561  0006D8  6E15               	movwf	___lwmod@divisor,c
  1562  0006DA  ECD5  F003         	call	___lwmod	;wreg free
  1563  0006DE  5013               	movf	?___lwmod,w,c
  1564  0006E0  6E3D               	movwf	_DD2,c
  1565                           
  1566                           ;led7.c: 109: DD3=vl/10;
  1567  0006E2  C022  F019         	movff	led_dec@vl,___lwdiv@dividend
  1568  0006E6  C023  F01A         	movff	led_dec@vl+1,___lwdiv@dividend+1
  1569  0006EA  0E00               	movlw	0
  1570  0006EC  6E1C               	movwf	___lwdiv@divisor+1,c
  1571  0006EE  0E0A               	movlw	10
  1572  0006F0  6E1B               	movwf	___lwdiv@divisor,c
  1573  0006F2  EC8A  F003         	call	___lwdiv	;wreg free
  1574  0006F6  5019               	movf	?___lwdiv,w,c
  1575  0006F8  6E3E               	movwf	_DD3,c
  1576                           
  1577                           ;led7.c: 110: DD4=vl%10;
  1578  0006FA  C022  F013         	movff	led_dec@vl,___lwmod@dividend
  1579  0006FE  C023  F014         	movff	led_dec@vl+1,___lwmod@dividend+1
  1580  000702  0E00               	movlw	0
  1581  000704  6E16               	movwf	___lwmod@divisor+1,c
  1582  000706  0E0A               	movlw	10
  1583  000708  6E15               	movwf	___lwmod@divisor,c
  1584  00070A  ECD5  F003         	call	___lwmod	;wreg free
  1585  00070E  5013               	movf	?___lwmod,w,c
  1586  000710  6E3F               	movwf	_DD4,c
  1587  000712  0012               	return	
  1588  000714                     __end_of_led_dec:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           prodh	equ	0xFF4
  1595                           prodl	equ	0xFF3
  1596                           intcon	equ	0xFF2
  1597                           intcon2	equ	0xFF1
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1l	equ	0xFE1
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function ___lwmod *****************
  1605 ;; Defined at:
  1606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  dividend        2   18[COMRAM] unsigned int 
  1609 ;;  divisor         2   20[COMRAM] unsigned int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  counter         1   22[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  2   18[COMRAM] unsigned int 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1621 ;;      Params:         4       0       0       0       0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1624 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1625 ;;Total ram usage:        5 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    2
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;;		_led_dec
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text8
  1637  0007AA                     __ptext8:
  1638                           	opt stack 0
  1639  0007AA                     ___lwmod:
  1640                           	opt stack 27
  1641                           
  1642                           ;incstack = 0
  1643  0007AA  5016               	movf	___lwmod@divisor+1,w,c
  1644  0007AC  1015               	iorwf	___lwmod@divisor,w,c
  1645  0007AE  B4D8               	btfsc	status,2,c
  1646  0007B0  D018               	goto	l781
  1647  0007B2  0E01               	movlw	1
  1648  0007B4  6E17               	movwf	___lwmod@counter,c
  1649  0007B6  D004               	goto	l1276
  1650  0007B8                     l1274:
  1651  0007B8  90D8               	bcf	status,0,c
  1652  0007BA  3615               	rlcf	___lwmod@divisor,f,c
  1653  0007BC  3616               	rlcf	___lwmod@divisor+1,f,c
  1654  0007BE  2A17               	incf	___lwmod@counter,f,c
  1655  0007C0                     l1276:
  1656  0007C0  AE16               	btfss	___lwmod@divisor+1,7,c
  1657  0007C2  D7FA               	goto	l1274
  1658  0007C4                     l1278:
  1659  0007C4  5015               	movf	___lwmod@divisor,w,c
  1660  0007C6  5C13               	subwf	___lwmod@dividend,w,c
  1661  0007C8  5016               	movf	___lwmod@divisor+1,w,c
  1662  0007CA  5814               	subwfb	___lwmod@dividend+1,w,c
  1663  0007CC  A0D8               	btfss	status,0,c
  1664  0007CE  D004               	goto	l1282
  1665  0007D0  5015               	movf	___lwmod@divisor,w,c
  1666  0007D2  5E13               	subwf	___lwmod@dividend,f,c
  1667  0007D4  5016               	movf	___lwmod@divisor+1,w,c
  1668  0007D6  5A14               	subwfb	___lwmod@dividend+1,f,c
  1669  0007D8                     l1282:
  1670  0007D8  90D8               	bcf	status,0,c
  1671  0007DA  3216               	rrcf	___lwmod@divisor+1,f,c
  1672  0007DC  3215               	rrcf	___lwmod@divisor,f,c
  1673  0007DE  2E17               	decfsz	___lwmod@counter,f,c
  1674  0007E0  D7F1               	goto	l1278
  1675  0007E2                     l781:
  1676  0007E2  C013  F013         	movff	___lwmod@dividend,?___lwmod
  1677  0007E6  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  1678  0007EA  0012               	return	
  1679  0007EC                     __end_of___lwmod:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           prodh	equ	0xFF4
  1686                           prodl	equ	0xFF3
  1687                           intcon	equ	0xFF2
  1688                           intcon2	equ	0xFF1
  1689                           postinc0	equ	0xFEE
  1690                           wreg	equ	0xFE8
  1691                           postdec1	equ	0xFE5
  1692                           fsr1l	equ	0xFE1
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function ___lwdiv *****************
  1696 ;; Defined at:
  1697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  dividend        2   24[COMRAM] unsigned int 
  1700 ;;  divisor         2   26[COMRAM] unsigned int 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  quotient        2   28[COMRAM] unsigned int 
  1703 ;;  counter         1   30[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2   24[COMRAM] unsigned int 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         4       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        7 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    2
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;;		_led_dec
  1725 ;;		_pwm0
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text9
  1730  000714                     __ptext9:
  1731                           	opt stack 0
  1732  000714                     ___lwdiv:
  1733                           	opt stack 27
  1734                           
  1735                           ;incstack = 0
  1736  000714  0E00               	movlw	0
  1737  000716  6E1E               	movwf	___lwdiv@quotient+1,c
  1738  000718  0E00               	movlw	0
  1739  00071A  6E1D               	movwf	___lwdiv@quotient,c
  1740  00071C  501C               	movf	___lwdiv@divisor+1,w,c
  1741  00071E  101B               	iorwf	___lwdiv@divisor,w,c
  1742  000720  B4D8               	btfsc	status,2,c
  1743  000722  D01C               	goto	l771
  1744  000724  0E01               	movlw	1
  1745  000726  6E1F               	movwf	___lwdiv@counter,c
  1746  000728  D004               	goto	l1256
  1747  00072A                     l1254:
  1748  00072A  90D8               	bcf	status,0,c
  1749  00072C  361B               	rlcf	___lwdiv@divisor,f,c
  1750  00072E  361C               	rlcf	___lwdiv@divisor+1,f,c
  1751  000730  2A1F               	incf	___lwdiv@counter,f,c
  1752  000732                     l1256:
  1753  000732  AE1C               	btfss	___lwdiv@divisor+1,7,c
  1754  000734  D7FA               	goto	l1254
  1755  000736                     l1258:
  1756  000736  90D8               	bcf	status,0,c
  1757  000738  361D               	rlcf	___lwdiv@quotient,f,c
  1758  00073A  361E               	rlcf	___lwdiv@quotient+1,f,c
  1759  00073C  501B               	movf	___lwdiv@divisor,w,c
  1760  00073E  5C19               	subwf	___lwdiv@dividend,w,c
  1761  000740  501C               	movf	___lwdiv@divisor+1,w,c
  1762  000742  581A               	subwfb	___lwdiv@dividend+1,w,c
  1763  000744  A0D8               	btfss	status,0,c
  1764  000746  D005               	goto	l1266
  1765  000748  501B               	movf	___lwdiv@divisor,w,c
  1766  00074A  5E19               	subwf	___lwdiv@dividend,f,c
  1767  00074C  501C               	movf	___lwdiv@divisor+1,w,c
  1768  00074E  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1769  000750  801D               	bsf	___lwdiv@quotient,0,c
  1770  000752                     l1266:
  1771  000752  90D8               	bcf	status,0,c
  1772  000754  321C               	rrcf	___lwdiv@divisor+1,f,c
  1773  000756  321B               	rrcf	___lwdiv@divisor,f,c
  1774  000758  2E1F               	decfsz	___lwdiv@counter,f,c
  1775  00075A  D7ED               	goto	l1258
  1776  00075C                     l771:
  1777  00075C  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  1778  000760  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1779  000764  0012               	return	
  1780  000766                     __end_of___lwdiv:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           intcon	equ	0xFF2
  1789                           intcon2	equ	0xFF1
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           postdec1	equ	0xFE5
  1793                           fsr1l	equ	0xFE1
  1794                           status	equ	0xFD8
  1795                           
  1796 ;; *************** function _adc_get *****************
  1797 ;; Defined at:
  1798 ;;		line 5 in file "adc.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  n               1    wreg     unsigned char 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  n               1   20[COMRAM] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2   18[COMRAM] unsigned int 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1812 ;;      Params:         2       0       0       0       0       0       0       0       0
  1813 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1815 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1816 ;;Total ram usage:        3 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    2
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text10
  1827  000766                     __ptext10:
  1828                           	opt stack 0
  1829  000766                     _adc_get:
  1830                           	opt stack 28
  1831                           
  1832                           ;incstack = 0
  1833                           ;adc_get@n stored from wreg
  1834  000766  6E15               	movwf	adc_get@n,c
  1835                           
  1836                           ;adc.c: 7: ADCON1=0x0d;ADCON2=0xa5;
  1837  000768  0E0D               	movlw	13
  1838  00076A  6EC1               	movwf	4033,c	;volatile
  1839  00076C  0EA5               	movlw	165
  1840  00076E  6EC0               	movwf	4032,c	;volatile
  1841                           
  1842                           ;adc.c: 8: switch(n)
  1843  000770  D00D               	goto	l1302
  1844  000772                     l1296:
  1845  000772  0E0D               	movlw	13
  1846  000774  6EC1               	movwf	4033,c	;volatile
  1847  000776  0EA5               	movlw	165
  1848  000778  6EC0               	movwf	4032,c	;volatile
  1849  00077A  0E01               	movlw	1
  1850  00077C  D005               	goto	L1
  1851  00077E                     l1298:
  1852  00077E  0E0D               	movlw	13
  1853  000780  6EC1               	movwf	4033,c	;volatile
  1854  000782  0EA5               	movlw	165
  1855  000784  6EC0               	movwf	4032,c	;volatile
  1856  000786  0E05               	movlw	5
  1857  000788                     L1:
  1858  000788  6EC2               	movwf	4034,c	;volatile
  1859  00078A  D007               	goto	l114
  1860  00078C                     l1302:
  1861  00078C  5015               	movf	adc_get@n,w,c
  1862                           
  1863                           ; Switch size 1, requested type "space"
  1864                           ; Number of cases is 2, Range of values is 0 to 1
  1865                           ; switch strategies available:
  1866                           ; Name         Instructions Cycles
  1867                           ; simple_byte            7     4 (average)
  1868                           ;	Chosen strategy is simple_byte
  1869  00078E  0A00               	xorlw	0	; case 0
  1870  000790  B4D8               	btfsc	status,2,c
  1871  000792  D7EF               	goto	l1296
  1872  000794  0A01               	xorlw	1	; case 1
  1873  000796  B4D8               	btfsc	status,2,c
  1874  000798  D7F2               	goto	l1298
  1875  00079A                     l114:
  1876                           
  1877                           ;adc.c: 28: GO=1;
  1878  00079A  82C2               	bsf	4034,1,c	;volatile
  1879  00079C                     l116:
  1880  00079C  B2C2               	btfsc	4034,1,c	;volatile
  1881  00079E  D7FE               	goto	l116
  1882                           
  1883                           ;adc.c: 30: return ADRES;
  1884  0007A0  CFC3 F013          	movff	4035,?_adc_get	;volatile
  1885  0007A4  CFC4 F014          	movff	4036,?_adc_get+1	;volatile
  1886  0007A8  0012               	return	
  1887  0007AA                     __end_of_adc_get:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           prodh	equ	0xFF4
  1894                           prodl	equ	0xFF3
  1895                           intcon	equ	0xFF2
  1896                           intcon2	equ	0xFF1
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           postdec1	equ	0xFE5
  1900                           fsr1l	equ	0xFE1
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function _hisr *****************
  1904 ;; Defined at:
  1905 ;;		line 35 in file "vitual_1.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;		None               void
  1912 ;; Registers used:
  1913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1921 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1922 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1923 ;;Total ram usage:       14 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    1
  1926 ;; This function calls:
  1927 ;;		_led_scan
  1928 ;; This function is called by:
  1929 ;;		Interrupt level 2
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	intcode
  1934  000008                     __pintcode:
  1935                           	opt stack 0
  1936  000008                     _hisr:
  1937                           	opt stack 27
  1938                           
  1939                           ;incstack = 0
  1940  000008  CFFA F005          	movff	pclath,??_hisr
  1941  00000C  CFFB F006          	movff	pclatu,??_hisr+1
  1942  000010  CFE9 F007          	movff	fsr0l,??_hisr+2
  1943  000014  ED1A  F003         	call	int_func,f	;refresh shadow registers
  1944                           pclatu	equ	0xFFB
  1945                           pclath	equ	0xFFA
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           prodh	equ	0xFF4
  1951                           prodl	equ	0xFF3
  1952                           intcon	equ	0xFF2
  1953                           intcon2	equ	0xFF1
  1954                           postinc0	equ	0xFEE
  1955                           fsr0l	equ	0xFE9
  1956                           wreg	equ	0xFE8
  1957                           postdec1	equ	0xFE5
  1958                           fsr1l	equ	0xFE1
  1959                           status	equ	0xFD8
  1960                           
  1961                           	psect	intcode_body
  1962  000634                     __pintcode_body:
  1963                           	opt stack 27
  1964  000634                     int_func:
  1965                           	opt stack 27
  1966  000634  0006               	pop		; remove dummy address from shadow register refresh
  1967  000636  CFEA F008          	movff	fsr0h,??_hisr+3
  1968  00063A  CFE1 F009          	movff	fsr1l,??_hisr+4
  1969  00063E  CFE2 F00A          	movff	fsr1h,??_hisr+5
  1970  000642  CFD9 F00B          	movff	fsr2l,??_hisr+6
  1971  000646  CFDA F00C          	movff	fsr2h,??_hisr+7
  1972  00064A  CFF3 F00D          	movff	prodl,??_hisr+8
  1973  00064E  CFF4 F00E          	movff	prodh,??_hisr+9
  1974  000652  CFF6 F00F          	movff	tblptrl,??_hisr+10
  1975  000656  CFF7 F010          	movff	tblptrh,??_hisr+11
  1976  00065A  CFF8 F011          	movff	tblptru,??_hisr+12
  1977  00065E  CFF5 F012          	movff	tablat,??_hisr+13
  1978                           
  1979                           ;vitual_1.c: 37: TMR0IF=0;
  1980  000662  94F2               	bcf	intcon,2,c	;volatile
  1981                           
  1982                           ;vitual_1.c: 38: TMR0H=(65536-4000)>>8;
  1983  000664  0EF0               	movlw	240
  1984  000666  6ED7               	movwf	4055,c	;volatile
  1985                           
  1986                           ;vitual_1.c: 39: TMR0L=(65536-4000);
  1987  000668  0E60               	movlw	96
  1988  00066A  6ED6               	movwf	4054,c	;volatile
  1989                           
  1990                           ;vitual_1.c: 40: led_scan();
  1991  00066C  ECA4  F002         	call	_led_scan	;wreg free
  1992                           
  1993                           ;vitual_1.c: 41: tick++;t2++;
  1994  000670  4A49               	infsnz	_tick,f,c	;volatile
  1995  000672  2A4A               	incf	_tick+1,f,c	;volatile
  1996  000674  4A47               	infsnz	_t2,f,c	;volatile
  1997  000676  2A48               	incf	_t2+1,f,c	;volatile
  1998  000678  C012  FFF5         	movff	??_hisr+13,tablat
  1999  00067C  C011  FFF8         	movff	??_hisr+12,tblptru
  2000  000680  C010  FFF7         	movff	??_hisr+11,tblptrh
  2001  000684  C00F  FFF6         	movff	??_hisr+10,tblptrl
  2002  000688  C00E  FFF4         	movff	??_hisr+9,prodh
  2003  00068C  C00D  FFF3         	movff	??_hisr+8,prodl
  2004  000690  C00C  FFDA         	movff	??_hisr+7,fsr2h
  2005  000694  C00B  FFD9         	movff	??_hisr+6,fsr2l
  2006  000698  C00A  FFE2         	movff	??_hisr+5,fsr1h
  2007  00069C  C009  FFE1         	movff	??_hisr+4,fsr1l
  2008  0006A0  C008  FFEA         	movff	??_hisr+3,fsr0h
  2009  0006A4  C007  FFE9         	movff	??_hisr+2,fsr0l
  2010  0006A8  C006  FFFB         	movff	??_hisr+1,pclatu
  2011  0006AC  C005  FFFA         	movff	??_hisr,pclath
  2012  0006B0  0011               	retfie		f
  2013  0006B2                     __end_of_hisr:
  2014                           	opt stack 0
  2015                           pclatu	equ	0xFFB
  2016                           pclath	equ	0xFFA
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           intcon	equ	0xFF2
  2024                           intcon2	equ	0xFF1
  2025                           postinc0	equ	0xFEE
  2026                           fsr0h	equ	0xFEA
  2027                           fsr0l	equ	0xFE9
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1h	equ	0xFE2
  2031                           fsr1l	equ	0xFE1
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _led_scan *****************
  2037 ;; Defined at:
  2038 ;;		line 19 in file "led7.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  dd              1    3[COMRAM] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;		None               void
  2045 ;; Registers used:
  2046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0
  2053 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2054 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2055 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2056 ;;Total ram usage:        4 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_hisr
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text12
  2066  000548                     __ptext12:
  2067                           	opt stack 0
  2068  000548                     _led_scan:
  2069                           	opt stack 27
  2070                           
  2071                           ;led7.c: 21: char dd=0;
  2072                           
  2073                           ;incstack = 0
  2074  000548  0E00               	movlw	0
  2075  00054A  6E04               	movwf	led_scan@dd,c
  2076                           
  2077                           ;led7.c: 22: LATB3=1;LATB2=1;LATB1=1;LATB0=1;
  2078  00054C  868A               	bsf	3978,3,c	;volatile
  2079  00054E  848A               	bsf	3978,2,c	;volatile
  2080  000550  828A               	bsf	3978,1,c	;volatile
  2081  000552  808A               	bsf	3978,0,c	;volatile
  2082                           
  2083                           ;led7.c: 23: switch(a)
  2084  000554  D03A               	goto	i2l920
  2085  000556                     i2l193:
  2086  000556  968A               	bcf	3978,3,c	;volatile
  2087  000558  503C               	movf	_DD1,w,c
  2088  00055A  0D01               	mullw	1
  2089  00055C  0E32               	movlw	low _led
  2090  00055E  24F3               	addwf	prodl,w,c
  2091  000560  6ED9               	movwf	fsr2l,c
  2092  000562  0E00               	movlw	high _led
  2093  000564  20F4               	addwfc	prodh,w,c
  2094  000566  6EDA               	movwf	fsr2h,c
  2095  000568  50DF               	movf	indf2,w,c
  2096  00056A  6E8C               	movwf	3980,c	;volatile
  2097                           
  2098                           ;led7.c: 26: if(dot&8){dd=1;}
  2099  00056C  A64B               	btfss	_dot,3,c
  2100  00056E  D042               	goto	i2l922
  2101  000570  D029               	goto	i2u10_40
  2102  000572                     i2l196:
  2103  000572  948A               	bcf	3978,2,c	;volatile
  2104  000574  503D               	movf	_DD2,w,c
  2105  000576  0D01               	mullw	1
  2106  000578  0E32               	movlw	low _led
  2107  00057A  24F3               	addwf	prodl,w,c
  2108  00057C  6ED9               	movwf	fsr2l,c
  2109  00057E  0E00               	movlw	high _led
  2110  000580  20F4               	addwfc	prodh,w,c
  2111  000582  6EDA               	movwf	fsr2h,c
  2112  000584  50DF               	movf	indf2,w,c
  2113  000586  6E8C               	movwf	3980,c	;volatile
  2114                           
  2115                           ;led7.c: 29: if(dot&4){dd=1;}
  2116  000588  A44B               	btfss	_dot,2,c
  2117  00058A  D034               	goto	i2l922
  2118  00058C  D01B               	goto	i2u10_40
  2119  00058E                     i2l198:
  2120  00058E  928A               	bcf	3978,1,c	;volatile
  2121  000590  503E               	movf	_DD3,w,c
  2122  000592  0D01               	mullw	1
  2123  000594  0E32               	movlw	low _led
  2124  000596  24F3               	addwf	prodl,w,c
  2125  000598  6ED9               	movwf	fsr2l,c
  2126  00059A  0E00               	movlw	high _led
  2127  00059C  20F4               	addwfc	prodh,w,c
  2128  00059E  6EDA               	movwf	fsr2h,c
  2129  0005A0  50DF               	movf	indf2,w,c
  2130  0005A2  6E8C               	movwf	3980,c	;volatile
  2131                           
  2132                           ;led7.c: 32: if(dot&2){dd=1;}
  2133  0005A4  A24B               	btfss	_dot,1,c
  2134  0005A6  D026               	goto	i2l922
  2135  0005A8  D00D               	goto	i2u10_40
  2136  0005AA                     i2l200:
  2137  0005AA  908A               	bcf	3978,0,c	;volatile
  2138  0005AC  503F               	movf	_DD4,w,c
  2139  0005AE  0D01               	mullw	1
  2140  0005B0  0E32               	movlw	low _led
  2141  0005B2  24F3               	addwf	prodl,w,c
  2142  0005B4  6ED9               	movwf	fsr2l,c
  2143  0005B6  0E00               	movlw	high _led
  2144  0005B8  20F4               	addwfc	prodh,w,c
  2145  0005BA  6EDA               	movwf	fsr2h,c
  2146  0005BC  50DF               	movf	indf2,w,c
  2147  0005BE  6E8C               	movwf	3980,c	;volatile
  2148                           
  2149                           ;led7.c: 35: if(dot&1){dd=1;}
  2150  0005C0  A04B               	btfss	_dot,0,c
  2151  0005C2  D018               	goto	i2l922
  2152  0005C4                     i2u10_40:
  2153  0005C4  0E01               	movlw	1
  2154  0005C6  6E04               	movwf	led_scan@dd,c
  2155  0005C8  D015               	goto	i2l922
  2156  0005CA                     i2l920:
  2157  0005CA  C041  F001         	movff	_a,??_led_scan
  2158  0005CE  C042  F002         	movff	_a+1,??_led_scan+1
  2159                           
  2160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2161                           ; Switch size 1, requested type "space"
  2162                           ; Number of cases is 1, Range of values is 0 to 0
  2163                           ; switch strategies available:
  2164                           ; Name         Instructions Cycles
  2165                           ; simple_byte            4     3 (average)
  2166                           ;	Chosen strategy is simple_byte
  2167  0005D2  5002               	movf	??_led_scan+1,w,c
  2168  0005D4  0A00               	xorlw	0	; case 0
  2169  0005D6  A4D8               	btfss	status,2,c
  2170  0005D8  D00D               	goto	i2l922
  2171                           
  2172                           ; Switch size 1, requested type "space"
  2173                           ; Number of cases is 4, Range of values is 0 to 3
  2174                           ; switch strategies available:
  2175                           ; Name         Instructions Cycles
  2176                           ; simple_byte           13     7 (average)
  2177                           ;	Chosen strategy is simple_byte
  2178  0005DA  5001               	movf	??_led_scan,w,c
  2179  0005DC  0A00               	xorlw	0	; case 0
  2180  0005DE  B4D8               	btfsc	status,2,c
  2181  0005E0  D7BA               	goto	i2l193
  2182  0005E2  0A01               	xorlw	1	; case 1
  2183  0005E4  B4D8               	btfsc	status,2,c
  2184  0005E6  D7C5               	goto	i2l196
  2185  0005E8  0A03               	xorlw	3	; case 2
  2186  0005EA  B4D8               	btfsc	status,2,c
  2187  0005EC  D7D0               	goto	i2l198
  2188  0005EE  0A01               	xorlw	1	; case 3
  2189  0005F0  B4D8               	btfsc	status,2,c
  2190  0005F2  D7DB               	goto	i2l200
  2191  0005F4                     i2l922:
  2192                           
  2193                           ;led7.c: 38: if(dd==1)LATD7=0;
  2194  0005F4  0404               	decf	led_scan@dd,w,c
  2195  0005F6  B4D8               	btfsc	status,2,c
  2196  0005F8  9E8C               	bcf	3980,7,c	;volatile
  2197                           
  2198                           ;led7.c: 39: if(light!=18){a++;}else{a=18;}
  2199  0005FA  5040               	movf	_light,w,c
  2200  0005FC  0A12               	xorlw	18
  2201  0005FE  B4D8               	btfsc	status,2,c
  2202  000600  D003               	goto	i2l930
  2203  000602  4A41               	infsnz	_a,f,c
  2204  000604  2A42               	incf	_a+1,f,c
  2205  000606  D004               	goto	i2l932
  2206  000608                     i2l930:
  2207  000608  0E00               	movlw	0
  2208  00060A  6E42               	movwf	_a+1,c
  2209  00060C  0E12               	movlw	18
  2210  00060E  6E41               	movwf	_a,c
  2211  000610                     i2l932:
  2212                           
  2213                           ;led7.c: 41: if(a>light)a=0;
  2214  000610  5040               	movf	_light,w,c
  2215  000612  6E01               	movwf	??_led_scan& (0+255),c
  2216  000614  6A02               	clrf	(??_led_scan+1)& (0+255),c
  2217  000616  5002               	movf	??_led_scan+1,w,c
  2218  000618  0A80               	xorlw	128
  2219  00061A  6E03               	movwf	(??_led_scan+2)& (0+255),c
  2220  00061C  5041               	movf	_a,w,c
  2221  00061E  5C01               	subwf	??_led_scan,w,c
  2222  000620  5042               	movf	_a+1,w,c
  2223  000622  0A80               	xorlw	128
  2224  000624  5803               	subwfb	(??_led_scan+2)& (0+255),w,c
  2225  000626  B0D8               	btfsc	status,0,c
  2226  000628  D004               	goto	i2l206
  2227  00062A  0E00               	movlw	0
  2228  00062C  6E42               	movwf	_a+1,c
  2229  00062E  0E00               	movlw	0
  2230  000630  6E41               	movwf	_a,c
  2231  000632                     i2l206:
  2232  000632  0012               	return	
  2233  000634                     __end_of_led_scan:
  2234                           	opt stack 0
  2235  0000                     pclatu	equ	0xFFB
  2236                           pclath	equ	0xFFA
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           prodh	equ	0xFF4
  2242                           prodl	equ	0xFF3
  2243                           intcon	equ	0xFF2
  2244                           intcon2	equ	0xFF1
  2245                           postinc0	equ	0xFEE
  2246                           fsr0h	equ	0xFEA
  2247                           fsr0l	equ	0xFE9
  2248                           wreg	equ	0xFE8
  2249                           postdec1	equ	0xFE5
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           indf2	equ	0xFDF
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8
  2256                           pclatu	equ	0xFFB
  2257                           pclath	equ	0xFFA
  2258                           tblptru	equ	0xFF8
  2259                           tblptrh	equ	0xFF7
  2260                           tblptrl	equ	0xFF6
  2261                           tablat	equ	0xFF5
  2262                           prodh	equ	0xFF4
  2263                           prodl	equ	0xFF3
  2264                           intcon	equ	0xFF2
  2265                           intcon2	equ	0xFF1
  2266                           postinc0	equ	0xFEE
  2267                           fsr0h	equ	0xFEA
  2268                           fsr0l	equ	0xFE9
  2269                           wreg	equ	0xFE8
  2270                           postdec1	equ	0xFE5
  2271                           fsr1h	equ	0xFE2
  2272                           fsr1l	equ	0xFE1
  2273                           indf2	equ	0xFDF
  2274                           fsr2h	equ	0xFDA
  2275                           fsr2l	equ	0xFD9
  2276                           status	equ	0xFD8
  2277                           
  2278                           	psect	rparam
  2279  0000                     pclatu	equ	0xFFB
  2280                           pclath	equ	0xFFA
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           prodh	equ	0xFF4
  2286                           prodl	equ	0xFF3
  2287                           intcon	equ	0xFF2
  2288                           intcon2	equ	0xFF1
  2289                           postinc0	equ	0xFEE
  2290                           fsr0h	equ	0xFEA
  2291                           fsr0l	equ	0xFE9
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           indf2	equ	0xFDF
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_led_dec
    _pwm0->___lwdiv
    _led_dec->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _hisr in COMRAM

    _hisr->_led_scan

Critical Paths under _main in BANK0

    None.

Critical Paths under _hisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hisr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0   13245
                                             35 COMRAM    14    14      0
                            ___lwdiv
                            ___lwmod
                            _adc_get
                            _led_dec
                            _led_dot
                             _ledoff
                              _ledon
                               _pwm0
                            _pwm0off
 ---------------------------------------------------------------------------------
 (1) _pwm0off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm0                                                 2     0      2    2039
                                             31 COMRAM     2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     265
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ledon                                                1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ledoff                                               1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _led_dot                                              1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _led_dec                                              4     0      4    4013
                                             31 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1325
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1646
                                             24 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_get                                              3     1      2      22
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _hisr                                                14    14      0      15
                                              4 COMRAM    14    14      0
                           _led_scan
 ---------------------------------------------------------------------------------
 (4) _led_scan                                             4     4      0      15
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   _adc_get
   _led_dec
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
   _led_dot
   _ledoff
   _ledon
   _pwm0
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _pwm0off

 _hisr (ROOT)
   _led_scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      20        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 25 10:55:26 2017

                      _a 0041                       l91 04C0                       l85 03B4  
                     l88 043A                       _GO 007E11                       _t2 0047  
    ___wmul@multiplicand 0015                      l114 079A                      l116 079C  
                    l141 0868                      l151 0898                      l143 086C  
                    l152 089C                      l144 0870                      l153 08B4  
                    l145 0888                      _DD1 003C                      _DD2 003D  
                    _DD3 003E                      _DD4 003F                      l149 0894  
                    l771 075C                      l781 07E2                      _RA2 007C02  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      _PR2 000FCB                      _r16 0045  
                    _led 0032                      _dot 004B                      prod 000FF3  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1302 078C                     l1314 0874  
                   l1402 0196                     l1500 0462                     l1254 072A  
                   l1256 0732                     l1520 04E8                     l1266 0752  
                   l1258 0736                     l1282 07D8                     l1274 07B8  
                   l1290 08A0                     l1434 02BA                     l1426 0262  
                   l1418 020A                     l1442 0312                     l1354 0078  
                   l1276 07C0                     l1460 0356                     l1278 07C4  
                   l1390 0150                     l1296 0772                     l1480 03DC  
                   l1376 00FE                     l1298 077E                     _GIEH 007F97  
                   _GIEL 007F96                     _LATD 000F8C                     _IPEN 007E87  
                   _r100 0043                     _main 001C                     _hisr 0008  
                   _pwm0 07EC                     _tick 0049                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0018                    ?_main 0001                    ?_hisr 0001  
                  _ADRES 000FC3                    ?_pwm0 0020                    _T0CON 000FD5  
                  _T2CON 000FCA                    _LATB0 007C50          __end_of_adc_get 07AA  
                  _LATB1 007C51                    _LATB2 007C52                    _LATC1 007C59  
                  _LATB3 007C53                    _LATC2 007C5A                    _LATE0 007C68  
                  _LATE1 007C69                    _LATE2 007C6A                    _LATD7 007C67  
        __end_of___lwdiv 0766                    i2l200 05AA          __end_of___lwmod 07EC  
                  i2l206 0632                    i2l193 0556                    i2l196 0572  
                  i2l198 058E                    i2l920 05CA                    i2l930 0608  
                  i2l922 05F4                    i2l932 0610                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _TRISB 000F93                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_led_dec 0714          __end_of_led_dot 08FE  
                  _ledon 085E                    _light 0040          __end_of_pwm0off 08F6  
                  pwm0@n 0020                    tablat 000FF5                    status 000FD8  
        __initialization 0828             __end_of_main 0548             __end_of_hisr 06B2  
           __end_of_pwm0 0828                   ??_main 0024                   ??_hisr 0005  
                 ??_pwm0 0022            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_ledon 0001  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _TMR0IP 007F8A                   _TRISA2 007C92  
                 _TRISC1 007CA1                   _TRISC2 007CA2                   _TRISB4 007C9C  
                 _TRISB5 007C9D                   _TRISE0 007CB0                   _TRISE1 007CB1  
                 _TRISE2 007CB2           __CFG_XINST$OFF 000000         __end_of_led_scan 0634  
                 ___wmul 08B6                ??_adc_get 0015                ??___lwdiv 001D  
              ??___lwmod 0017                   _ledoff 088A                   clear_0 082E  
                 main@x1 002A                   main@x2 0026                   main@x3 002C  
                 main@x4 0028                ??_led_dec 0024                ??_led_dot 0013  
                 ledon@n 0013             __pdataCOMRAM 0032                ??_pwm0off 0013  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0854          __CFG_PBADEN$OFF 000000  
         __pcstackCOMRAM 0001            __end_of_ledon 088A                  ??_ledon 0013  
                ?___wmul 0013                  ?_ledoff 0001                  _CCP1CON 000FBD  
                _CCP2CON 000FBA                  i2u10_40 05C4                ?_led_scan 0001  
                __Hparam 0000                  __Lparam 0000          __size_of___wmul 0026  
                _adc_get 0766                  ___lwdiv 0714                  ___lwmod 07AA  
        __size_of_ledoff 002C                  __pcinit 0828                  __ramtop 0800  
                __ptext0 001C                  __ptext1 08EC                  __ptext2 07EC  
                __ptext3 08B6                  __ptext4 085E                  __ptext5 088A  
                __ptext6 08F6                  __ptext7 06B2                  __ptext8 07AA  
                __ptext9 0714                  _led_dec 06B2                  _led_dot 08F6  
                _pwm0off 08EC           __pintcode_body 0634                  ledoff@n 0013  
             ??_led_scan 0001     end_of_initialization 0854            __Lmediumconst 0000  
                int_func 0634                  postdec1 000FE5                  postinc0 000FEE  
             led_scan@dd 0004           __end_of___wmul 08DC            __pidataCOMRAM 08DC  
         __end_of_ledoff 08B6      start_initialization 0828                 ??___wmul 0017  
               ??_ledoff 0013              __pbssCOMRAM 0041        __size_of_led_scan 00EC  
       ___lwdiv@dividend 0019                __pintcode 0008                 ?_adc_get 0013  
               ?___lwdiv 0019                 ?___lwmod 0013                 ?_led_dec 0020  
               ?_led_dot 0001                 ?_pwm0off 0001         ___lwdiv@quotient 001D  
         __size_of_ledon 002C           ___wmul@product 0017        ___wmul@multiplier 0013  
              led_dec@vh 0020                led_dec@vl 0022                led_dot@tp 0013  
              copy_data0 0848                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_adc_get 0044         __size_of___lwdiv 0052         __size_of___lwmod 0042  
       __size_of_led_dec 0062         __size_of_led_dot 0008                 adc_get@n 0015  
               _main$660 0030                 _main$661 0024                 _main$659 002E  
        ___lwdiv@divisor 001B          ___lwdiv@counter 001F         __size_of_pwm0off 000A  
               __ptext10 0766                 __ptext12 0548                 _led_scan 0548  
          __size_of_main 052C            __size_of_hisr 06AA            __size_of_pwm0 003C  
  __CFG_CPUDIV$OSC1_PLL2 000000                 intlevel2 0000         ___lwmod@dividend 0013  
        ___lwmod@divisor 0015          ___lwmod@counter 0017  
